define(['dart_sdk', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/material/app.dart', 'packages/get/get_core/src/smart_management.dart', 'packages/get/get_core/src/get_main.dart', 'packages/get/get_navigation/src/root/internacionalization.dart', 'packages/get/get_utils/src/extensions/internacionalization.dart', 'packages/flutter/src/material/icon_button.dart', 'packages/get/get_navigation/src/routes/custom_transition.dart', 'packages/get/get_navigation/src/routes/transitions_type.dart', 'packages/flutter/src/cupertino/app.dart', 'packages/flutter/src/cupertino/text_theme.dart', 'packages/flutter/src/foundation/synchronous_future.dart', 'packages/get/get_state_manager/src/simple/list_notifier.dart', 'packages/flutter/src/cupertino/route.dart', 'packages/flutter/src/foundation/change_notifier.dart', 'packages/flutter/src/animation/listener_helpers.dart', 'packages/get/get_navigation/src/routes/default_transitions.dart', 'packages/flutter/src/gestures/monodrag.dart', 'packages/flutter/src/rendering/stack.dart', 'packages/flutter/src/rendering/proxy_box.dart', 'packages/flutter/src/gestures/drag_details.dart', 'packages/flutter/src/gestures/events.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/animation/animation_controller.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/painting/box_shadow.dart', 'packages/flutter/src/painting/gradient.dart', 'packages/flutter/src/widgets/form.dart', 'packages/flutter/src/scheduler/binding.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/material/colors.dart', 'packages/flutter/src/widgets/safe_area.dart', 'packages/flutter/src/widgets/async.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/painting/box_decoration.dart', 'packages/flutter/src/painting/box_border.dart', 'packages/flutter/src/rendering/flex.dart', 'packages/flutter/src/material/progress_indicator.dart', 'packages/flutter/src/widgets/icon.dart', 'packages/flutter/src/painting/strut_style.dart', 'packages/flutter/src/widgets/dismissible.dart', 'packages/flutter/src/foundation/key.dart', 'packages/flutter/src/rendering/tweens.dart', 'packages/get/get_state_manager/src/rx_flutter/rx_obx_widget.dart', 'packages/get/get_state_manager/src/simple/get_widget_cache.dart', 'packages/get/get_instance/src/lifecycle.dart', 'packages/get/get_utils/src/extensions/event_loop_extensions.dart', 'packages/get/get_utils/src/platform/platform_web.dart', 'packages/get/get_state_manager/src/rx_flutter/rx_disposable.dart', 'packages/flutter/src/scheduler/ticker.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/get/get_rx/src/rx_types/rx_types.dart', 'packages/flutter/src/painting/rounded_rectangle_border.dart', 'packages/flutter/src/painting/borders.dart', 'packages/flutter/src/material/button_bar.dart', 'packages/flutter/src/rendering/wrap.dart', 'packages/flutter/src/widgets/will_pop_scope.dart', 'packages/flutter/src/foundation/_platform_web.dart', 'packages/flutter/src/rendering/shifted_box.dart'], (function load__packages__get__get_navigation__src__root__get_material_app_dart(dart_sdk, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__material__app$46dart, packages__get__get_core__src__smart_management$46dart, packages__get__get_core__src__get_main$46dart, packages__get__get_navigation__src__root__internacionalization$46dart, packages__get__get_utils__src__extensions__internacionalization$46dart, packages__flutter__src__material__icon_button$46dart, packages__get__get_navigation__src__routes__custom_transition$46dart, packages__get__get_navigation__src__routes__transitions_type$46dart, packages__flutter__src__cupertino__app$46dart, packages__flutter__src__cupertino__text_theme$46dart, packages__flutter__src__foundation__synchronous_future$46dart, packages__get__get_state_manager__src__simple__list_notifier$46dart, packages__flutter__src__cupertino__route$46dart, packages__flutter__src__foundation__change_notifier$46dart, packages__flutter__src__animation__listener_helpers$46dart, packages__get__get_navigation__src__routes__default_transitions$46dart, packages__flutter__src__gestures__monodrag$46dart, packages__flutter__src__rendering__stack$46dart, packages__flutter__src__rendering__proxy_box$46dart, packages__flutter__src__gestures__drag_details$46dart, packages__flutter__src__gestures__events$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__animation__animation_controller$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__painting__box_shadow$46dart, packages__flutter__src__painting__gradient$46dart, packages__flutter__src__widgets__form$46dart, packages__flutter__src__scheduler__binding$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__material__colors$46dart, packages__flutter__src__widgets__safe_area$46dart, packages__flutter__src__widgets__async$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__painting__box_decoration$46dart, packages__flutter__src__painting__box_border$46dart, packages__flutter__src__rendering__flex$46dart, packages__flutter__src__material__progress_indicator$46dart, packages__flutter__src__widgets__icon$46dart, packages__flutter__src__painting__strut_style$46dart, packages__flutter__src__widgets__dismissible$46dart, packages__flutter__src__foundation__key$46dart, packages__flutter__src__rendering__tweens$46dart, packages__get__get_state_manager__src__rx_flutter__rx_obx_widget$46dart, packages__get__get_state_manager__src__simple__get_widget_cache$46dart, packages__get__get_instance__src__lifecycle$46dart, packages__get__get_utils__src__extensions__event_loop_extensions$46dart, packages__get__get_utils__src__platform__platform_web$46dart, packages__get__get_state_manager__src__rx_flutter__rx_disposable$46dart, packages__flutter__src__scheduler__ticker$46dart, packages__flutter__src__foundation__debug$46dart, packages__get__get_rx__src__rx_types__rx_types$46dart, packages__flutter__src__painting__rounded_rectangle_border$46dart, packages__flutter__src__painting__borders$46dart, packages__flutter__src__material__button_bar$46dart, packages__flutter__src__rendering__wrap$46dart, packages__flutter__src__widgets__will_pop_scope$46dart, packages__flutter__src__foundation___platform_web$46dart, packages__flutter__src__rendering__shifted_box$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const _interceptors = dart_sdk._interceptors;
  const _js_helper = dart_sdk._js_helper;
  const async = dart_sdk.async;
  const _internal = dart_sdk._internal;
  const math = dart_sdk.math;
  const collection = dart_sdk.collection;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const navigator = packages__flutter__src__widgets__widget_span$46dart.src__widgets__navigator;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const localizations = packages__flutter__src__widgets__widget_span$46dart.src__widgets__localizations;
  const shortcuts = packages__flutter__src__widgets__widget_span$46dart.src__widgets__shortcuts;
  const actions = packages__flutter__src__widgets__widget_span$46dart.src__widgets__actions;
  const scroll_configuration = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_configuration;
  const router = packages__flutter__src__widgets__widget_span$46dart.src__widgets__router;
  const text = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text;
  const routes = packages__flutter__src__widgets__widget_span$46dart.src__widgets__routes;
  const pages = packages__flutter__src__widgets__widget_span$46dart.src__widgets__pages;
  const debug = packages__flutter__src__widgets__widget_span$46dart.src__widgets__debug;
  const media_query = packages__flutter__src__widgets__widget_span$46dart.src__widgets__media_query;
  const focus_manager = packages__flutter__src__widgets__widget_span$46dart.src__widgets__focus_manager;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const focus_scope = packages__flutter__src__widgets__widget_span$46dart.src__widgets__focus_scope;
  const transitions = packages__flutter__src__widgets__widget_span$46dart.src__widgets__transitions;
  const ticker_provider = packages__flutter__src__widgets__widget_span$46dart.src__widgets__ticker_provider;
  const gesture_detector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__gesture_detector;
  const overlay = packages__flutter__src__widgets__widget_span$46dart.src__widgets__overlay;
  const scroll_controller = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_controller;
  const binding = packages__flutter__src__widgets__widget_span$46dart.src__widgets__binding;
  const app = packages__flutter__src__material__app$46dart.src__material__app;
  const smart_management = packages__get__get_core__src__smart_management$46dart.get_core__src__smart_management;
  const get_main = packages__get__get_core__src__get_main$46dart.get_core__src__get_main;
  const internacionalization = packages__get__get_navigation__src__root__internacionalization$46dart.get_navigation__src__root__internacionalization;
  const internacionalization$ = packages__get__get_utils__src__extensions__internacionalization$46dart.get_utils__src__extensions__internacionalization;
  const material = packages__flutter__src__material__icon_button$46dart.src__material__material;
  const theme_data = packages__flutter__src__material__icon_button$46dart.src__material__theme_data;
  const scaffold = packages__flutter__src__material__icon_button$46dart.src__material__scaffold;
  const page_transitions_theme = packages__flutter__src__material__icon_button$46dart.src__material__page_transitions_theme;
  const text_button = packages__flutter__src__material__icon_button$46dart.src__material__text_button;
  const debug$ = packages__flutter__src__material__icon_button$46dart.src__material__debug;
  const theme$ = packages__flutter__src__material__icon_button$46dart.src__material__theme;
  const material_localizations = packages__flutter__src__material__icon_button$46dart.src__material__material_localizations;
  const button_theme = packages__flutter__src__material__icon_button$46dart.src__material__button_theme;
  const bottom_sheet = packages__flutter__src__material__icon_button$46dart.src__material__bottom_sheet;
  const custom_transition = packages__get__get_navigation__src__routes__custom_transition$46dart.get_navigation__src__routes__custom_transition;
  const transitions_type = packages__get__get_navigation__src__routes__transitions_type$46dart.get_navigation__src__routes__transitions_type;
  const app$ = packages__flutter__src__cupertino__app$46dart.src__cupertino__app;
  const theme = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__theme;
  const synchronous_future = packages__flutter__src__foundation__synchronous_future$46dart.src__foundation__synchronous_future;
  const list_notifier = packages__get__get_state_manager__src__simple__list_notifier$46dart.get_state_manager__src__simple__list_notifier;
  const route$ = packages__flutter__src__cupertino__route$46dart.src__cupertino__route;
  const change_notifier = packages__flutter__src__foundation__change_notifier$46dart.src__foundation__change_notifier;
  const animation = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animation;
  const animations = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animations;
  const tween = packages__flutter__src__animation__listener_helpers$46dart.src__animation__tween;
  const default_transitions = packages__get__get_navigation__src__routes__default_transitions$46dart.get_navigation__src__routes__default_transitions;
  const monodrag = packages__flutter__src__gestures__monodrag$46dart.src__gestures__monodrag;
  const stack = packages__flutter__src__rendering__stack$46dart.src__rendering__stack;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  const drag_details = packages__flutter__src__gestures__drag_details$46dart.src__gestures__drag_details;
  const events = packages__flutter__src__gestures__events$46dart.src__gestures__events;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const animation_controller = packages__flutter__src__animation__animation_controller$46dart.src__animation__animation_controller;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const box_shadow = packages__flutter__src__painting__box_shadow$46dart.src__painting__box_shadow;
  const gradient = packages__flutter__src__painting__gradient$46dart.src__painting__gradient;
  const form = packages__flutter__src__widgets__form$46dart.src__widgets__form;
  const binding$ = packages__flutter__src__scheduler__binding$46dart.src__scheduler__binding;
  const box$ = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const colors = packages__flutter__src__material__colors$46dart.src__material__colors;
  const safe_area = packages__flutter__src__widgets__safe_area$46dart.src__widgets__safe_area;
  const async$ = packages__flutter__src__widgets__async$46dart.src__widgets__async;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const box_decoration = packages__flutter__src__painting__box_decoration$46dart.src__painting__box_decoration;
  const box_border = packages__flutter__src__painting__box_border$46dart.src__painting__box_border;
  const flex = packages__flutter__src__rendering__flex$46dart.src__rendering__flex;
  const progress_indicator = packages__flutter__src__material__progress_indicator$46dart.src__material__progress_indicator;
  const icon = packages__flutter__src__widgets__icon$46dart.src__widgets__icon;
  const text_style = packages__flutter__src__painting__strut_style$46dart.src__painting__text_style;
  const dismissible = packages__flutter__src__widgets__dismissible$46dart.src__widgets__dismissible;
  const key = packages__flutter__src__foundation__key$46dart.src__foundation__key;
  const tweens = packages__flutter__src__rendering__tweens$46dart.src__rendering__tweens;
  const rx_obx_widget = packages__get__get_state_manager__src__rx_flutter__rx_obx_widget$46dart.get_state_manager__src__rx_flutter__rx_obx_widget;
  const get_widget_cache = packages__get__get_state_manager__src__simple__get_widget_cache$46dart.get_state_manager__src__simple__get_widget_cache;
  const lifecycle = packages__get__get_instance__src__lifecycle$46dart.get_instance__src__lifecycle;
  const event_loop_extensions = packages__get__get_utils__src__extensions__event_loop_extensions$46dart.get_utils__src__extensions__event_loop_extensions;
  const platform = packages__get__get_utils__src__platform__platform_web$46dart.get_utils__src__platform__platform;
  const context_extensions = packages__get__get_utils__src__platform__platform_web$46dart.get_utils__src__extensions__context_extensions;
  const rx_disposable = packages__get__get_state_manager__src__rx_flutter__rx_disposable$46dart.get_state_manager__src__rx_flutter__rx_disposable;
  const ticker = packages__flutter__src__scheduler__ticker$46dart.src__scheduler__ticker;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const rx_types = packages__get__get_rx__src__rx_types__rx_types$46dart.get_rx__src__rx_types__rx_types;
  const rounded_rectangle_border = packages__flutter__src__painting__rounded_rectangle_border$46dart.src__painting__rounded_rectangle_border;
  const borders = packages__flutter__src__painting__borders$46dart.src__painting__borders;
  const dialog = packages__flutter__src__material__button_bar$46dart.src__material__dialog;
  const wrap = packages__flutter__src__rendering__wrap$46dart.src__rendering__wrap;
  const will_pop_scope = packages__flutter__src__widgets__will_pop_scope$46dart.src__widgets__will_pop_scope;
  const platform$ = packages__flutter__src__foundation___platform_web$46dart.src__foundation__platform;
  const shifted_box = packages__flutter__src__rendering__shifted_box$46dart.src__rendering__shifted_box;
  var get_material_app = Object.create(dart.library);
  var get_cupertino_app = Object.create(dart.library);
  var router_outlet = Object.create(dart.library);
  var get_router_delegate = Object.create(dart.library);
  var get_nav_config = Object.create(dart.library);
  var get_information_parser = Object.create(dart.library);
  var route_middleware = Object.create(dart.library);
  var get_transition_mixin = Object.create(dart.library);
  var default_route = Object.create(dart.library);
  var snack = Object.create(dart.library);
  var snack_route = Object.create(dart.library);
  var route_observer = Object.create(dart.library);
  var simple_builder = Object.create(dart.library);
  var mixin_state = Object.create(dart.library);
  var get_state = Object.create(dart.library);
  var get_view = Object.create(dart.library);
  var get_responsive = Object.create(dart.library);
  var get_controllers = Object.create(dart.library);
  var rx_ticket_provider_mixin = Object.create(dart.library);
  var instance_manager = Object.create(dart.library);
  var rx_notifier = Object.create(dart.library);
  var rx_getx_widget = Object.create(dart.library);
  var get_state_manager = Object.create(dart.library);
  var root_controller = Object.create(dart.library);
  var get_route = Object.create(dart.library);
  var parse_route = Object.create(dart.library);
  var dialog_route = Object.create(dart.library);
  var extension_navigation = Object.create(dart.library);
  var bottomsheet$ = Object.create(dart.library);
  var get_navigation = Object.create(dart.library);
  var route_manager = Object.create(dart.library);
  var extension_instance = Object.create(dart.library);
  var router_report = Object.create(dart.library);
  var get_instance = Object.create(dart.library);
  var bindings_interface = Object.create(dart.library);
  var get_instance$ = Object.create(dart.library);
  var get_reset = Object.create(dart.library);
  var get = Object.create(dart.library);
  var $first = dartx.first;
  var $contains = dartx.contains;
  var $addAll = dartx.addAll;
  var $length = dartx.length;
  var $skip = dartx.skip;
  var $take = dartx.take;
  var $toList = dartx.toList;
  var $add = dartx.add;
  var $whereType = dartx.whereType;
  var $last = dartx.last;
  var $indexOf = dartx.indexOf;
  var $_get = dartx._get;
  var $_set = dartx._set;
  var $removeAt = dartx.removeAt;
  var $indexWhere = dartx.indexWhere;
  var $where = dartx.where;
  var $map = dartx.map;
  var $isEmpty = dartx.isEmpty;
  var $removeLast = dartx.removeLast;
  var $cast = dartx.cast;
  var $firstWhere = dartx.firstWhere;
  var $containsKey = dartx.containsKey;
  var $skipWhile = dartx.skipWhile;
  var $any = dartx.any;
  var $compareTo = dartx.compareTo;
  var $sort = dartx.sort;
  var $forEach = dartx.forEach;
  var $entries = dartx.entries;
  var $addEntries = dartx.addEntries;
  var $abs = dartx.abs;
  var $floor = dartx.floor;
  var $isNotEmpty = dartx.isNotEmpty;
  var $runtimeType = dartx.runtimeType;
  var $hashCode = dartx.hashCode;
  var $toString = dartx.toString;
  var $startsWith = dartx.startsWith;
  var $replaceAllMapped = dartx.replaceAllMapped;
  var $replaceAll = dartx.replaceAll;
  var $split = dartx.split;
  var $endsWith = dartx.endsWith;
  var $substring = dartx.substring;
  var $putIfAbsent = dartx.putIfAbsent;
  var $clear = dartx.clear;
  var $remove = dartx.remove;
  var $keys = dartx.keys;
  dart._checkModuleNullSafetyMode(false);
  var T$ = {
    StringL: () => (T$.StringL = dart.constFn(dart.legacy(core.String)))(),
    WidgetL: () => (T$.WidgetL = dart.constFn(dart.legacy(framework.Widget)))(),
    BuildContextL: () => (T$.BuildContextL = dart.constFn(dart.legacy(framework.BuildContext)))(),
    BuildContextLToWidgetL: () => (T$.BuildContextLToWidgetL = dart.constFn(dart.fnType(T$.WidgetL(), [T$.BuildContextL()])))(),
    BuildContextLToLWidgetL: () => (T$.BuildContextLToLWidgetL = dart.constFn(dart.legacy(T$.BuildContextLToWidgetL())))(),
    NavigatorObserverL: () => (T$.NavigatorObserverL = dart.constFn(dart.legacy(navigator.NavigatorObserver)))(),
    LocaleL: () => (T$.LocaleL = dart.constFn(dart.legacy(ui.Locale)))(),
    JSArrayOfRoute: () => (T$.JSArrayOfRoute = dart.constFn(_interceptors.JSArray$(navigator.Route)))(),
    _LocationL: () => (T$._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))(),
    GetBuilderOfGetMaterialController: () => (T$.GetBuilderOfGetMaterialController = dart.constFn(get_state.GetBuilder$(root_controller.GetMaterialController)))(),
    GetBuilderStateOfGetMaterialController: () => (T$.GetBuilderStateOfGetMaterialController = dart.constFn(get_state.GetBuilderState$(root_controller.GetMaterialController)))(),
    GetBuilderStateOfGetMaterialControllerTovoid: () => (T$.GetBuilderStateOfGetMaterialControllerTovoid = dart.constFn(dart.fnType(dart.void, [T$.GetBuilderStateOfGetMaterialController()])))(),
    DurationTovoid: () => (T$.DurationTovoid = dart.constFn(dart.fnType(dart.void, [core.Duration])))(),
    JSArrayOfNavigatorObserver: () => (T$.JSArrayOfNavigatorObserver = dart.constFn(_interceptors.JSArray$(navigator.NavigatorObserver)))(),
    GetMaterialControllerToMaterialApp: () => (T$.GetMaterialControllerToMaterialApp = dart.constFn(dart.fnType(app.MaterialApp, [root_controller.GetMaterialController])))(),
    GetMaterialControllerToCupertinoApp: () => (T$.GetMaterialControllerToCupertinoApp = dart.constFn(dart.fnType(app$.CupertinoApp, [root_controller.GetMaterialController])))(),
    IterableOfGetPage: () => (T$.IterableOfGetPage = dart.constFn(core.Iterable$(get_route.GetPage)))(),
    GetNavConfigToIterableOfGetPage: () => (T$.GetNavConfigToIterableOfGetPage = dart.constFn(dart.fnType(T$.IterableOfGetPage(), [get_nav_config.GetNavConfig])))(),
    GetDelegateToGetPage: () => (T$.GetDelegateToGetPage = dart.constFn(dart.fnType(get_route.GetPage, [get_router_delegate.GetDelegate])))(),
    GetPageN: () => (T$.GetPageN = dart.constFn(dart.nullable(get_route.GetPage)))(),
    JSArrayOfGetPageN: () => (T$.JSArrayOfGetPageN = dart.constFn(_interceptors.JSArray$(T$.GetPageN())))(),
    RouteAnddynamicTobool: () => (T$.RouteAnddynamicTobool = dart.constFn(dart.fnType(core.bool, [navigator.Route, dart.dynamic])))(),
    IterableNOfGetPage: () => (T$.IterableNOfGetPage = dart.constFn(dart.nullable(T$.IterableOfGetPage())))(),
    BuildContextAndGetDelegateAndIterableNOfGetPageToWidget: () => (T$.BuildContextAndGetDelegateAndIterableNOfGetPageToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, get_router_delegate.GetDelegate, T$.IterableNOfGetPage()])))(),
    JSArrayOfGetNavConfig: () => (T$.JSArrayOfGetNavConfig = dart.constFn(_interceptors.JSArray$(get_nav_config.GetNavConfig)))(),
    LinkedMapOfGetPage$Completer: () => (T$.LinkedMapOfGetPage$Completer = dart.constFn(_js_helper.LinkedMap$(get_route.GetPage, async.Completer)))(),
    VoidToScaffold: () => (T$.VoidToScaffold = dart.constFn(dart.fnType(scaffold.Scaffold, [])))(),
    GetNavConfigN: () => (T$.GetNavConfigN = dart.constFn(dart.nullable(get_nav_config.GetNavConfig)))(),
    IdentityMapOfString$String: () => (T$.IdentityMapOfString$String = dart.constFn(_js_helper.IdentityMap$(core.String, core.String)))(),
    GetNavConfigTobool: () => (T$.GetNavConfigTobool = dart.constFn(dart.fnType(core.bool, [get_nav_config.GetNavConfig])))(),
    SynchronousFutureOfbool: () => (T$.SynchronousFutureOfbool = dart.constFn(synchronous_future.SynchronousFuture$(core.bool)))(),
    JSArrayOfGetPage: () => (T$.JSArrayOfGetPage = dart.constFn(_interceptors.JSArray$(get_route.GetPage)))(),
    GetPageTobool: () => (T$.GetPageTobool = dart.constFn(dart.fnType(core.bool, [get_route.GetPage])))(),
    GetNavConfigToGetPage: () => (T$.GetNavConfigToGetPage = dart.constFn(dart.fnType(get_route.GetPage, [get_nav_config.GetNavConfig])))(),
    RouteTobool: () => (T$.RouteTobool = dart.constFn(dart.fnType(core.bool, [navigator.Route])))(),
    GetNavConfigNTobool: () => (T$.GetNavConfigNTobool = dart.constFn(dart.fnType(core.bool, [T$.GetNavConfigN()])))(),
    VoidToNull: () => (T$.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    StringToIterableOfGetPage: () => (T$.StringToIterableOfGetPage = dart.constFn(dart.fnType(T$.IterableOfGetPage(), [core.String])))(),
    PopModeL: () => (T$.PopModeL = dart.constFn(dart.legacy(get_router_delegate.PopMode)))(),
    PreventDuplicateHandlingModeL: () => (T$.PreventDuplicateHandlingModeL = dart.constFn(dart.legacy(get_router_delegate.PreventDuplicateHandlingMode)))(),
    SynchronousFutureOfGetNavConfig: () => (T$.SynchronousFutureOfGetNavConfig = dart.constFn(synchronous_future.SynchronousFuture$(get_nav_config.GetNavConfig)))(),
    SynchronousFutureOfGetNavConfigN: () => (T$.SynchronousFutureOfGetNavConfigN = dart.constFn(synchronous_future.SynchronousFuture$(T$.GetNavConfigN())))(),
    JSArrayOfGetMiddleware: () => (T$.JSArrayOfGetMiddleware = dart.constFn(_interceptors.JSArray$(route_middleware.GetMiddleware)))(),
    GetMiddlewareAndGetMiddlewareToint: () => (T$.GetMiddlewareAndGetMiddlewareToint = dart.constFn(dart.fnType(core.int, [route_middleware.GetMiddleware, route_middleware.GetMiddleware])))(),
    GetMiddlewareTovoid: () => (T$.GetMiddlewareTovoid = dart.constFn(dart.fnType(dart.void, [route_middleware.GetMiddleware])))(),
    StringN: () => (T$.StringN = dart.constFn(dart.nullable(core.String)))(),
    ValueNotifierOfStringN: () => (T$.ValueNotifierOfStringN = dart.constFn(change_notifier.ValueNotifier$(T$.StringN())))(),
    VoidTobool: () => (T$.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    JSArrayOfWidget: () => (T$.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    ObjectN: () => (T$.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    AnimationStatusTovoid: () => (T$.AnimationStatusTovoid = dart.constFn(dart.fnType(dart.void, [animation.AnimationStatus])))(),
    VoidToFn: () => (T$.VoidToFn = dart.constFn(dart.fnType(T$.AnimationStatusTovoid(), [])))(),
    FnTodynamic: () => (T$.FnTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T$.AnimationStatusTovoid()])))(),
    JSArrayOfBindings: () => (T$.JSArrayOfBindings = dart.constFn(_interceptors.JSArray$(bindings_interface.Bindings)))(),
    SnackbarStatusN: () => (T$.SnackbarStatusN = dart.constFn(dart.nullable(snack.SnackbarStatus)))(),
    SnackbarStatusNTovoid: () => (T$.SnackbarStatusNTovoid = dart.constFn(dart.fnType(dart.void, [T$.SnackbarStatusN()])))(),
    CompleterOfSize: () => (T$.CompleterOfSize = dart.constFn(async.Completer$(ui.Size)))(),
    StateOfStatefulWidget: () => (T$.StateOfStatefulWidget = dart.constFn(framework.State$(framework.StatefulWidget)))(),
    GlobalKeyOfStateOfStatefulWidget: () => (T$.GlobalKeyOfStateOfStatefulWidget = dart.constFn(framework.GlobalKey$(T$.StateOfStatefulWidget())))(),
    TweenOfdouble: () => (T$.TweenOfdouble = dart.constFn(tween.Tween$(core.double)))(),
    VoidTovoid: () => (T$.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    FutureBuilderOfSize: () => (T$.FutureBuilderOfSize = dart.constFn(async$.FutureBuilder$(ui.Size)))(),
    AsyncSnapshotOfSize: () => (T$.AsyncSnapshotOfSize = dart.constFn(async$.AsyncSnapshot$(ui.Size)))(),
    BuildContextAndAsyncSnapshotOfSizeToWidget: () => (T$.BuildContextAndAsyncSnapshotOfSizeToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.AsyncSnapshotOfSize()])))(),
    SnackPositionL: () => (T$.SnackPositionL = dart.constFn(dart.legacy(snack.SnackPosition)))(),
    SnackStyleL: () => (T$.SnackStyleL = dart.constFn(dart.legacy(snack.SnackStyle)))(),
    SnackDismissDirectionL: () => (T$.SnackDismissDirectionL = dart.constFn(dart.legacy(snack.SnackDismissDirection)))(),
    SnackbarStatusL: () => (T$.SnackbarStatusL = dart.constFn(dart.legacy(snack.SnackbarStatus)))(),
    BuildContextToGestureDetector: () => (T$.BuildContextToGestureDetector = dart.constFn(dart.fnType(gesture_detector.GestureDetector, [framework.BuildContext])))(),
    JSArrayOfOverlayEntry: () => (T$.JSArrayOfOverlayEntry = dart.constFn(_interceptors.JSArray$(overlay.OverlayEntry)))(),
    WidgetN: () => (T$.WidgetN = dart.constFn(dart.nullable(framework.Widget)))(),
    BuildContextAndWidgetNToBackdropFilter: () => (T$.BuildContextAndWidgetNToBackdropFilter = dart.constFn(dart.fnType(basic.BackdropFilter, [framework.BuildContext, T$.WidgetN()])))(),
    BuildContextToWidget: () => (T$.BuildContextToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext])))(),
    boolN: () => (T$.boolN = dart.constFn(dart.nullable(core.bool)))(),
    FutureOfboolN: () => (T$.FutureOfboolN = dart.constFn(async.Future$(T$.boolN())))(),
    DismissDirectionToFutureOfboolN: () => (T$.DismissDirectionToFutureOfboolN = dart.constFn(dart.fnType(T$.FutureOfboolN(), [dismissible.DismissDirection])))(),
    ValueKeyOfString: () => (T$.ValueKeyOfString = dart.constFn(key.ValueKey$(core.String)))(),
    DismissDirectionTovoid: () => (T$.DismissDirectionTovoid = dart.constFn(dart.fnType(dart.void, [dismissible.DismissDirection])))(),
    RoutingTovoid: () => (T$.RoutingTovoid = dart.constFn(dart.fnType(dart.void, [route_observer.Routing])))(),
    ChangeNotifierN: () => (T$.ChangeNotifierN = dart.constFn(dart.nullable(change_notifier.ChangeNotifier)))(),
    StreamControllerN: () => (T$.StreamControllerN = dart.constFn(dart.nullable(async.StreamController)))(),
    JSArrayOfVoidTovoid: () => (T$.JSArrayOfVoidTovoid = dart.constFn(_interceptors.JSArray$(T$.VoidTovoid())))(),
    VoidToWidget: () => (T$.VoidToWidget = dart.constFn(dart.fnType(framework.Widget, [])))(),
    GetBuilderOfGetxController: () => (T$.GetBuilderOfGetxController = dart.constFn(get_state.GetBuilder$(get_controllers.GetxController)))(),
    ExpandoOfGetLifeCycleBase: () => (T$.ExpandoOfGetLifeCycleBase = dart.constFn(core.Expando$(lifecycle.GetLifeCycleBase)))(),
    ScreenTypeL: () => (T$.ScreenTypeL = dart.constFn(dart.legacy(get_responsive.ScreenType)))(),
    dynamicToNull: () => (T$.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    StringNToWidget: () => (T$.StringNToWidget = dart.constFn(dart.fnType(framework.Widget, [T$.StringN()])))(),
    StringNToNWidget: () => (T$.StringNToNWidget = dart.constFn(dart.nullable(T$.StringNToWidget())))(),
    DiagnosticsPropertyOfString: () => (T$.DiagnosticsPropertyOfString = dart.constFn(diagnostics.DiagnosticsProperty$(core.String)))(),
    dynamicTovoid: () => (T$.dynamicTovoid = dart.constFn(dart.fnType(dart.void, [dart.dynamic])))(),
    GetXOfDisposableInterface: () => (T$.GetXOfDisposableInterface = dart.constFn(rx_getx_widget.GetX$(rx_disposable.DisposableInterface)))(),
    IdentityMapOfString$StringN: () => (T$.IdentityMapOfString$StringN = dart.constFn(_js_helper.IdentityMap$(core.String, T$.StringN())))(),
    GlobalKeyOfNavigatorState: () => (T$.GlobalKeyOfNavigatorState = dart.constFn(framework.GlobalKey$(navigator.NavigatorState)))(),
    LinkedMapOfdynamic$GlobalKeyOfNavigatorState: () => (T$.LinkedMapOfdynamic$GlobalKeyOfNavigatorState = dart.constFn(_js_helper.LinkedMap$(dart.dynamic, T$.GlobalKeyOfNavigatorState())))(),
    BindingsL: () => (T$.BindingsL = dart.constFn(dart.legacy(bindings_interface.Bindings)))(),
    GetPageL: () => (T$.GetPageL = dart.constFn(dart.legacy(get_route.GetPage)))(),
    JSArrayOfStringN: () => (T$.JSArrayOfStringN = dart.constFn(_interceptors.JSArray$(T$.StringN())))(),
    MatchToString: () => (T$.MatchToString = dart.constFn(dart.fnType(core.String, [core.Match])))(),
    StringTobool: () => (T$.StringTobool = dart.constFn(dart.fnType(core.bool, [core.String])))(),
    JSArrayOfString: () => (T$.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    MapEntryOfString$GetPageN: () => (T$.MapEntryOfString$GetPageN = dart.constFn(core.MapEntry$(core.String, T$.GetPageN())))(),
    StringToMapEntryOfString$GetPageN: () => (T$.StringToMapEntryOfString$GetPageN = dart.constFn(dart.fnType(T$.MapEntryOfString$GetPageN(), [core.String])))(),
    MapEntryOfString$GetPageNTobool: () => (T$.MapEntryOfString$GetPageNTobool = dart.constFn(dart.fnType(core.bool, [T$.MapEntryOfString$GetPageN()])))(),
    MapEntryOfString$GetPage: () => (T$.MapEntryOfString$GetPage = dart.constFn(core.MapEntry$(core.String, get_route.GetPage)))(),
    MapEntryOfString$GetPageNToMapEntryOfString$GetPage: () => (T$.MapEntryOfString$GetPageNToMapEntryOfString$GetPage = dart.constFn(dart.fnType(T$.MapEntryOfString$GetPage(), [T$.MapEntryOfString$GetPageN()])))(),
    LinkedHashMapOfString$String: () => (T$.LinkedHashMapOfString$String = dart.constFn(collection.LinkedHashMap$(core.String, core.String)))(),
    MapEntryOfString$GetPageToGetPage: () => (T$.MapEntryOfString$GetPageToGetPage = dart.constFn(dart.fnType(get_route.GetPage, [T$.MapEntryOfString$GetPage()])))(),
    ListOfGetMiddleware: () => (T$.ListOfGetMiddleware = dart.constFn(core.List$(route_middleware.GetMiddleware)))(),
    GetBarOfObject: () => (T$.GetBarOfObject = dart.constFn(snack.GetBar$(core.Object)))(),
    GradientN: () => (T$.GradientN = dart.constFn(dart.nullable(gradient.Gradient)))(),
    doubleN: () => (T$.doubleN = dart.constFn(dart.nullable(core.double)))(),
    ColorN: () => (T$.ColorN = dart.constFn(dart.nullable(ui.Color)))(),
    ListOfBoxShadow: () => (T$.ListOfBoxShadow = dart.constFn(core.List$(box_shadow.BoxShadow)))(),
    ListNOfBoxShadow: () => (T$.ListNOfBoxShadow = dart.constFn(dart.nullable(T$.ListOfBoxShadow())))(),
    GetBarOfObjectTovoid: () => (T$.GetBarOfObjectTovoid = dart.constFn(dart.fnType(dart.void, [T$.GetBarOfObject()])))(),
    GetBarOfObjectToNvoid: () => (T$.GetBarOfObjectToNvoid = dart.constFn(dart.nullable(T$.GetBarOfObjectTovoid())))(),
    AnimationControllerN: () => (T$.AnimationControllerN = dart.constFn(dart.nullable(animation_controller.AnimationController)))(),
    AnimationOfColor: () => (T$.AnimationOfColor = dart.constFn(animation.Animation$(ui.Color)))(),
    AnimationNOfColor: () => (T$.AnimationNOfColor = dart.constFn(dart.nullable(T$.AnimationOfColor())))(),
    SnackbarStatusNToNvoid: () => (T$.SnackbarStatusNToNvoid = dart.constFn(dart.nullable(T$.SnackbarStatusNTovoid())))(),
    FormN: () => (T$.FormN = dart.constFn(dart.nullable(form.Form)))(),
    __Tovoid: () => (T$.__Tovoid = dart.constFn(dart.fnType(dart.void, [], {animationDuration: core.Duration, backgroundColor: ui.Color, backgroundGradient: T$.GradientN(), barBlur: T$.doubleN(), borderColor: T$.ColorN(), borderRadius: core.double, borderWidth: core.double, boxShadows: T$.ListNOfBoxShadow(), dismissDirection: snack.SnackDismissDirection, duration: core.Duration, forwardAnimationCurve: curves.Curve, icon: T$.WidgetN(), instantInit: core.bool, isDismissible: core.bool, leftBarIndicatorColor: T$.ColorN(), mainButton: T$.WidgetN(), margin: edge_insets.EdgeInsets, maxWidth: T$.doubleN(), message: T$.StringN(), messageText: T$.WidgetN(), onTap: T$.GetBarOfObjectToNvoid(), overlayBlur: core.double, overlayColor: T$.ColorN(), padding: edge_insets.EdgeInsets, progressIndicatorBackgroundColor: T$.ColorN(), progressIndicatorController: T$.AnimationControllerN(), progressIndicatorValueColor: T$.AnimationNOfColor(), reverseAnimationCurve: curves.Curve, shouldIconPulse: core.bool, showProgressIndicator: core.bool, snackPosition: snack.SnackPosition, snackStyle: snack.SnackStyle, snackbarStatus: T$.SnackbarStatusNToNvoid(), title: T$.StringN(), titleText: T$.WidgetN(), userInputForm: T$.FormN()}, {})))(),
    GetBarOfObjectToFutureNOfTN: () => (T$.GetBarOfObjectToFutureNOfTN = dart.constFn(dart.gFnType(T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      var FutureNOfTN = () => (FutureNOfTN = dart.constFn(dart.nullable(FutureOfTN())))();
      return [FutureNOfTN(), [T$.GetBarOfObject()]];
    }, T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      var FutureNOfTN = () => (FutureNOfTN = dart.constFn(dart.nullable(FutureOfTN())))();
      return [T$.ObjectN()];
    })))(),
    DurationN: () => (T$.DurationN = dart.constFn(dart.nullable(core.Duration)))(),
    SnackDismissDirectionN: () => (T$.SnackDismissDirectionN = dart.constFn(dart.nullable(snack.SnackDismissDirection)))(),
    CurveN: () => (T$.CurveN = dart.constFn(dart.nullable(curves.Curve)))(),
    TextButtonN: () => (T$.TextButtonN = dart.constFn(dart.nullable(text_button.TextButton)))(),
    EdgeInsetsN: () => (T$.EdgeInsetsN = dart.constFn(dart.nullable(edge_insets.EdgeInsets)))(),
    SnackPositionN: () => (T$.SnackPositionN = dart.constFn(dart.nullable(snack.SnackPosition)))(),
    SnackStyleN: () => (T$.SnackStyleN = dart.constFn(dart.nullable(snack.SnackStyle)))(),
    StringAndString__Tovoid: () => (T$.StringAndString__Tovoid = dart.constFn(dart.gFnType(T => [dart.void, [core.String, core.String], {animationDuration: T$.DurationN(), backgroundColor: T$.ColorN(), backgroundGradient: T$.GradientN(), barBlur: T$.doubleN(), borderColor: T$.ColorN(), borderRadius: T$.doubleN(), borderWidth: T$.doubleN(), boxShadows: T$.ListNOfBoxShadow(), colorText: T$.ColorN(), dismissDirection: T$.SnackDismissDirectionN(), duration: T$.DurationN(), forwardAnimationCurve: T$.CurveN(), icon: T$.WidgetN(), instantInit: core.bool, isDismissible: T$.boolN(), leftBarIndicatorColor: T$.ColorN(), mainButton: T$.TextButtonN(), margin: T$.EdgeInsetsN(), maxWidth: T$.doubleN(), messageText: T$.WidgetN(), onTap: T$.GetBarOfObjectToNvoid(), overlayBlur: T$.doubleN(), overlayColor: T$.ColorN(), padding: T$.EdgeInsetsN(), progressIndicatorBackgroundColor: T$.ColorN(), progressIndicatorController: T$.AnimationControllerN(), progressIndicatorValueColor: T$.AnimationNOfColor(), reverseAnimationCurve: T$.CurveN(), shouldIconPulse: T$.boolN(), showProgressIndicator: T$.boolN(), snackPosition: T$.SnackPositionN(), snackStyle: T$.SnackStyleN(), snackbarStatus: T$.SnackbarStatusNToNvoid(), titleText: T$.WidgetN(), userInputForm: T$.FormN()}, {}], T => [T$.ObjectN()])))(),
    BuildContextToOpacity: () => (T$.BuildContextToOpacity = dart.constFn(dart.fnType(basic.Opacity, [framework.BuildContext])))(),
    __ToFutureOfT: () => (T$.__ToFutureOfT = dart.constFn(dart.gFnType(T => {
      var FutureOfT = () => (FutureOfT = dart.constFn(async.Future$(T)))();
      var VoidToFutureOfT = () => (VoidToFutureOfT = dart.constFn(dart.fnType(FutureOfT(), [])))();
      return [FutureOfT(), [], {asyncFunction: VoidToFutureOfT(), loadingWidget: T$.WidgetN(), opacity: core.double, opacityColor: ui.Color}, {}];
    }, T => {
      var FutureOfT = () => (FutureOfT = dart.constFn(async.Future$(T)))();
      var VoidToFutureOfT = () => (VoidToFutureOfT = dart.constFn(dart.fnType(FutureOfT(), [])))();
      return [T$.ObjectN()];
    })))(),
    BuildContextToTheme: () => (T$.BuildContextToTheme = dart.constFn(dart.fnType(theme$.Theme, [framework.BuildContext])))(),
    AnimationOfdouble: () => (T$.AnimationOfdouble = dart.constFn(animation.Animation$(core.double)))(),
    BuildContextAndAnimationOfdoubleAndAnimationOfdoubleToWidget: () => (T$.BuildContextAndAnimationOfdoubleAndAnimationOfdoubleToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.AnimationOfdouble(), T$.AnimationOfdouble()])))(),
    BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToFadeTransition: () => (T$.BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToFadeTransition = dart.constFn(dart.fnType(transitions.FadeTransition, [framework.BuildContext, T$.AnimationOfdouble(), T$.AnimationOfdouble(), framework.Widget])))(),
    GlobalKeyNOfNavigatorState: () => (T$.GlobalKeyNOfNavigatorState = dart.constFn(dart.nullable(T$.GlobalKeyOfNavigatorState())))(),
    RouteSettingsN: () => (T$.RouteSettingsN = dart.constFn(dart.nullable(navigator.RouteSettings)))(),
    Widget__ToFutureOfTN: () => (T$.Widget__ToFutureOfTN = dart.constFn(dart.gFnType(T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      return [FutureOfTN(), [framework.Widget], {arguments: T$.ObjectN(), barrierColor: T$.ColorN(), barrierDismissible: core.bool, name: T$.StringN(), navigatorKey: T$.GlobalKeyNOfNavigatorState(), routeSettings: T$.RouteSettingsN(), transitionCurve: T$.CurveN(), transitionDuration: T$.DurationN(), useSafeArea: core.bool}, {}];
    }, T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      return [T$.ObjectN()];
    })))(),
    BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToWidget: () => (T$.BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.AnimationOfdouble(), T$.AnimationOfdouble(), framework.Widget])))(),
    BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToNWidget: () => (T$.BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToNWidget = dart.constFn(dart.nullable(T$.BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToWidget())))(),
    __ToFutureOfTN: () => (T$.__ToFutureOfTN = dart.constFn(dart.gFnType(T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      return [FutureOfTN(), [], {barrierColor: ui.Color, barrierDismissible: core.bool, barrierLabel: T$.StringN(), navigatorKey: T$.GlobalKeyNOfNavigatorState(), pageBuilder: T$.BuildContextAndAnimationOfdoubleAndAnimationOfdoubleToWidget(), routeSettings: T$.RouteSettingsN(), transitionBuilder: T$.BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToNWidget(), transitionDuration: core.Duration}, {}];
    }, T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      return [T$.ObjectN()];
    })))(),
    ListOfWidget: () => (T$.ListOfWidget = dart.constFn(core.List$(framework.Widget)))(),
    ListNOfWidget: () => (T$.ListNOfWidget = dart.constFn(dart.nullable(T$.ListOfWidget())))(),
    EdgeInsetsGeometryN: () => (T$.EdgeInsetsGeometryN = dart.constFn(dart.nullable(edge_insets.EdgeInsetsGeometry)))(),
    TextStyleN: () => (T$.TextStyleN = dart.constFn(dart.nullable(text_style.TextStyle)))(),
    VoidToNvoid: () => (T$.VoidToNvoid = dart.constFn(dart.nullable(T$.VoidTovoid())))(),
    FutureOfbool: () => (T$.FutureOfbool = dart.constFn(async.Future$(core.bool)))(),
    VoidToFutureOfbool: () => (T$.VoidToFutureOfbool = dart.constFn(dart.fnType(T$.FutureOfbool(), [])))(),
    VoidToNFutureOfbool: () => (T$.VoidToNFutureOfbool = dart.constFn(dart.nullable(T$.VoidToFutureOfbool())))(),
    __ToFutureOfTN$1: () => (T$.__ToFutureOfTN$1 = dart.constFn(dart.gFnType(T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      return [FutureOfTN(), [], {actions: T$.ListNOfWidget(), backgroundColor: T$.ColorN(), barrierDismissible: core.bool, buttonColor: T$.ColorN(), cancel: T$.WidgetN(), cancelTextColor: T$.ColorN(), confirm: T$.WidgetN(), confirmTextColor: T$.ColorN(), content: T$.WidgetN(), contentPadding: T$.EdgeInsetsGeometryN(), custom: T$.WidgetN(), middleText: core.String, middleTextStyle: T$.TextStyleN(), navigatorKey: T$.GlobalKeyNOfNavigatorState(), onCancel: T$.VoidToNvoid(), onConfirm: T$.VoidToNvoid(), onCustom: T$.VoidToNvoid(), onWillPop: T$.VoidToNFutureOfbool(), radius: core.double, textCancel: T$.StringN(), textConfirm: T$.StringN(), textCustom: T$.StringN(), title: core.String, titlePadding: T$.EdgeInsetsGeometryN(), titleStyle: T$.TextStyleN()}, {}];
    }, T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      return [T$.ObjectN()];
    })))(),
    ClipN: () => (T$.ClipN = dart.constFn(dart.nullable(ui.Clip)))(),
    ShapeBorderN: () => (T$.ShapeBorderN = dart.constFn(dart.nullable(borders.ShapeBorder)))(),
    Widget__ToFutureOfTN$1: () => (T$.Widget__ToFutureOfTN$1 = dart.constFn(dart.gFnType(T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      return [FutureOfTN(), [framework.Widget], {backgroundColor: T$.ColorN(), barrierColor: T$.ColorN(), clipBehavior: T$.ClipN(), elevation: T$.doubleN(), enableDrag: core.bool, enterBottomSheetDuration: T$.DurationN(), exitBottomSheetDuration: T$.DurationN(), ignoreSafeArea: T$.boolN(), isDismissible: core.bool, isScrollControlled: core.bool, persistent: core.bool, settings: T$.RouteSettingsN(), shape: T$.ShapeBorderN(), useRootNavigator: core.bool}, {}];
    }, T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      return [T$.ObjectN()];
    })))(),
    BindingsN: () => (T$.BindingsN = dart.constFn(dart.nullable(bindings_interface.Bindings)))(),
    BuildContextTodouble: () => (T$.BuildContextTodouble = dart.constFn(dart.fnType(core.double, [framework.BuildContext])))(),
    BuildContextToNdouble: () => (T$.BuildContextToNdouble = dart.constFn(dart.nullable(T$.BuildContextTodouble())))(),
    intN: () => (T$.intN = dart.constFn(dart.nullable(core.int)))(),
    TransitionN: () => (T$.TransitionN = dart.constFn(dart.nullable(transitions_type.Transition)))(),
    dynamic__ToFutureNOfTN: () => (T$.dynamic__ToFutureNOfTN = dart.constFn(dart.gFnType(T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      var FutureNOfTN = () => (FutureNOfTN = dart.constFn(dart.nullable(FutureOfTN())))();
      return [FutureNOfTN(), [dart.dynamic], {arguments: dart.dynamic, binding: T$.BindingsN(), curve: T$.CurveN(), duration: T$.DurationN(), fullscreenDialog: core.bool, gestureWidth: T$.BuildContextToNdouble(), id: T$.intN(), opaque: T$.boolN(), popGesture: T$.boolN(), preventDuplicates: core.bool, routeName: T$.StringN(), transition: T$.TransitionN()}, {}];
    }, T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      var FutureNOfTN = () => (FutureNOfTN = dart.constFn(dart.nullable(FutureOfTN())))();
      return [T$.ObjectN()];
    })))(),
    dynamicAndStringToFn: () => (T$.dynamicAndStringToFn = dart.constFn(dart.fnType(T$.VoidToWidget(), [dart.dynamic, core.String])))(),
    MapOfString$String: () => (T$.MapOfString$String = dart.constFn(core.Map$(core.String, core.String)))(),
    MapNOfString$String: () => (T$.MapNOfString$String = dart.constFn(dart.nullable(T$.MapOfString$String())))(),
    String__ToFutureNOfTN: () => (T$.String__ToFutureNOfTN = dart.constFn(dart.gFnType(T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      var FutureNOfTN = () => (FutureNOfTN = dart.constFn(dart.nullable(FutureOfTN())))();
      return [FutureNOfTN(), [core.String], {arguments: dart.dynamic, id: T$.intN(), parameters: T$.MapNOfString$String(), preventDuplicates: core.bool}, {}];
    }, T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      var FutureNOfTN = () => (FutureNOfTN = dart.constFn(dart.nullable(FutureOfTN())))();
      return [T$.ObjectN()];
    })))(),
    Fn__Tovoid: () => (T$.Fn__Tovoid = dart.constFn(dart.fnType(dart.void, [T$.RouteTobool()], {id: T$.intN()}, {})))(),
    RouteOfTAndFn__ToFutureNOfTN: () => (T$.RouteOfTAndFn__ToFutureNOfTN = dart.constFn(dart.gFnType(T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      var FutureNOfTN = () => (FutureNOfTN = dart.constFn(dart.nullable(FutureOfTN())))();
      var RouteOfT = () => (RouteOfT = dart.constFn(navigator.Route$(T)))();
      return [FutureNOfTN(), [RouteOfT(), T$.RouteTobool()], {id: T$.intN()}, {}];
    }, T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      var FutureNOfTN = () => (FutureNOfTN = dart.constFn(dart.nullable(FutureOfTN())))();
      var RouteOfT = () => (RouteOfT = dart.constFn(navigator.Route$(T)))();
      return [T$.ObjectN()];
    })))(),
    StringAndFn__ToFutureNOfTN: () => (T$.StringAndFn__ToFutureNOfTN = dart.constFn(dart.gFnType(T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      var FutureNOfTN = () => (FutureNOfTN = dart.constFn(dart.nullable(FutureOfTN())))();
      return [FutureNOfTN(), [core.String, T$.RouteTobool()], {arguments: dart.dynamic, id: T$.intN(), parameters: T$.MapNOfString$String()}, {}];
    }, T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      var FutureNOfTN = () => (FutureNOfTN = dart.constFn(dart.nullable(FutureOfTN())))();
      return [T$.ObjectN()];
    })))(),
    String__ToFutureNOfTN$1: () => (T$.String__ToFutureNOfTN$1 = dart.constFn(dart.gFnType(T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      var FutureNOfTN = () => (FutureNOfTN = dart.constFn(dart.nullable(FutureOfTN())))();
      return [FutureNOfTN(), [core.String], {arguments: dart.dynamic, id: T$.intN(), parameters: T$.MapNOfString$String(), result: dart.dynamic}, {}];
    }, T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      var FutureNOfTN = () => (FutureNOfTN = dart.constFn(dart.nullable(FutureOfTN())))();
      return [T$.ObjectN()];
    })))(),
    Route__Tovoid: () => (T$.Route__Tovoid = dart.constFn(dart.fnType(dart.void, [navigator.Route], {id: T$.intN()}, {})))(),
    RouteToNbool: () => (T$.RouteToNbool = dart.constFn(dart.nullable(T$.RouteTobool())))(),
    String__ToFutureNOfTN$2: () => (T$.String__ToFutureNOfTN$2 = dart.constFn(dart.gFnType(T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      var FutureNOfTN = () => (FutureNOfTN = dart.constFn(dart.nullable(FutureOfTN())))();
      return [FutureNOfTN(), [core.String], {arguments: dart.dynamic, id: T$.intN(), parameters: T$.MapNOfString$String(), predicate: T$.RouteToNbool()}, {}];
    }, T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      var FutureNOfTN = () => (FutureNOfTN = dart.constFn(dart.nullable(FutureOfTN())))();
      return [T$.ObjectN()];
    })))(),
    __Tovoid$1: () => (T$.__Tovoid$1 = dart.constFn(dart.gFnType(T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      return [dart.void, [], {canPop: core.bool, closeOverlays: core.bool, id: T$.intN(), result: TN()}, {}];
    }, T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      return [T$.ObjectN()];
    })))(),
    intAndintNTovoid: () => (T$.intAndintNTovoid = dart.constFn(dart.fnType(dart.void, [core.int], [T$.intN()])))(),
    dynamic__ToFutureNOfTN$1: () => (T$.dynamic__ToFutureNOfTN$1 = dart.constFn(dart.gFnType(T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      var FutureNOfTN = () => (FutureNOfTN = dart.constFn(dart.nullable(FutureOfTN())))();
      return [FutureNOfTN(), [dart.dynamic], {arguments: dart.dynamic, binding: T$.BindingsN(), curve: T$.CurveN(), duration: T$.DurationN(), fullscreenDialog: core.bool, gestureWidth: T$.BuildContextToNdouble(), id: T$.intN(), opaque: core.bool, popGesture: T$.boolN(), preventDuplicates: core.bool, routeName: T$.StringN(), transition: T$.TransitionN()}, {}];
    }, T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      var FutureNOfTN = () => (FutureNOfTN = dart.constFn(dart.nullable(FutureOfTN())))();
      return [T$.ObjectN()];
    })))(),
    dynamic__ToFutureNOfTN$2: () => (T$.dynamic__ToFutureNOfTN$2 = dart.constFn(dart.gFnType(T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      var FutureNOfTN = () => (FutureNOfTN = dart.constFn(dart.nullable(FutureOfTN())))();
      return [FutureNOfTN(), [dart.dynamic], {arguments: dart.dynamic, binding: T$.BindingsN(), curve: T$.CurveN(), duration: T$.DurationN(), fullscreenDialog: core.bool, gestureWidth: T$.BuildContextToNdouble(), id: T$.intN(), opaque: core.bool, popGesture: T$.boolN(), predicate: T$.RouteToNbool(), routeName: T$.StringN(), transition: T$.TransitionN()}, {}];
    }, T => {
      var TN = () => (TN = dart.constFn(dart.nullable(T)))();
      var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
      var FutureNOfTN = () => (FutureNOfTN = dart.constFn(dart.nullable(FutureOfTN())))();
      return [T$.ObjectN()];
    })))(),
    StringToString: () => (T$.StringToString = dart.constFn(dart.fnType(core.String, [core.String])))(),
    String__Tovoid: () => (T$.String__Tovoid = dart.constFn(dart.fnType(dart.void, [core.String], {isError: core.bool}, {})))(),
    String__ToNvoid: () => (T$.String__ToNvoid = dart.constFn(dart.nullable(T$.String__Tovoid())))(),
    __Tovoid$2: () => (T$.__Tovoid$2 = dart.constFn(dart.fnType(dart.void, [], {defaultDurationTransition: T$.DurationN(), defaultGlobalState: T$.boolN(), defaultOpaqueRoute: T$.boolN(), defaultPopGesture: T$.boolN(), defaultTransition: T$.TransitionN(), enableLog: T$.boolN(), logWriterCallback: T$.String__ToNvoid()}, {})))(),
    LocaleTovoid: () => (T$.LocaleTovoid = dart.constFn(dart.fnType(dart.void, [ui.Locale])))(),
    ThemeDataTovoid: () => (T$.ThemeDataTovoid = dart.constFn(dart.fnType(dart.void, [theme_data.ThemeData])))(),
    ThemeModeTovoid: () => (T$.ThemeModeTovoid = dart.constFn(dart.fnType(dart.void, [app.ThemeMode])))(),
    GlobalKeyOfNavigatorStateToGlobalKeyNOfNavigatorState: () => (T$.GlobalKeyOfNavigatorStateToGlobalKeyNOfNavigatorState = dart.constFn(dart.fnType(T$.GlobalKeyNOfNavigatorState(), [T$.GlobalKeyOfNavigatorState()])))(),
    VoidToGlobalKeyOfNavigatorState: () => (T$.VoidToGlobalKeyOfNavigatorState = dart.constFn(dart.fnType(T$.GlobalKeyOfNavigatorState(), [])))(),
    dynamicToGlobalKeyNOfNavigatorState: () => (T$.dynamicToGlobalKeyNOfNavigatorState = dart.constFn(dart.fnType(T$.GlobalKeyNOfNavigatorState(), [dart.dynamic])))(),
    intNToGlobalKeyOfNavigatorState: () => (T$.intNToGlobalKeyOfNavigatorState = dart.constFn(dart.fnType(T$.GlobalKeyOfNavigatorState(), [T$.intN()])))(),
    ElementTovoid: () => (T$.ElementTovoid = dart.constFn(dart.fnType(dart.void, [framework.Element])))(),
    ListOfGetPage: () => (T$.ListOfGetPage = dart.constFn(core.List$(get_route.GetPage)))(),
    ListOfGetPageTovoid: () => (T$.ListOfGetPageTovoid = dart.constFn(dart.fnType(dart.void, [T$.ListOfGetPage()])))(),
    GetPageTovoid: () => (T$.GetPageTovoid = dart.constFn(dart.fnType(dart.void, [get_route.GetPage])))(),
    VoidToTDelegateN: () => (T$.VoidToTDelegateN = dart.constFn(dart.gFnType((TDelegate, TPage) => {
      var TDelegateN = () => (TDelegateN = dart.constFn(dart.nullable(TDelegate)))();
      return [TDelegateN(), []];
    }, (TDelegate, TPage) => {
      var TDelegateN = () => (TDelegateN = dart.constFn(dart.nullable(TDelegate)))();
      var RouterDelegateOfTPage = () => (RouterDelegateOfTPage = dart.constFn(router.RouterDelegate$(TPage)))();
      return [RouterDelegateOfTPage(), T$.ObjectN()];
    })))(),
    __ToGetInformationParser: () => (T$.__ToGetInformationParser = dart.constFn(dart.fnType(get_information_parser.GetInformationParser, [], {initialRoute: core.String}, {})))(),
    ListOfNavigatorObserver: () => (T$.ListOfNavigatorObserver = dart.constFn(core.List$(navigator.NavigatorObserver)))(),
    ListNOfNavigatorObserver: () => (T$.ListNOfNavigatorObserver = dart.constFn(dart.nullable(T$.ListOfNavigatorObserver())))(),
    TransitionDelegateN: () => (T$.TransitionDelegateN = dart.constFn(dart.nullable(navigator.TransitionDelegate)))(),
    __ToGetDelegate: () => (T$.__ToGetDelegate = dart.constFn(dart.fnType(get_router_delegate.GetDelegate, [], {backButtonPopMode: get_router_delegate.PopMode, navigatorObservers: T$.ListNOfNavigatorObserver(), notFoundRoute: T$.GetPageN(), preventDuplicateHandlingMode: get_router_delegate.PreventDuplicateHandlingMode, transitionDelegate: T$.TransitionDelegateN()}, {})))(),
    BuildContextAndWidgetNToSemantics: () => (T$.BuildContextAndWidgetNToSemantics = dart.constFn(dart.fnType(basic.Semantics, [framework.BuildContext, T$.WidgetN()])))(),
    Fn__Tovoid$1: () => (T$.Fn__Tovoid$1 = dart.constFn(dart.gFnType(S => {
      var VoidToS = () => (VoidToS = dart.constFn(dart.fnType(S, [])))();
      return [dart.void, [VoidToS()], {fenix: core.bool, tag: T$.StringN()}, {}];
    }, S => {
      var VoidToS = () => (VoidToS = dart.constFn(dart.fnType(S, [])))();
      return [T$.ObjectN()];
    })))(),
    Fn__ToFutureOfS: () => (T$.Fn__ToFutureOfS = dart.constFn(dart.gFnType(S => {
      var FutureOfS = () => (FutureOfS = dart.constFn(async.Future$(S)))();
      var VoidToFutureOfS = () => (VoidToFutureOfS = dart.constFn(dart.fnType(FutureOfS(), [])))();
      return [FutureOfS(), [VoidToFutureOfS()], {permanent: core.bool, tag: T$.StringN()}, {}];
    }, S => {
      var FutureOfS = () => (FutureOfS = dart.constFn(async.Future$(S)))();
      var VoidToFutureOfS = () => (VoidToFutureOfS = dart.constFn(dart.fnType(FutureOfS(), [])))();
      return [T$.ObjectN()];
    })))(),
    Fn__Tovoid$2: () => (T$.Fn__Tovoid$2 = dart.constFn(dart.gFnType(S => {
      var VoidToS = () => (VoidToS = dart.constFn(dart.fnType(S, [])))();
      return [dart.void, [VoidToS()], {permanent: core.bool, tag: T$.StringN()}, {}];
    }, S => {
      var VoidToS = () => (VoidToS = dart.constFn(dart.fnType(S, [])))();
      return [T$.ObjectN()];
    })))(),
    __ToS: () => (T$.__ToS = dart.constFn(dart.gFnType(S => [S, [], {tag: T$.StringN()}, {}], S => [T$.ObjectN()])))(),
    S__ToS: () => (T$.S__ToS = dart.constFn(dart.gFnType(S => {
      var VoidToS = () => (VoidToS = dart.constFn(dart.fnType(S, [])))();
      var VoidToNS = () => (VoidToNS = dart.constFn(dart.nullable(VoidToS())))();
      return [S, [S], {builder: VoidToNS(), permanent: core.bool, tag: T$.StringN()}, {}];
    }, S => {
      var VoidToS = () => (VoidToS = dart.constFn(dart.fnType(S, [])))();
      var VoidToNS = () => (VoidToNS = dart.constFn(dart.nullable(VoidToS())))();
      return [T$.ObjectN()];
    })))(),
    __ToFutureOfbool: () => (T$.__ToFutureOfbool = dart.constFn(dart.gFnType(S => [T$.FutureOfbool(), [], {force: core.bool, tag: T$.StringN()}, {}], S => [T$.ObjectN()])))(),
    FutureOfvoid: () => (T$.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    __ToFutureOfvoid: () => (T$.__ToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [], {force: core.bool}, {})))(),
    __Tovoid$3: () => (T$.__Tovoid$3 = dart.constFn(dart.fnType(dart.void, [], {force: core.bool}, {})))(),
    __Tovoid$4: () => (T$.__Tovoid$4 = dart.constFn(dart.gFnType(S => [dart.void, [], {force: core.bool, key: T$.StringN(), tag: T$.StringN()}, {}], S => [T$.ObjectN()])))(),
    __Tobool: () => (T$.__Tobool = dart.constFn(dart.gFnType(S => [core.bool, [], {tag: T$.StringN()}, {}], S => [T$.ObjectN()])))(),
    P__Tovoid: () => (T$.P__Tovoid = dart.constFn(dart.gFnType(P => [dart.void, [P], {tag: T$.StringN()}, {}], P => [T$.ObjectN()])))(),
    Fn__Tovoid$3: () => (T$.Fn__Tovoid$3 = dart.constFn(dart.gFnType(P => {
      var VoidToP = () => (VoidToP = dart.constFn(dart.fnType(P, [])))();
      return [dart.void, [VoidToP()], {fenix: T$.boolN(), tag: T$.StringN()}, {}];
    }, P => {
      var VoidToP = () => (VoidToP = dart.constFn(dart.fnType(P, [])))();
      return [T$.ObjectN()];
    })))(),
    _HashSetOfFunction: () => (T$._HashSetOfFunction = dart.constFn(collection._HashSet$(core.Function)))(),
    RouteN: () => (T$.RouteN = dart.constFn(dart.nullable(navigator.Route)))(),
    ListOfString: () => (T$.ListOfString = dart.constFn(core.List$(core.String)))(),
    LinkedMapOfRouteN$ListOfString: () => (T$.LinkedMapOfRouteN$ListOfString = dart.constFn(_js_helper.LinkedMap$(T$.RouteN(), T$.ListOfString())))(),
    HashSetOfFunction: () => (T$.HashSetOfFunction = dart.constFn(collection.HashSet$(core.Function)))(),
    LinkedMapOfRouteN$HashSetOfFunction: () => (T$.LinkedMapOfRouteN$HashSetOfFunction = dart.constFn(_js_helper.LinkedMap$(T$.RouteN(), T$.HashSetOfFunction())))(),
    StringAnd_InstanceBuilderFactoryTovoid: () => (T$.StringAnd_InstanceBuilderFactoryTovoid = dart.constFn(dart.fnType(dart.void, [core.String, get_instance._InstanceBuilderFactory])))(),
    IdentityMapOfString$_InstanceBuilderFactory: () => (T$.IdentityMapOfString$_InstanceBuilderFactory = dart.constFn(_js_helper.IdentityMap$(core.String, get_instance._InstanceBuilderFactory)))(),
    __Tovoid$5: () => (T$.__Tovoid$5 = dart.constFn(dart.fnType(dart.void, [], {clearFactory: core.bool, clearRouteBindings: core.bool}, {})))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.constMap(T$.StringL(), T$.BuildContextLToLWidgetL(), []);
    },
    get C1() {
      return C[1] = dart.constList([], T$.NavigatorObserverL());
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: app.ThemeMode.prototype,
        [_name]: "ThemeMode.system",
        index: 0
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: ui.Locale.prototype,
        [Locale__countryCode]: "US",
        [Locale_scriptCode]: null,
        [Locale__languageCode]: "en"
      });
    },
    get C3() {
      return C[3] = dart.constList([C[4] || CT.C4], T$.LocaleL());
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: smart_management.SmartManagement.prototype,
        [_name$]: "SmartManagement.full",
        index: 0
      });
    },
    get C7() {
      return C[7] = dart.constList([], T$._LocationL());
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[7] || CT.C7,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 223,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/root/get_material_app.dart"
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[7] || CT.C7,
        [_Location_name]: null,
        [_Location_column]: 40,
        [_Location_line]: 224,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/root/get_material_app.dart"
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 7,
        [_Location_line]: 218,
        [_Location_file]: null
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 222,
        [_Location_file]: null
      });
    },
    get C10() {
      return C[10] = dart.constList([C[11] || CT.C11, C[12] || CT.C12], T$._LocationL());
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[10] || CT.C10,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 217,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/root/get_material_app.dart"
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routerDelegate",
        [_Location_column]: 15,
        [_Location_line]: 271,
        [_Location_file]: null
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routeInformationParser",
        [_Location_column]: 15,
        [_Location_line]: 272,
        [_Location_file]: null
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scaffoldMessengerKey",
        [_Location_column]: 15,
        [_Location_line]: 273,
        [_Location_file]: null
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backButtonDispatcher",
        [_Location_column]: 15,
        [_Location_line]: 274,
        [_Location_file]: null
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routeInformationProvider",
        [_Location_column]: 15,
        [_Location_line]: 275,
        [_Location_file]: null
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 15,
        [_Location_line]: 276,
        [_Location_file]: null
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 15,
        [_Location_line]: 277,
        [_Location_file]: null
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 15,
        [_Location_line]: 278,
        [_Location_file]: null
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onGenerateTitle",
        [_Location_column]: 15,
        [_Location_line]: 279,
        [_Location_file]: null
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 15,
        [_Location_line]: 280,
        [_Location_file]: null
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "theme",
        [_Location_column]: 15,
        [_Location_line]: 281,
        [_Location_file]: null
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "darkTheme",
        [_Location_column]: 15,
        [_Location_line]: 282,
        [_Location_file]: null
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "themeMode",
        [_Location_column]: 15,
        [_Location_line]: 284,
        [_Location_file]: null
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "locale",
        [_Location_column]: 15,
        [_Location_line]: 285,
        [_Location_file]: null
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "localizationsDelegates",
        [_Location_column]: 15,
        [_Location_line]: 286,
        [_Location_file]: null
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "localeListResolutionCallback",
        [_Location_column]: 15,
        [_Location_line]: 287,
        [_Location_file]: null
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "localeResolutionCallback",
        [_Location_column]: 15,
        [_Location_line]: 288,
        [_Location_file]: null
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "supportedLocales",
        [_Location_column]: 15,
        [_Location_line]: 289,
        [_Location_file]: null
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "debugShowMaterialGrid",
        [_Location_column]: 15,
        [_Location_line]: 290,
        [_Location_file]: null
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showPerformanceOverlay",
        [_Location_column]: 15,
        [_Location_line]: 291,
        [_Location_file]: null
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "checkerboardRasterCacheImages",
        [_Location_column]: 15,
        [_Location_line]: 292,
        [_Location_file]: null
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "checkerboardOffscreenLayers",
        [_Location_column]: 15,
        [_Location_line]: 293,
        [_Location_file]: null
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showSemanticsDebugger",
        [_Location_column]: 15,
        [_Location_line]: 294,
        [_Location_file]: null
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "debugShowCheckedModeBanner",
        [_Location_column]: 15,
        [_Location_line]: 295,
        [_Location_file]: null
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shortcuts",
        [_Location_column]: 15,
        [_Location_line]: 296,
        [_Location_file]: null
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollBehavior",
        [_Location_column]: 15,
        [_Location_line]: 297,
        [_Location_file]: null
      });
    },
    get C14() {
      return C[14] = dart.constList([C[15] || CT.C15, C[16] || CT.C16, C[17] || CT.C17, C[18] || CT.C18, C[19] || CT.C19, C[20] || CT.C20, C[21] || CT.C21, C[22] || CT.C22, C[23] || CT.C23, C[24] || CT.C24, C[25] || CT.C25, C[26] || CT.C26, C[27] || CT.C27, C[28] || CT.C28, C[29] || CT.C29, C[30] || CT.C30, C[31] || CT.C31, C[32] || CT.C32, C[33] || CT.C33, C[34] || CT.C34, C[35] || CT.C35, C[36] || CT.C36, C[37] || CT.C37, C[38] || CT.C38, C[39] || CT.C39, C[40] || CT.C40], T$._LocationL());
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[14] || CT.C14,
        [_Location_name]: null,
        [_Location_column]: 25,
        [_Location_line]: 270,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/root/get_material_app.dart"
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 15,
        [_Location_line]: 300,
        [_Location_file]: null
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "navigatorKey",
        [_Location_column]: 15,
        [_Location_line]: 301,
        [_Location_file]: null
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scaffoldMessengerKey",
        [_Location_column]: 15,
        [_Location_line]: 303,
        [_Location_file]: null
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "home",
        [_Location_column]: 15,
        [_Location_line]: 304,
        [_Location_file]: null
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routes",
        [_Location_column]: 15,
        [_Location_line]: 305,
        [_Location_file]: null
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "initialRoute",
        [_Location_column]: 15,
        [_Location_line]: 306,
        [_Location_file]: null
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onGenerateRoute",
        [_Location_column]: 15,
        [_Location_line]: 307,
        [_Location_file]: null
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onGenerateInitialRoutes",
        [_Location_column]: 15,
        [_Location_line]: 308,
        [_Location_file]: null
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onUnknownRoute",
        [_Location_column]: 15,
        [_Location_line]: 311,
        [_Location_file]: null
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "navigatorObservers",
        [_Location_column]: 15,
        [_Location_line]: 312,
        [_Location_file]: null
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 15,
        [_Location_line]: 320,
        [_Location_file]: null
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 15,
        [_Location_line]: 321,
        [_Location_file]: null
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onGenerateTitle",
        [_Location_column]: 15,
        [_Location_line]: 322,
        [_Location_file]: null
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 15,
        [_Location_line]: 323,
        [_Location_file]: null
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "theme",
        [_Location_column]: 15,
        [_Location_line]: 324,
        [_Location_file]: null
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "darkTheme",
        [_Location_column]: 15,
        [_Location_line]: 325,
        [_Location_file]: null
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "themeMode",
        [_Location_column]: 15,
        [_Location_line]: 327,
        [_Location_file]: null
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "locale",
        [_Location_column]: 15,
        [_Location_line]: 328,
        [_Location_file]: null
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "localizationsDelegates",
        [_Location_column]: 15,
        [_Location_line]: 329,
        [_Location_file]: null
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "localeListResolutionCallback",
        [_Location_column]: 15,
        [_Location_line]: 330,
        [_Location_file]: null
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "localeResolutionCallback",
        [_Location_column]: 15,
        [_Location_line]: 331,
        [_Location_file]: null
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "supportedLocales",
        [_Location_column]: 15,
        [_Location_line]: 332,
        [_Location_file]: null
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "debugShowMaterialGrid",
        [_Location_column]: 15,
        [_Location_line]: 333,
        [_Location_file]: null
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showPerformanceOverlay",
        [_Location_column]: 15,
        [_Location_line]: 334,
        [_Location_file]: null
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "checkerboardRasterCacheImages",
        [_Location_column]: 15,
        [_Location_line]: 335,
        [_Location_file]: null
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "checkerboardOffscreenLayers",
        [_Location_column]: 15,
        [_Location_line]: 336,
        [_Location_file]: null
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showSemanticsDebugger",
        [_Location_column]: 15,
        [_Location_line]: 337,
        [_Location_file]: null
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "debugShowCheckedModeBanner",
        [_Location_column]: 15,
        [_Location_line]: 338,
        [_Location_file]: null
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shortcuts",
        [_Location_column]: 15,
        [_Location_line]: 339,
        [_Location_file]: null
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollBehavior",
        [_Location_column]: 15,
        [_Location_line]: 340,
        [_Location_file]: null
      });
    },
    get C42() {
      return C[42] = dart.constList([C[43] || CT.C43, C[44] || CT.C44, C[45] || CT.C45, C[46] || CT.C46, C[47] || CT.C47, C[48] || CT.C48, C[49] || CT.C49, C[50] || CT.C50, C[51] || CT.C51, C[52] || CT.C52, C[53] || CT.C53, C[54] || CT.C54, C[55] || CT.C55, C[56] || CT.C56, C[57] || CT.C57, C[58] || CT.C58, C[59] || CT.C59, C[60] || CT.C60, C[61] || CT.C61, C[62] || CT.C62, C[63] || CT.C63, C[64] || CT.C64, C[65] || CT.C65, C[66] || CT.C66, C[67] || CT.C67, C[68] || CT.C68, C[69] || CT.C69, C[70] || CT.C70, C[71] || CT.C71, C[72] || CT.C72], T$._LocationL());
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[42] || CT.C42,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 299,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/root/get_material_app.dart"
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "init",
        [_Location_column]: 7,
        [_Location_line]: 230,
        [_Location_file]: null
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dispose",
        [_Location_column]: 7,
        [_Location_line]: 231,
        [_Location_file]: null
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "initState",
        [_Location_column]: 7,
        [_Location_line]: 234,
        [_Location_file]: null
      });
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 269,
        [_Location_file]: null
      });
    },
    get C74() {
      return C[74] = dart.constList([C[75] || CT.C75, C[76] || CT.C76, C[77] || CT.C77, C[78] || CT.C78], T$._LocationL());
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[74] || CT.C74,
        [_Location_name]: null,
        [_Location_column]: 41,
        [_Location_line]: 229,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/root/get_material_app.dart"
      });
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[7] || CT.C7,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 206,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/root/get_cupertino_app.dart"
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[7] || CT.C7,
        [_Location_name]: null,
        [_Location_column]: 40,
        [_Location_line]: 207,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/root/get_cupertino_app.dart"
      });
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 7,
        [_Location_line]: 201,
        [_Location_file]: null
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 205,
        [_Location_file]: null
      });
    },
    get C82() {
      return C[82] = dart.constList([C[83] || CT.C83, C[84] || CT.C84], T$._LocationL());
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[82] || CT.C82,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 200,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/root/get_cupertino_app.dart"
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routerDelegate",
        [_Location_column]: 17,
        [_Location_line]: 253,
        [_Location_file]: null
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routeInformationParser",
        [_Location_column]: 17,
        [_Location_line]: 254,
        [_Location_file]: null
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backButtonDispatcher",
        [_Location_column]: 17,
        [_Location_line]: 255,
        [_Location_file]: null
      });
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routeInformationProvider",
        [_Location_column]: 17,
        [_Location_line]: 256,
        [_Location_file]: null
      });
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 17,
        [_Location_line]: 257,
        [_Location_file]: null
      });
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "theme",
        [_Location_column]: 17,
        [_Location_line]: 258,
        [_Location_file]: null
      });
    },
    get C93() {
      return C[93] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 17,
        [_Location_line]: 259,
        [_Location_file]: null
      });
    },
    get C94() {
      return C[94] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 17,
        [_Location_line]: 260,
        [_Location_file]: null
      });
    },
    get C95() {
      return C[95] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onGenerateTitle",
        [_Location_column]: 17,
        [_Location_line]: 261,
        [_Location_file]: null
      });
    },
    get C96() {
      return C[96] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 17,
        [_Location_line]: 262,
        [_Location_file]: null
      });
    },
    get C97() {
      return C[97] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "locale",
        [_Location_column]: 17,
        [_Location_line]: 263,
        [_Location_file]: null
      });
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "localizationsDelegates",
        [_Location_column]: 17,
        [_Location_line]: 264,
        [_Location_file]: null
      });
    },
    get C99() {
      return C[99] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "localeListResolutionCallback",
        [_Location_column]: 17,
        [_Location_line]: 265,
        [_Location_file]: null
      });
    },
    get C100() {
      return C[100] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "localeResolutionCallback",
        [_Location_column]: 17,
        [_Location_line]: 266,
        [_Location_file]: null
      });
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "supportedLocales",
        [_Location_column]: 17,
        [_Location_line]: 267,
        [_Location_file]: null
      });
    },
    get C102() {
      return C[102] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showPerformanceOverlay",
        [_Location_column]: 17,
        [_Location_line]: 268,
        [_Location_file]: null
      });
    },
    get C103() {
      return C[103] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "checkerboardRasterCacheImages",
        [_Location_column]: 17,
        [_Location_line]: 269,
        [_Location_file]: null
      });
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "checkerboardOffscreenLayers",
        [_Location_column]: 17,
        [_Location_line]: 270,
        [_Location_file]: null
      });
    },
    get C105() {
      return C[105] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showSemanticsDebugger",
        [_Location_column]: 17,
        [_Location_line]: 271,
        [_Location_file]: null
      });
    },
    get C106() {
      return C[106] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "debugShowCheckedModeBanner",
        [_Location_column]: 17,
        [_Location_line]: 272,
        [_Location_file]: null
      });
    },
    get C107() {
      return C[107] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shortcuts",
        [_Location_column]: 17,
        [_Location_line]: 273,
        [_Location_file]: null
      });
    },
    get C86() {
      return C[86] = dart.constList([C[87] || CT.C87, C[88] || CT.C88, C[89] || CT.C89, C[90] || CT.C90, C[91] || CT.C91, C[92] || CT.C92, C[93] || CT.C93, C[94] || CT.C94, C[95] || CT.C95, C[96] || CT.C96, C[97] || CT.C97, C[98] || CT.C98, C[99] || CT.C99, C[100] || CT.C100, C[101] || CT.C101, C[102] || CT.C102, C[103] || CT.C103, C[104] || CT.C104, C[105] || CT.C105, C[106] || CT.C106, C[107] || CT.C107], T$._LocationL());
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[86] || CT.C86,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 252,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/root/get_cupertino_app.dart"
      });
    },
    get C110() {
      return C[110] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 17,
        [_Location_line]: 276,
        [_Location_file]: null
      });
    },
    get C111() {
      return C[111] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "theme",
        [_Location_column]: 17,
        [_Location_line]: 277,
        [_Location_file]: null
      });
    },
    get C112() {
      return C[112] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "navigatorKey",
        [_Location_column]: 17,
        [_Location_line]: 278,
        [_Location_file]: null
      });
    },
    get C113() {
      return C[113] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "home",
        [_Location_column]: 17,
        [_Location_line]: 281,
        [_Location_file]: null
      });
    },
    get C114() {
      return C[114] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routes",
        [_Location_column]: 17,
        [_Location_line]: 282,
        [_Location_file]: null
      });
    },
    get C115() {
      return C[115] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "initialRoute",
        [_Location_column]: 17,
        [_Location_line]: 283,
        [_Location_file]: null
      });
    },
    get C116() {
      return C[116] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onGenerateRoute",
        [_Location_column]: 17,
        [_Location_line]: 284,
        [_Location_file]: null
      });
    },
    get C117() {
      return C[117] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onGenerateInitialRoutes",
        [_Location_column]: 17,
        [_Location_line]: 286,
        [_Location_file]: null
      });
    },
    get C118() {
      return C[118] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onUnknownRoute",
        [_Location_column]: 17,
        [_Location_line]: 289,
        [_Location_file]: null
      });
    },
    get C119() {
      return C[119] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "navigatorObservers",
        [_Location_column]: 17,
        [_Location_line]: 290,
        [_Location_file]: null
      });
    },
    get C120() {
      return C[120] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 17,
        [_Location_line]: 298,
        [_Location_file]: null
      });
    },
    get C121() {
      return C[121] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 17,
        [_Location_line]: 299,
        [_Location_file]: null
      });
    },
    get C122() {
      return C[122] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onGenerateTitle",
        [_Location_column]: 17,
        [_Location_line]: 300,
        [_Location_file]: null
      });
    },
    get C123() {
      return C[123] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 17,
        [_Location_line]: 301,
        [_Location_file]: null
      });
    },
    get C124() {
      return C[124] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "locale",
        [_Location_column]: 17,
        [_Location_line]: 302,
        [_Location_file]: null
      });
    },
    get C125() {
      return C[125] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "localizationsDelegates",
        [_Location_column]: 17,
        [_Location_line]: 303,
        [_Location_file]: null
      });
    },
    get C126() {
      return C[126] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "localeListResolutionCallback",
        [_Location_column]: 17,
        [_Location_line]: 304,
        [_Location_file]: null
      });
    },
    get C127() {
      return C[127] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "localeResolutionCallback",
        [_Location_column]: 17,
        [_Location_line]: 305,
        [_Location_file]: null
      });
    },
    get C128() {
      return C[128] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "supportedLocales",
        [_Location_column]: 17,
        [_Location_line]: 306,
        [_Location_file]: null
      });
    },
    get C129() {
      return C[129] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showPerformanceOverlay",
        [_Location_column]: 17,
        [_Location_line]: 307,
        [_Location_file]: null
      });
    },
    get C130() {
      return C[130] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "checkerboardRasterCacheImages",
        [_Location_column]: 17,
        [_Location_line]: 308,
        [_Location_file]: null
      });
    },
    get C131() {
      return C[131] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "checkerboardOffscreenLayers",
        [_Location_column]: 17,
        [_Location_line]: 309,
        [_Location_file]: null
      });
    },
    get C132() {
      return C[132] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showSemanticsDebugger",
        [_Location_column]: 17,
        [_Location_line]: 310,
        [_Location_file]: null
      });
    },
    get C133() {
      return C[133] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "debugShowCheckedModeBanner",
        [_Location_column]: 17,
        [_Location_line]: 311,
        [_Location_file]: null
      });
    },
    get C134() {
      return C[134] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shortcuts",
        [_Location_column]: 17,
        [_Location_line]: 312,
        [_Location_file]: null
      });
    },
    get C109() {
      return C[109] = dart.constList([C[110] || CT.C110, C[111] || CT.C111, C[112] || CT.C112, C[113] || CT.C113, C[114] || CT.C114, C[115] || CT.C115, C[116] || CT.C116, C[117] || CT.C117, C[118] || CT.C118, C[119] || CT.C119, C[120] || CT.C120, C[121] || CT.C121, C[122] || CT.C122, C[123] || CT.C123, C[124] || CT.C124, C[125] || CT.C125, C[126] || CT.C126, C[127] || CT.C127, C[128] || CT.C128, C[129] || CT.C129, C[130] || CT.C130, C[131] || CT.C131, C[132] || CT.C132, C[133] || CT.C133, C[134] || CT.C134], T$._LocationL());
    },
    get C108() {
      return C[108] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[109] || CT.C109,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 275,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/root/get_cupertino_app.dart"
      });
    },
    get C137() {
      return C[137] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "init",
        [_Location_column]: 9,
        [_Location_line]: 213,
        [_Location_file]: null
      });
    },
    get C138() {
      return C[138] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dispose",
        [_Location_column]: 9,
        [_Location_line]: 214,
        [_Location_file]: null
      });
    },
    get C139() {
      return C[139] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "initState",
        [_Location_column]: 9,
        [_Location_line]: 217,
        [_Location_file]: null
      });
    },
    get C140() {
      return C[140] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 9,
        [_Location_line]: 251,
        [_Location_file]: null
      });
    },
    get C136() {
      return C[136] = dart.constList([C[137] || CT.C137, C[138] || CT.C138, C[139] || CT.C139, C[140] || CT.C140], T$._LocationL());
    },
    get C135() {
      return C[135] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[136] || CT.C136,
        [_Location_name]: null,
        [_Location_column]: 41,
        [_Location_line]: 212,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/root/get_cupertino_app.dart"
      });
    },
    get C143() {
      return C[143] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPopPage",
        [_Location_column]: 17,
        [_Location_line]: 126,
        [_Location_file]: null
      });
    },
    get C144() {
      return C[144] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pages",
        [_Location_column]: 17,
        [_Location_line]: 134,
        [_Location_file]: null
      });
    },
    get C145() {
      return C[145] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 17,
        [_Location_line]: 135,
        [_Location_file]: null
      });
    },
    get C142() {
      return C[142] = dart.constList([C[143] || CT.C143, C[144] || CT.C144, C[145] || CT.C145], T$._LocationL());
    },
    get C141() {
      return C[141] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[142] || CT.C142,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 125,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/nav2/router_outlet.dart"
      });
    },
    get C146() {
      return C[146] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[7] || CT.C7,
        [_Location_name]: null,
        [_Location_column]: 62,
        [_Location_line]: 138,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/nav2/router_outlet.dart"
      });
    },
    get C147() {
      return C[147] = dart.const({
        __proto__: get_router_delegate.PopMode.prototype,
        [_name$0]: "PopMode.History",
        index: 0
      });
    },
    get C148() {
      return C[148] = dart.const({
        __proto__: get_router_delegate.PreventDuplicateHandlingMode.prototype,
        [_name$0]: "PreventDuplicateHandlingMode.ReorderRoutes",
        index: 2
      });
    },
    get C151() {
      return C[151] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 28,
        [_Location_line]: 73,
        [_Location_file]: null
      });
    },
    get C150() {
      return C[150] = dart.constList([C[151] || CT.C151], T$._LocationL());
    },
    get C149() {
      return C[149] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[150] || CT.C150,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 73,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/nav2/get_router_delegate.dart"
      });
    },
    get C154() {
      return C[154] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "body",
        [_Location_column]: 17,
        [_Location_line]: 73,
        [_Location_file]: null
      });
    },
    get C153() {
      return C[153] = dart.constList([C[154] || CT.C154], T$._LocationL());
    },
    get C152() {
      return C[152] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[153] || CT.C153,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 72,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/nav2/get_router_delegate.dart"
      });
    },
    get C155() {
      return C[155] = dart.const({
        __proto__: get_router_delegate.PreventDuplicateHandlingMode.prototype,
        [_name$0]: "PreventDuplicateHandlingMode.PopUntilOriginalRoute",
        index: 0
      });
    },
    get C156() {
      return C[156] = dart.const({
        __proto__: get_router_delegate.PreventDuplicateHandlingMode.prototype,
        [_name$0]: "PreventDuplicateHandlingMode.DoNothing",
        index: 1
      });
    },
    get C157() {
      return C[157] = dart.const({
        __proto__: get_router_delegate.PopMode.prototype,
        [_name$0]: "PopMode.Page",
        index: 1
      });
    },
    get C158() {
      return C[158] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[7] || CT.C7,
        [_Location_name]: null,
        [_Location_column]: 44,
        [_Location_line]: 287,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/nav2/get_router_delegate.dart"
      });
    },
    get C159() {
      return C[159] = dart.const({
        __proto__: navigator.DefaultTransitionDelegate.prototype
      });
    },
    get C162() {
      return C[162] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 290,
        [_Location_file]: null
      });
    },
    get C163() {
      return C[163] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPopPage",
        [_Location_column]: 7,
        [_Location_line]: 291,
        [_Location_file]: null
      });
    },
    get C164() {
      return C[164] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pages",
        [_Location_column]: 7,
        [_Location_line]: 292,
        [_Location_file]: null
      });
    },
    get C165() {
      return C[165] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "observers",
        [_Location_column]: 7,
        [_Location_line]: 293,
        [_Location_file]: null
      });
    },
    get C166() {
      return C[166] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transitionDelegate",
        [_Location_column]: 7,
        [_Location_line]: 297,
        [_Location_file]: null
      });
    },
    get C161() {
      return C[161] = dart.constList([C[162] || CT.C162, C[163] || CT.C163, C[164] || CT.C164, C[165] || CT.C165, C[166] || CT.C166], T$._LocationL());
    },
    get C160() {
      return C[160] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[161] || CT.C161,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 289,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/nav2/get_router_delegate.dart"
      });
    },
    get C167() {
      return C[167] = dart.constList([C[147] || CT.C147, C[157] || CT.C157], T$.PopModeL());
    },
    get C168() {
      return C[168] = dart.constList([C[155] || CT.C155, C[156] || CT.C156, C[148] || CT.C148], T$.PreventDuplicateHandlingModeL());
    },
    get C169() {
      return C[169] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 400000
      });
    },
    get C172() {
      return C[172] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scopesRoute",
        [_Location_column]: 7,
        [_Location_line]: 169,
        [_Location_file]: null
      });
    },
    get C173() {
      return C[173] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "explicitChildNodes",
        [_Location_column]: 7,
        [_Location_line]: 170,
        [_Location_file]: null
      });
    },
    get C174() {
      return C[174] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 171,
        [_Location_file]: null
      });
    },
    get C171() {
      return C[171] = dart.constList([C[172] || CT.C172, C[173] || CT.C173, C[174] || CT.C174], T$._LocationL());
    },
    get C170() {
      return C[170] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[171] || CT.C171,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 168,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C177() {
      return C[177] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "primaryRouteAnimation",
        [_Location_column]: 9,
        [_Location_line]: 221,
        [_Location_file]: null
      });
    },
    get C178() {
      return C[178] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "secondaryRouteAnimation",
        [_Location_column]: 9,
        [_Location_line]: 224,
        [_Location_file]: null
      });
    },
    get C179() {
      return C[179] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 225,
        [_Location_file]: null
      });
    },
    get C180() {
      return C[180] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "linearTransition",
        [_Location_column]: 9,
        [_Location_line]: 226,
        [_Location_file]: null
      });
    },
    get C176() {
      return C[176] = dart.constList([C[177] || CT.C177, C[178] || CT.C178, C[179] || CT.C179, C[180] || CT.C180], T$._LocationL());
    },
    get C175() {
      return C[175] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[176] || CT.C176,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 220,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C183() {
      return C[183] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestureWidth",
        [_Location_column]: 19,
        [_Location_line]: 238,
        [_Location_file]: null
      });
    },
    get C184() {
      return C[184] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabledCallback",
        [_Location_column]: 19,
        [_Location_line]: 240,
        [_Location_file]: null
      });
    },
    get C185() {
      return C[185] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onStartPopGesture",
        [_Location_column]: 19,
        [_Location_line]: 241,
        [_Location_file]: null
      });
    },
    get C186() {
      return C[186] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 242,
        [_Location_file]: null
      });
    },
    get C182() {
      return C[182] = dart.constList([C[183] || CT.C183, C[184] || CT.C184, C[185] || CT.C185, C[186] || CT.C186], T$._LocationL());
    },
    get C181() {
      return C[181] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[182] || CT.C182,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 237,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C189() {
      return C[189] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestureWidth",
        [_Location_column]: 23,
        [_Location_line]: 261,
        [_Location_file]: null
      });
    },
    get C190() {
      return C[190] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabledCallback",
        [_Location_column]: 23,
        [_Location_line]: 263,
        [_Location_file]: null
      });
    },
    get C191() {
      return C[191] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onStartPopGesture",
        [_Location_column]: 23,
        [_Location_line]: 264,
        [_Location_file]: null
      });
    },
    get C192() {
      return C[192] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 265,
        [_Location_file]: null
      });
    },
    get C188() {
      return C[188] = dart.constList([C[189] || CT.C189, C[190] || CT.C190, C[191] || CT.C191, C[192] || CT.C192], T$._LocationL());
    },
    get C187() {
      return C[187] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[188] || CT.C188,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 260,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C193() {
      return C[193] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_name$1]: "Transition.leftToRight",
        index: 3
      });
    },
    get C196() {
      return C[196] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestureWidth",
        [_Location_column]: 23,
        [_Location_line]: 277,
        [_Location_file]: null
      });
    },
    get C197() {
      return C[197] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabledCallback",
        [_Location_column]: 23,
        [_Location_line]: 279,
        [_Location_file]: null
      });
    },
    get C198() {
      return C[198] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onStartPopGesture",
        [_Location_column]: 23,
        [_Location_line]: 280,
        [_Location_file]: null
      });
    },
    get C199() {
      return C[199] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 281,
        [_Location_file]: null
      });
    },
    get C195() {
      return C[195] = dart.constList([C[196] || CT.C196, C[197] || CT.C197, C[198] || CT.C198, C[199] || CT.C199], T$._LocationL());
    },
    get C194() {
      return C[194] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[195] || CT.C195,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 276,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C200() {
      return C[200] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_name$1]: "Transition.downToUp",
        index: 5
      });
    },
    get C203() {
      return C[203] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestureWidth",
        [_Location_column]: 23,
        [_Location_line]: 293,
        [_Location_file]: null
      });
    },
    get C204() {
      return C[204] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabledCallback",
        [_Location_column]: 23,
        [_Location_line]: 295,
        [_Location_file]: null
      });
    },
    get C205() {
      return C[205] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onStartPopGesture",
        [_Location_column]: 23,
        [_Location_line]: 296,
        [_Location_file]: null
      });
    },
    get C206() {
      return C[206] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 297,
        [_Location_file]: null
      });
    },
    get C202() {
      return C[202] = dart.constList([C[203] || CT.C203, C[204] || CT.C204, C[205] || CT.C205, C[206] || CT.C206], T$._LocationL());
    },
    get C201() {
      return C[201] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[202] || CT.C202,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 292,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C207() {
      return C[207] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_name$1]: "Transition.upToDown",
        index: 4
      });
    },
    get C210() {
      return C[210] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestureWidth",
        [_Location_column]: 19,
        [_Location_line]: 303,
        [_Location_file]: null
      });
    },
    get C211() {
      return C[211] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabledCallback",
        [_Location_column]: 19,
        [_Location_line]: 305,
        [_Location_file]: null
      });
    },
    get C212() {
      return C[212] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onStartPopGesture",
        [_Location_column]: 19,
        [_Location_line]: 306,
        [_Location_file]: null
      });
    },
    get C213() {
      return C[213] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 307,
        [_Location_file]: null
      });
    },
    get C209() {
      return C[209] = dart.constList([C[210] || CT.C210, C[211] || CT.C211, C[212] || CT.C212, C[213] || CT.C213], T$._LocationL());
    },
    get C208() {
      return C[208] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[209] || CT.C209,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 302,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C214() {
      return C[214] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_name$1]: "Transition.noTransition",
        index: 10
      });
    },
    get C217() {
      return C[217] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestureWidth",
        [_Location_column]: 23,
        [_Location_line]: 319,
        [_Location_file]: null
      });
    },
    get C218() {
      return C[218] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabledCallback",
        [_Location_column]: 23,
        [_Location_line]: 321,
        [_Location_file]: null
      });
    },
    get C219() {
      return C[219] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onStartPopGesture",
        [_Location_column]: 23,
        [_Location_line]: 322,
        [_Location_file]: null
      });
    },
    get C220() {
      return C[220] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 323,
        [_Location_file]: null
      });
    },
    get C216() {
      return C[216] = dart.constList([C[217] || CT.C217, C[218] || CT.C218, C[219] || CT.C219, C[220] || CT.C220], T$._LocationL());
    },
    get C215() {
      return C[215] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[216] || CT.C216,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 318,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C221() {
      return C[221] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_name$1]: "Transition.rightToLeft",
        index: 2
      });
    },
    get C224() {
      return C[224] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestureWidth",
        [_Location_column]: 23,
        [_Location_line]: 335,
        [_Location_file]: null
      });
    },
    get C225() {
      return C[225] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabledCallback",
        [_Location_column]: 23,
        [_Location_line]: 337,
        [_Location_file]: null
      });
    },
    get C226() {
      return C[226] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onStartPopGesture",
        [_Location_column]: 23,
        [_Location_line]: 338,
        [_Location_file]: null
      });
    },
    get C227() {
      return C[227] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 339,
        [_Location_file]: null
      });
    },
    get C223() {
      return C[223] = dart.constList([C[224] || CT.C224, C[225] || CT.C225, C[226] || CT.C226, C[227] || CT.C227], T$._LocationL());
    },
    get C222() {
      return C[222] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[223] || CT.C223,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 334,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C228() {
      return C[228] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_name$1]: "Transition.zoom",
        index: 8
      });
    },
    get C231() {
      return C[231] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestureWidth",
        [_Location_column]: 23,
        [_Location_line]: 351,
        [_Location_file]: null
      });
    },
    get C232() {
      return C[232] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabledCallback",
        [_Location_column]: 23,
        [_Location_line]: 353,
        [_Location_file]: null
      });
    },
    get C233() {
      return C[233] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onStartPopGesture",
        [_Location_column]: 23,
        [_Location_line]: 354,
        [_Location_file]: null
      });
    },
    get C234() {
      return C[234] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 355,
        [_Location_file]: null
      });
    },
    get C230() {
      return C[230] = dart.constList([C[231] || CT.C231, C[232] || CT.C232, C[233] || CT.C233, C[234] || CT.C234], T$._LocationL());
    },
    get C229() {
      return C[229] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[230] || CT.C230,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 350,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C235() {
      return C[235] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_name$1]: "Transition.fadeIn",
        index: 1
      });
    },
    get C238() {
      return C[238] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestureWidth",
        [_Location_column]: 23,
        [_Location_line]: 367,
        [_Location_file]: null
      });
    },
    get C239() {
      return C[239] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabledCallback",
        [_Location_column]: 23,
        [_Location_line]: 369,
        [_Location_file]: null
      });
    },
    get C240() {
      return C[240] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onStartPopGesture",
        [_Location_column]: 23,
        [_Location_line]: 370,
        [_Location_file]: null
      });
    },
    get C241() {
      return C[241] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 371,
        [_Location_file]: null
      });
    },
    get C237() {
      return C[237] = dart.constList([C[238] || CT.C238, C[239] || CT.C239, C[240] || CT.C240, C[241] || CT.C241], T$._LocationL());
    },
    get C236() {
      return C[236] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[237] || CT.C237,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 366,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C242() {
      return C[242] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_name$1]: "Transition.rightToLeftWithFade",
        index: 6
      });
    },
    get C245() {
      return C[245] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestureWidth",
        [_Location_column]: 23,
        [_Location_line]: 383,
        [_Location_file]: null
      });
    },
    get C246() {
      return C[246] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabledCallback",
        [_Location_column]: 23,
        [_Location_line]: 385,
        [_Location_file]: null
      });
    },
    get C247() {
      return C[247] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onStartPopGesture",
        [_Location_column]: 23,
        [_Location_line]: 386,
        [_Location_file]: null
      });
    },
    get C248() {
      return C[248] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 387,
        [_Location_file]: null
      });
    },
    get C244() {
      return C[244] = dart.constList([C[245] || CT.C245, C[246] || CT.C246, C[247] || CT.C247, C[248] || CT.C248], T$._LocationL());
    },
    get C243() {
      return C[243] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[244] || CT.C244,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 382,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C249() {
      return C[249] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_name$1]: "Transition.leftToRightWithFade",
        index: 7
      });
    },
    get C252() {
      return C[252] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestureWidth",
        [_Location_column]: 15,
        [_Location_line]: 396,
        [_Location_file]: null
      });
    },
    get C253() {
      return C[253] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabledCallback",
        [_Location_column]: 15,
        [_Location_line]: 398,
        [_Location_file]: null
      });
    },
    get C254() {
      return C[254] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onStartPopGesture",
        [_Location_column]: 15,
        [_Location_line]: 399,
        [_Location_file]: null
      });
    },
    get C255() {
      return C[255] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 400,
        [_Location_file]: null
      });
    },
    get C251() {
      return C[251] = dart.constList([C[252] || CT.C252, C[253] || CT.C253, C[254] || CT.C254, C[255] || CT.C255], T$._LocationL());
    },
    get C250() {
      return C[250] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[251] || CT.C251,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 395,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C258() {
      return C[258] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "primaryRouteAnimation",
        [_Location_column]: 13,
        [_Location_line]: 392,
        [_Location_file]: null
      });
    },
    get C259() {
      return C[259] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "secondaryRouteAnimation",
        [_Location_column]: 13,
        [_Location_line]: 393,
        [_Location_file]: null
      });
    },
    get C260() {
      return C[260] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "linearTransition",
        [_Location_column]: 13,
        [_Location_line]: 394,
        [_Location_file]: null
      });
    },
    get C261() {
      return C[261] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 395,
        [_Location_file]: null
      });
    },
    get C257() {
      return C[257] = dart.constList([C[258] || CT.C258, C[259] || CT.C259, C[260] || CT.C260, C[261] || CT.C261], T$._LocationL());
    },
    get C256() {
      return C[256] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[257] || CT.C257,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 391,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C262() {
      return C[262] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_name$1]: "Transition.cupertino",
        index: 11
      });
    },
    get C265() {
      return C[265] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestureWidth",
        [_Location_column]: 23,
        [_Location_line]: 413,
        [_Location_file]: null
      });
    },
    get C266() {
      return C[266] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabledCallback",
        [_Location_column]: 23,
        [_Location_line]: 415,
        [_Location_file]: null
      });
    },
    get C267() {
      return C[267] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onStartPopGesture",
        [_Location_column]: 23,
        [_Location_line]: 416,
        [_Location_file]: null
      });
    },
    get C268() {
      return C[268] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 417,
        [_Location_file]: null
      });
    },
    get C264() {
      return C[264] = dart.constList([C[265] || CT.C265, C[266] || CT.C266, C[267] || CT.C267, C[268] || CT.C268], T$._LocationL());
    },
    get C263() {
      return C[263] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[264] || CT.C264,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 412,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C269() {
      return C[269] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_name$1]: "Transition.size",
        index: 13
      });
    },
    get C272() {
      return C[272] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestureWidth",
        [_Location_column]: 23,
        [_Location_line]: 428,
        [_Location_file]: null
      });
    },
    get C273() {
      return C[273] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabledCallback",
        [_Location_column]: 23,
        [_Location_line]: 430,
        [_Location_file]: null
      });
    },
    get C274() {
      return C[274] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onStartPopGesture",
        [_Location_column]: 23,
        [_Location_line]: 431,
        [_Location_file]: null
      });
    },
    get C275() {
      return C[275] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 432,
        [_Location_file]: null
      });
    },
    get C271() {
      return C[271] = dart.constList([C[272] || CT.C272, C[273] || CT.C273, C[274] || CT.C274, C[275] || CT.C275], T$._LocationL());
    },
    get C270() {
      return C[270] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[271] || CT.C271,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 427,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C276() {
      return C[276] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_name$1]: "Transition.fade",
        index: 0
      });
    },
    get C279() {
      return C[279] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestureWidth",
        [_Location_column]: 23,
        [_Location_line]: 443,
        [_Location_file]: null
      });
    },
    get C280() {
      return C[280] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabledCallback",
        [_Location_column]: 23,
        [_Location_line]: 445,
        [_Location_file]: null
      });
    },
    get C281() {
      return C[281] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onStartPopGesture",
        [_Location_column]: 23,
        [_Location_line]: 446,
        [_Location_file]: null
      });
    },
    get C282() {
      return C[282] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 447,
        [_Location_file]: null
      });
    },
    get C278() {
      return C[278] = dart.constList([C[279] || CT.C279, C[280] || CT.C280, C[281] || CT.C281, C[282] || CT.C282], T$._LocationL());
    },
    get C277() {
      return C[277] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[278] || CT.C278,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 442,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C283() {
      return C[283] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_name$1]: "Transition.topLevel",
        index: 9
      });
    },
    get C286() {
      return C[286] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestureWidth",
        [_Location_column]: 23,
        [_Location_line]: 458,
        [_Location_file]: null
      });
    },
    get C287() {
      return C[287] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabledCallback",
        [_Location_column]: 23,
        [_Location_line]: 460,
        [_Location_file]: null
      });
    },
    get C288() {
      return C[288] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onStartPopGesture",
        [_Location_column]: 23,
        [_Location_line]: 461,
        [_Location_file]: null
      });
    },
    get C289() {
      return C[289] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 462,
        [_Location_file]: null
      });
    },
    get C285() {
      return C[285] = dart.constList([C[286] || CT.C286, C[287] || CT.C287, C[288] || CT.C288, C[289] || CT.C289], T$._LocationL());
    },
    get C284() {
      return C[284] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[285] || CT.C285,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 457,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C290() {
      return C[290] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_name$1]: "Transition.native",
        index: 14
      });
    },
    get C293() {
      return C[293] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestureWidth",
        [_Location_column]: 23,
        [_Location_line]: 478,
        [_Location_file]: null
      });
    },
    get C294() {
      return C[294] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabledCallback",
        [_Location_column]: 23,
        [_Location_line]: 480,
        [_Location_file]: null
      });
    },
    get C295() {
      return C[295] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onStartPopGesture",
        [_Location_column]: 23,
        [_Location_line]: 481,
        [_Location_file]: null
      });
    },
    get C296() {
      return C[296] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 482,
        [_Location_file]: null
      });
    },
    get C292() {
      return C[292] = dart.constList([C[293] || CT.C293, C[294] || CT.C294, C[295] || CT.C295, C[296] || CT.C296], T$._LocationL());
    },
    get C291() {
      return C[291] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[292] || CT.C292,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 477,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C297() {
      return C[297] = dart.const({
        __proto__: ui.TextDirection.prototype,
        [_name$2]: "TextDirection.rtl",
        index: 0
      });
    },
    get C298() {
      return C[298] = dart.const({
        __proto__: ui.TextDirection.prototype,
        [_name$2]: "TextDirection.ltr",
        index: 1
      });
    },
    get C301() {
      return C[301] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerDown",
        [_Location_column]: 13,
        [_Location_line]: 601,
        [_Location_file]: null
      });
    },
    get C302() {
      return C[302] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 13,
        [_Location_line]: 602,
        [_Location_file]: null
      });
    },
    get C300() {
      return C[300] = dart.constList([C[301] || CT.C301, C[302] || CT.C302], T$._LocationL());
    },
    get C299() {
      return C[299] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[300] || CT.C300,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 600,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C305() {
      return C[305] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "start",
        [_Location_column]: 11,
        [_Location_line]: 596,
        [_Location_file]: null
      });
    },
    get C306() {
      return C[306] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 11,
        [_Location_line]: 597,
        [_Location_file]: null
      });
    },
    get C307() {
      return C[307] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 11,
        [_Location_line]: 598,
        [_Location_file]: null
      });
    },
    get C308() {
      return C[308] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 11,
        [_Location_line]: 599,
        [_Location_file]: null
      });
    },
    get C309() {
      return C[309] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 600,
        [_Location_file]: null
      });
    },
    get C304() {
      return C[304] = dart.constList([C[305] || CT.C305, C[306] || CT.C306, C[307] || CT.C307, C[308] || CT.C308, C[309] || CT.C309], T$._LocationL());
    },
    get C303() {
      return C[303] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[304] || CT.C304,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 595,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C312() {
      return C[312] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fit",
        [_Location_column]: 7,
        [_Location_line]: 592,
        [_Location_file]: null
      });
    },
    get C313() {
      return C[313] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 593,
        [_Location_file]: null
      });
    },
    get C311() {
      return C[311] = dart.constList([C[312] || CT.C312, C[313] || CT.C313], T$._LocationL());
    },
    get C310() {
      return C[310] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[311] || CT.C311,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 591,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C314() {
      return C[314] = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 1,
        [Cubic_c]: 0.04,
        [Cubic_b]: 1,
        [Cubic_a]: 0.18
      });
    },
    get C315() {
      return C[315] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 300000
      });
    },
    get C316() {
      return C[316] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C317() {
      return C[317] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 16
      });
    },
    get C318() {
      return C[318] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281348144.0
      });
    },
    get C319() {
      return C[319] = dart.const({
        __proto__: snack.SnackDismissDirection.prototype,
        [_name$3]: "SnackDismissDirection.VERTICAL",
        index: 1
      });
    },
    get C320() {
      return C[320] = dart.const({
        __proto__: snack.SnackPosition.prototype,
        [_name$3]: "SnackPosition.BOTTOM",
        index: 1
      });
    },
    get C321() {
      return C[321] = dart.const({
        __proto__: snack.SnackStyle.prototype,
        [_name$3]: "SnackStyle.FLOATING",
        index: 0
      });
    },
    get C322() {
      return C[322] = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 1,
        [Cubic_c]: 0.165,
        [Cubic_b]: 0.82,
        [Cubic_a]: 0.075
      });
    },
    get C323() {
      return C[323] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 1000000
      });
    },
    get C324() {
      return C[324] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 0
      });
    },
    get C327() {
      return C[327] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 40,
        [_Location_line]: 214,
        [_Location_file]: null
      });
    },
    get C328() {
      return C[328] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 52,
        [_Location_line]: 214,
        [_Location_file]: null
      });
    },
    get C326() {
      return C[326] = dart.constList([C[327] || CT.C327, C[328] || CT.C328], T$._LocationL());
    },
    get C325() {
      return C[325] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[326] || CT.C326,
        [_Location_name]: null,
        [_Location_column]: 31,
        [_Location_line]: 214,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C331() {
      return C[331] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minimum",
        [_Location_column]: 11,
        [_Location_line]: 326,
        [_Location_file]: null
      });
    },
    get C332() {
      return C[332] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 11,
        [_Location_line]: 335,
        [_Location_file]: null
      });
    },
    get C333() {
      return C[333] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 11,
        [_Location_line]: 336,
        [_Location_file]: null
      });
    },
    get C334() {
      return C[334] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 11,
        [_Location_line]: 337,
        [_Location_file]: null
      });
    },
    get C335() {
      return C[335] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "right",
        [_Location_column]: 11,
        [_Location_line]: 338,
        [_Location_file]: null
      });
    },
    get C336() {
      return C[336] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 339,
        [_Location_file]: null
      });
    },
    get C330() {
      return C[330] = dart.constList([C[331] || CT.C331, C[332] || CT.C332, C[333] || CT.C333, C[334] || CT.C334, C[335] || CT.C335, C[336] || CT.C336], T$._LocationL());
    },
    get C329() {
      return C[329] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[330] || CT.C330,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 325,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C339() {
      return C[339] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 9,
        [_Location_line]: 322,
        [_Location_file]: null
      });
    },
    get C340() {
      return C[340] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 325,
        [_Location_file]: null
      });
    },
    get C338() {
      return C[338] = dart.constList([C[339] || CT.C339, C[340] || CT.C340], T$._LocationL());
    },
    get C337() {
      return C[337] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[338] || CT.C338,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 321,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C343() {
      return C[343] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "heightFactor",
        [_Location_column]: 7,
        [_Location_line]: 320,
        [_Location_file]: null
      });
    },
    get C344() {
      return C[344] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 321,
        [_Location_file]: null
      });
    },
    get C342() {
      return C[342] = dart.constList([C[343] || CT.C343, C[344] || CT.C344], T$._LocationL());
    },
    get C341() {
      return C[341] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[342] || CT.C342,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 319,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C347() {
      return C[347] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 21,
        [_Location_line]: 369,
        [_Location_file]: null
      });
    },
    get C348() {
      return C[348] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 21,
        [_Location_line]: 370,
        [_Location_file]: null
      });
    },
    get C349() {
      return C[349] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 21,
        [_Location_line]: 371,
        [_Location_file]: null
      });
    },
    get C346() {
      return C[346] = dart.constList([C[347] || CT.C347, C[348] || CT.C348, C[349] || CT.C349], T$._LocationL());
    },
    get C345() {
      return C[345] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[346] || CT.C346,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 368,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C352() {
      return C[352] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "filter",
        [_Location_column]: 19,
        [_Location_line]: 366,
        [_Location_file]: null
      });
    },
    get C353() {
      return C[353] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 368,
        [_Location_file]: null
      });
    },
    get C351() {
      return C[351] = dart.constList([C[352] || CT.C352, C[353] || CT.C353], T$._LocationL());
    },
    get C350() {
      return C[350] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[351] || CT.C351,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 365,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C356() {
      return C[356] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderRadius",
        [_Location_column]: 17,
        [_Location_line]: 364,
        [_Location_file]: null
      });
    },
    get C357() {
      return C[357] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 365,
        [_Location_file]: null
      });
    },
    get C355() {
      return C[355] = dart.constList([C[356] || CT.C356, C[357] || CT.C357], T$._LocationL());
    },
    get C354() {
      return C[354] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[355] || CT.C355,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 363,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C360() {
      return C[360] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "future",
        [_Location_column]: 11,
        [_Location_line]: 357,
        [_Location_file]: null
      });
    },
    get C361() {
      return C[361] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 11,
        [_Location_line]: 358,
        [_Location_file]: null
      });
    },
    get C359() {
      return C[359] = dart.constList([C[360] || CT.C360, C[361] || CT.C361], T$._LocationL());
    },
    get C358() {
      return C[358] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[359] || CT.C359,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 356,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C364() {
      return C[364] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 355,
        [_Location_file]: null
      });
    },
    get C363() {
      return C[363] = dart.constList([C[364] || CT.C364], T$._LocationL());
    },
    get C362() {
      return C[362] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[363] || CT.C363,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 354,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C365() {
      return C[365] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 8,
        [EdgeInsets_right]: 8,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 8
      });
    },
    get C368() {
      return C[368] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 407,
        [_Location_file]: null
      });
    },
    get C369() {
      return C[369] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "node",
        [_Location_column]: 11,
        [_Location_line]: 408,
        [_Location_file]: null
      });
    },
    get C370() {
      return C[370] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 11,
        [_Location_line]: 409,
        [_Location_file]: null
      });
    },
    get C367() {
      return C[367] = dart.constList([C[368] || CT.C368, C[369] || CT.C369, C[370] || CT.C370], T$._LocationL());
    },
    get C366() {
      return C[366] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[367] || CT.C367,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 406,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C373() {
      return C[373] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 9,
        [_Location_line]: 404,
        [_Location_file]: null
      });
    },
    get C374() {
      return C[374] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 406,
        [_Location_file]: null
      });
    },
    get C372() {
      return C[372] = dart.constList([C[373] || CT.C373, C[374] || CT.C374], T$._LocationL());
    },
    get C371() {
      return C[371] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[372] || CT.C372,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 403,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C377() {
      return C[377] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 390,
        [_Location_file]: null
      });
    },
    get C378() {
      return C[378] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 7,
        [_Location_line]: 391,
        [_Location_file]: null
      });
    },
    get C379() {
      return C[379] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 7,
        [_Location_line]: 394,
        [_Location_file]: null
      });
    },
    get C380() {
      return C[380] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 403,
        [_Location_file]: null
      });
    },
    get C376() {
      return C[376] = dart.constList([C[377] || CT.C377, C[378] || CT.C378, C[379] || CT.C379, C[380] || CT.C380], T$._LocationL());
    },
    get C375() {
      return C[375] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[376] || CT.C376,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 389,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C383() {
      return C[383] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "value",
        [_Location_column]: 19,
        [_Location_line]: 438,
        [_Location_file]: null
      });
    },
    get C384() {
      return C[384] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 19,
        [_Location_line]: 441,
        [_Location_file]: null
      });
    },
    get C385() {
      return C[385] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "valueColor",
        [_Location_column]: 19,
        [_Location_line]: 442,
        [_Location_file]: null
      });
    },
    get C382() {
      return C[382] = dart.constList([C[383] || CT.C383, C[384] || CT.C384, C[385] || CT.C385], T$._LocationL());
    },
    get C381() {
      return C[381] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[382] || CT.C382,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 437,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C388() {
      return C[388] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisSize",
        [_Location_column]: 13,
        [_Location_line]: 446,
        [_Location_file]: null
      });
    },
    get C389() {
      return C[389] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 13,
        [_Location_line]: 447,
        [_Location_file]: null
      });
    },
    get C387() {
      return C[387] = dart.constList([C[388] || CT.C388, C[389] || CT.C389], T$._LocationL());
    },
    get C386() {
      return C[386] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[387] || CT.C387,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 445,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C392() {
      return C[392] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisSize",
        [_Location_column]: 9,
        [_Location_line]: 434,
        [_Location_file]: null
      });
    },
    get C393() {
      return C[393] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 435,
        [_Location_file]: null
      });
    },
    get C391() {
      return C[391] = dart.constList([C[392] || CT.C392, C[393] || CT.C393], T$._LocationL());
    },
    get C390() {
      return C[390] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[391] || CT.C391,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 433,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C396() {
      return C[396] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 420,
        [_Location_file]: null
      });
    },
    get C397() {
      return C[397] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 7,
        [_Location_line]: 421,
        [_Location_file]: null
      });
    },
    get C398() {
      return C[398] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 7,
        [_Location_line]: 424,
        [_Location_file]: null
      });
    },
    get C399() {
      return C[399] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 433,
        [_Location_file]: null
      });
    },
    get C395() {
      return C[395] = dart.constList([C[396] || CT.C396, C[397] || CT.C397, C[398] || CT.C398, C[399] || CT.C399], T$._LocationL());
    },
    get C394() {
      return C[394] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[395] || CT.C395,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 419,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C402() {
      return C[402] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 23,
        [_Location_line]: 478,
        [_Location_file]: null
      });
    },
    get C403() {
      return C[403] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 483,
        [_Location_file]: null
      });
    },
    get C401() {
      return C[401] = dart.constList([C[402] || CT.C402, C[403] || CT.C403], T$._LocationL());
    },
    get C400() {
      return C[400] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[401] || CT.C401,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 477,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C406() {
      return C[406] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 17,
        [_Location_line]: 487,
        [_Location_file]: null
      });
    },
    get C407() {
      return C[407] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 493,
        [_Location_file]: null
      });
    },
    get C405() {
      return C[405] = dart.constList([C[406] || CT.C406, C[407] || CT.C407], T$._LocationL());
    },
    get C404() {
      return C[404] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[405] || CT.C405,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 486,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C410() {
      return C[410] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "crossAxisAlignment",
        [_Location_column]: 13,
        [_Location_line]: 473,
        [_Location_file]: null
      });
    },
    get C411() {
      return C[411] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisSize",
        [_Location_column]: 13,
        [_Location_line]: 474,
        [_Location_file]: null
      });
    },
    get C412() {
      return C[412] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 13,
        [_Location_line]: 475,
        [_Location_file]: null
      });
    },
    get C409() {
      return C[409] = dart.constList([C[410] || CT.C410, C[411] || CT.C411, C[412] || CT.C412], T$._LocationL());
    },
    get C408() {
      return C[408] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[409] || CT.C409,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 472,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C415() {
      return C[415] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "flex",
        [_Location_column]: 11,
        [_Location_line]: 471,
        [_Location_file]: null
      });
    },
    get C416() {
      return C[416] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 472,
        [_Location_file]: null
      });
    },
    get C414() {
      return C[414] = dart.constList([C[415] || CT.C415, C[416] || CT.C416], T$._LocationL());
    },
    get C413() {
      return C[413] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[414] || CT.C414,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 470,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C419() {
      return C[419] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 11,
        [_Location_line]: 503,
        [_Location_file]: null
      });
    },
    get C420() {
      return C[420] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 504,
        [_Location_file]: null
      });
    },
    get C418() {
      return C[418] = dart.constList([C[419] || CT.C419, C[420] || CT.C420], T$._LocationL());
    },
    get C417() {
      return C[417] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[418] || CT.C418,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 502,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C423() {
      return C[423] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 23,
        [_Location_line]: 514,
        [_Location_file]: null
      });
    },
    get C424() {
      return C[424] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 519,
        [_Location_file]: null
      });
    },
    get C422() {
      return C[422] = dart.constList([C[423] || CT.C423, C[424] || CT.C424], T$._LocationL());
    },
    get C421() {
      return C[421] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[422] || CT.C422,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 513,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C427() {
      return C[427] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 17,
        [_Location_line]: 523,
        [_Location_file]: null
      });
    },
    get C428() {
      return C[428] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 529,
        [_Location_file]: null
      });
    },
    get C426() {
      return C[426] = dart.constList([C[427] || CT.C427, C[428] || CT.C428], T$._LocationL());
    },
    get C425() {
      return C[425] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[426] || CT.C426,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 522,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C431() {
      return C[431] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "crossAxisAlignment",
        [_Location_column]: 13,
        [_Location_line]: 509,
        [_Location_file]: null
      });
    },
    get C432() {
      return C[432] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisSize",
        [_Location_column]: 13,
        [_Location_line]: 510,
        [_Location_file]: null
      });
    },
    get C433() {
      return C[433] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 13,
        [_Location_line]: 511,
        [_Location_file]: null
      });
    },
    get C430() {
      return C[430] = dart.constList([C[431] || CT.C431, C[432] || CT.C432, C[433] || CT.C433], T$._LocationL());
    },
    get C429() {
      return C[429] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[430] || CT.C430,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 508,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C436() {
      return C[436] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "flex",
        [_Location_column]: 11,
        [_Location_line]: 507,
        [_Location_file]: null
      });
    },
    get C437() {
      return C[437] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 508,
        [_Location_file]: null
      });
    },
    get C435() {
      return C[435] = dart.constList([C[436] || CT.C436, C[437] || CT.C437], T$._LocationL());
    },
    get C434() {
      return C[434] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[435] || CT.C435,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 506,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C440() {
      return C[440] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 23,
        [_Location_line]: 546,
        [_Location_file]: null
      });
    },
    get C441() {
      return C[441] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 551,
        [_Location_file]: null
      });
    },
    get C439() {
      return C[439] = dart.constList([C[440] || CT.C440, C[441] || CT.C441], T$._LocationL());
    },
    get C438() {
      return C[438] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[439] || CT.C439,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 545,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C444() {
      return C[444] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 17,
        [_Location_line]: 555,
        [_Location_file]: null
      });
    },
    get C445() {
      return C[445] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 561,
        [_Location_file]: null
      });
    },
    get C443() {
      return C[443] = dart.constList([C[444] || CT.C444, C[445] || CT.C445], T$._LocationL());
    },
    get C442() {
      return C[442] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[443] || CT.C443,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 554,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C448() {
      return C[448] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "crossAxisAlignment",
        [_Location_column]: 13,
        [_Location_line]: 541,
        [_Location_file]: null
      });
    },
    get C449() {
      return C[449] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisSize",
        [_Location_column]: 13,
        [_Location_line]: 542,
        [_Location_file]: null
      });
    },
    get C450() {
      return C[450] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 13,
        [_Location_line]: 543,
        [_Location_file]: null
      });
    },
    get C447() {
      return C[447] = dart.constList([C[448] || CT.C448, C[449] || CT.C449, C[450] || CT.C450], T$._LocationL());
    },
    get C446() {
      return C[446] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[447] || CT.C447,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 540,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C453() {
      return C[453] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "flex",
        [_Location_column]: 11,
        [_Location_line]: 539,
        [_Location_file]: null
      });
    },
    get C454() {
      return C[454] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 540,
        [_Location_file]: null
      });
    },
    get C452() {
      return C[452] = dart.constList([C[453] || CT.C453, C[454] || CT.C454], T$._LocationL());
    },
    get C451() {
      return C[451] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[452] || CT.C452,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 538,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C457() {
      return C[457] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 11,
        [_Location_line]: 567,
        [_Location_file]: null
      });
    },
    get C458() {
      return C[458] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 568,
        [_Location_file]: null
      });
    },
    get C456() {
      return C[456] = dart.constList([C[457] || CT.C457, C[458] || CT.C458], T$._LocationL());
    },
    get C455() {
      return C[455] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[456] || CT.C456,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 566,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C461() {
      return C[461] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 11,
        [_Location_line]: 575,
        [_Location_file]: null
      });
    },
    get C462() {
      return C[462] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 576,
        [_Location_file]: null
      });
    },
    get C460() {
      return C[460] = dart.constList([C[461] || CT.C461, C[462] || CT.C462], T$._LocationL());
    },
    get C459() {
      return C[459] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[460] || CT.C460,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 574,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C465() {
      return C[465] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 23,
        [_Location_line]: 586,
        [_Location_file]: null
      });
    },
    get C466() {
      return C[466] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 591,
        [_Location_file]: null
      });
    },
    get C464() {
      return C[464] = dart.constList([C[465] || CT.C465, C[466] || CT.C466], T$._LocationL());
    },
    get C463() {
      return C[463] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[464] || CT.C464,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 585,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C469() {
      return C[469] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 17,
        [_Location_line]: 595,
        [_Location_file]: null
      });
    },
    get C470() {
      return C[470] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 601,
        [_Location_file]: null
      });
    },
    get C468() {
      return C[468] = dart.constList([C[469] || CT.C469, C[470] || CT.C470], T$._LocationL());
    },
    get C467() {
      return C[467] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[468] || CT.C468,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 594,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C473() {
      return C[473] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "crossAxisAlignment",
        [_Location_column]: 13,
        [_Location_line]: 581,
        [_Location_file]: null
      });
    },
    get C474() {
      return C[474] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisSize",
        [_Location_column]: 13,
        [_Location_line]: 582,
        [_Location_file]: null
      });
    },
    get C475() {
      return C[475] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 13,
        [_Location_line]: 583,
        [_Location_file]: null
      });
    },
    get C472() {
      return C[472] = dart.constList([C[473] || CT.C473, C[474] || CT.C474, C[475] || CT.C475], T$._LocationL());
    },
    get C471() {
      return C[471] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[472] || CT.C472,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 580,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C478() {
      return C[478] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "flex",
        [_Location_column]: 11,
        [_Location_line]: 579,
        [_Location_file]: null
      });
    },
    get C479() {
      return C[479] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 580,
        [_Location_file]: null
      });
    },
    get C477() {
      return C[477] = dart.constList([C[478] || CT.C478, C[479] || CT.C479], T$._LocationL());
    },
    get C476() {
      return C[476] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[477] || CT.C477,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 578,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C482() {
      return C[482] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 11,
        [_Location_line]: 607,
        [_Location_file]: null
      });
    },
    get C483() {
      return C[483] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 608,
        [_Location_file]: null
      });
    },
    get C481() {
      return C[481] = dart.constList([C[482] || CT.C482, C[483] || CT.C483], T$._LocationL());
    },
    get C480() {
      return C[480] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[481] || CT.C481,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 606,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C486() {
      return C[486] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 15,
        [_Location_line]: 621,
        [_Location_file]: null
      });
    },
    get C487() {
      return C[487] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 15,
        [_Location_line]: 622,
        [_Location_file]: null
      });
    },
    get C488() {
      return C[488] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 15,
        [_Location_line]: 623,
        [_Location_file]: null
      });
    },
    get C485() {
      return C[485] = dart.constList([C[486] || CT.C486, C[487] || CT.C487, C[488] || CT.C488], T$._LocationL());
    },
    get C484() {
      return C[484] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[485] || CT.C485,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 620,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C491() {
      return C[491] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "future",
        [_Location_column]: 9,
        [_Location_line]: 617,
        [_Location_file]: null
      });
    },
    get C492() {
      return C[492] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 9,
        [_Location_line]: 618,
        [_Location_file]: null
      });
    },
    get C490() {
      return C[490] = dart.constList([C[491] || CT.C491, C[492] || CT.C492], T$._LocationL());
    },
    get C489() {
      return C[489] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[490] || CT.C490,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 616,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C495() {
      return C[495] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 9,
        [_Location_line]: 638,
        [_Location_file]: null
      });
    },
    get C496() {
      return C[496] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 639,
        [_Location_file]: null
      });
    },
    get C494() {
      return C[494] = dart.constList([C[495] || CT.C495, C[496] || CT.C496], T$._LocationL());
    },
    get C493() {
      return C[493] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[494] || CT.C494,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 637,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C499() {
      return C[499] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 24,
        [_Location_line]: 651,
        [_Location_file]: null
      });
    },
    get C500() {
      return C[500] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 11,
        [_Location_line]: 652,
        [_Location_file]: null
      });
    },
    get C498() {
      return C[498] = dart.constList([C[499] || CT.C499, C[500] || CT.C500], T$._LocationL());
    },
    get C497() {
      return C[497] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[498] || CT.C498,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 650,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C503() {
      return C[503] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 22,
        [_Location_line]: 659,
        [_Location_file]: null
      });
    },
    get C504() {
      return C[504] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 7,
        [_Location_line]: 660,
        [_Location_file]: null
      });
    },
    get C502() {
      return C[502] = dart.constList([C[503] || CT.C503, C[504] || CT.C504], T$._LocationL());
    },
    get C501() {
      return C[501] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[502] || CT.C502,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 658,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart"
      });
    },
    get C505() {
      return C[505] = dart.const({
        __proto__: snack.SnackPosition.prototype,
        [_name$3]: "SnackPosition.TOP",
        index: 0
      });
    },
    get C506() {
      return C[506] = dart.constList([C[505] || CT.C505, C[320] || CT.C320], T$.SnackPositionL());
    },
    get C507() {
      return C[507] = dart.const({
        __proto__: snack.SnackStyle.prototype,
        [_name$3]: "SnackStyle.GROUNDED",
        index: 1
      });
    },
    get C508() {
      return C[508] = dart.constList([C[321] || CT.C321, C[507] || CT.C507], T$.SnackStyleL());
    },
    get C509() {
      return C[509] = dart.const({
        __proto__: snack.SnackDismissDirection.prototype,
        [_name$3]: "SnackDismissDirection.HORIZONTAL",
        index: 0
      });
    },
    get C510() {
      return C[510] = dart.constList([C[509] || CT.C509, C[319] || CT.C319], T$.SnackDismissDirectionL());
    },
    get C511() {
      return C[511] = dart.const({
        __proto__: snack.SnackbarStatus.prototype,
        [_name$3]: "SnackbarStatus.OPEN",
        index: 0
      });
    },
    get C512() {
      return C[512] = dart.const({
        __proto__: snack.SnackbarStatus.prototype,
        [_name$3]: "SnackbarStatus.CLOSED",
        index: 1
      });
    },
    get C513() {
      return C[513] = dart.const({
        __proto__: snack.SnackbarStatus.prototype,
        [_name$3]: "SnackbarStatus.OPENING",
        index: 2
      });
    },
    get C514() {
      return C[514] = dart.const({
        __proto__: snack.SnackbarStatus.prototype,
        [_name$3]: "SnackbarStatus.CLOSING",
        index: 3
      });
    },
    get C515() {
      return C[515] = dart.constList([C[511] || CT.C511, C[512] || CT.C512, C[513] || CT.C513, C[514] || CT.C514], T$.SnackbarStatusL());
    },
    get C518() {
      return C[518] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 18,
        [_Location_file]: null
      });
    },
    get C519() {
      return C[519] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 9,
        [_Location_line]: 19,
        [_Location_file]: null
      });
    },
    get C517() {
      return C[517] = dart.constList([C[518] || CT.C518, C[519] || CT.C519], T$._LocationL());
    },
    get C516() {
      return C[516] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[517] || CT.C517,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 17,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack_route.dart"
      });
    },
    get C522() {
      return C[522] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 24,
        [_Location_line]: 16,
        [_Location_file]: null
      });
    },
    get C521() {
      return C[521] = dart.constList([C[522] || CT.C522], T$._LocationL());
    },
    get C520() {
      return C[520] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[521] || CT.C521,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 16,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack_route.dart"
      });
    },
    get C525() {
      return C[525] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 23,
        [_Location_line]: 80,
        [_Location_file]: null
      });
    },
    get C526() {
      return C[526] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 23,
        [_Location_line]: 81,
        [_Location_file]: null
      });
    },
    get C524() {
      return C[524] = dart.constList([C[525] || CT.C525, C[526] || CT.C526], T$._LocationL());
    },
    get C523() {
      return C[523] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[524] || CT.C524,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 79,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack_route.dart"
      });
    },
    get C529() {
      return C[529] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "filter",
        [_Location_column]: 21,
        [_Location_line]: 76,
        [_Location_file]: null
      });
    },
    get C530() {
      return C[530] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 21,
        [_Location_line]: 79,
        [_Location_file]: null
      });
    },
    get C528() {
      return C[528] = dart.constList([C[529] || CT.C529, C[530] || CT.C530], T$._LocationL());
    },
    get C527() {
      return C[527] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[528] || CT.C528,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 75,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack_route.dart"
      });
    },
    get C533() {
      return C[533] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 17,
        [_Location_line]: 73,
        [_Location_file]: null
      });
    },
    get C534() {
      return C[534] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 17,
        [_Location_line]: 74,
        [_Location_file]: null
      });
    },
    get C532() {
      return C[532] = dart.constList([C[533] || CT.C533, C[534] || CT.C534], T$._LocationL());
    },
    get C531() {
      return C[531] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[532] || CT.C532,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 72,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack_route.dart"
      });
    },
    get C537() {
      return C[537] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 15,
        [_Location_line]: 66,
        [_Location_file]: null
      });
    },
    get C538() {
      return C[538] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 72,
        [_Location_file]: null
      });
    },
    get C536() {
      return C[536] = dart.constList([C[537] || CT.C537, C[538] || CT.C538], T$._LocationL());
    },
    get C535() {
      return C[535] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[536] || CT.C536,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 65,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack_route.dart"
      });
    },
    get C541() {
      return C[541] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 15,
        [_Location_line]: 96,
        [_Location_file]: null
      });
    },
    get C542() {
      return C[542] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 97,
        [_Location_file]: null
      });
    },
    get C540() {
      return C[540] = dart.constList([C[541] || CT.C541, C[542] || CT.C542], T$._LocationL());
    },
    get C539() {
      return C[539] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[540] || CT.C540,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 95,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack_route.dart"
      });
    },
    get C545() {
      return C[545] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 95,
        [_Location_file]: null
      });
    },
    get C546() {
      return C[546] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focused",
        [_Location_column]: 13,
        [_Location_line]: 101,
        [_Location_file]: null
      });
    },
    get C547() {
      return C[547] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "container",
        [_Location_column]: 13,
        [_Location_line]: 102,
        [_Location_file]: null
      });
    },
    get C548() {
      return C[548] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "explicitChildNodes",
        [_Location_column]: 13,
        [_Location_line]: 103,
        [_Location_file]: null
      });
    },
    get C544() {
      return C[544] = dart.constList([C[545] || CT.C545, C[546] || CT.C546, C[547] || CT.C547, C[548] || CT.C548], T$._LocationL());
    },
    get C543() {
      return C[543] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[544] || CT.C544,
        [_Location_name]: null,
        [_Location_column]: 41,
        [_Location_line]: 94,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack_route.dart"
      });
    },
    get C551() {
      return C[551] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "direction",
        [_Location_column]: 7,
        [_Location_line]: 117,
        [_Location_file]: null
      });
    },
    get C552() {
      return C[552] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "resizeDuration",
        [_Location_column]: 7,
        [_Location_line]: 118,
        [_Location_file]: null
      });
    },
    get C553() {
      return C[553] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "confirmDismiss",
        [_Location_column]: 7,
        [_Location_line]: 119,
        [_Location_file]: null
      });
    },
    get C554() {
      return C[554] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 126,
        [_Location_file]: null
      });
    },
    get C555() {
      return C[555] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDismissed",
        [_Location_column]: 7,
        [_Location_line]: 127,
        [_Location_file]: null
      });
    },
    get C556() {
      return C[556] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 138,
        [_Location_file]: null
      });
    },
    get C550() {
      return C[550] = dart.constList([C[551] || CT.C551, C[552] || CT.C552, C[553] || CT.C553, C[554] || CT.C554, C[555] || CT.C555, C[556] || CT.C556], T$._LocationL());
    },
    get C549() {
      return C[549] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[550] || CT.C550,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 116,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack_route.dart"
      });
    },
    get C559() {
      return C[559] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 7,
        [_Location_line]: 144,
        [_Location_file]: null
      });
    },
    get C560() {
      return C[560] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 145,
        [_Location_file]: null
      });
    },
    get C558() {
      return C[558] = dart.constList([C[559] || CT.C559, C[560] || CT.C560], T$._LocationL());
    },
    get C557() {
      return C[557] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[558] || CT.C558,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 143,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack_route.dart"
      });
    },
    get C561() {
      return C[561] = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [_name$4]: "AnimationStatus.completed",
        index: 3
      });
    },
    get C562() {
      return C[562] = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [_name$4]: "AnimationStatus.forward",
        index: 1
      });
    },
    get C563() {
      return C[563] = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [_name$4]: "AnimationStatus.reverse",
        index: 2
      });
    },
    get C564() {
      return C[564] = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [_name$4]: "AnimationStatus.dismissed",
        index: 0
      });
    },
    get C567() {
      return C[567] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 38,
        [_Location_line]: 39,
        [_Location_file]: null
      });
    },
    get C566() {
      return C[566] = dart.constList([C[567] || CT.C567], T$._LocationL());
    },
    get C565() {
      return C[565] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[566] || CT.C566,
        [_Location_name]: null,
        [_Location_column]: 34,
        [_Location_line]: 39,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_state_manager/src/simple/mixin_state.dart"
      });
    },
    get C570() {
      return C[570] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "init",
        [_Location_column]: 9,
        [_Location_line]: 31,
        [_Location_file]: null
      });
    },
    get C571() {
      return C[571] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "global",
        [_Location_column]: 9,
        [_Location_line]: 32,
        [_Location_file]: null
      });
    },
    get C572() {
      return C[572] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autoRemove",
        [_Location_column]: 9,
        [_Location_line]: 33,
        [_Location_file]: null
      });
    },
    get C573() {
      return C[573] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "initState",
        [_Location_column]: 9,
        [_Location_line]: 34,
        [_Location_file]: null
      });
    },
    get C574() {
      return C[574] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dispose",
        [_Location_column]: 9,
        [_Location_line]: 35,
        [_Location_file]: null
      });
    },
    get C575() {
      return C[575] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "id",
        [_Location_column]: 9,
        [_Location_line]: 36,
        [_Location_file]: null
      });
    },
    get C576() {
      return C[576] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "didChangeDependencies",
        [_Location_column]: 9,
        [_Location_line]: 37,
        [_Location_file]: null
      });
    },
    get C577() {
      return C[577] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "didUpdateWidget",
        [_Location_column]: 9,
        [_Location_line]: 38,
        [_Location_file]: null
      });
    },
    get C578() {
      return C[578] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 9,
        [_Location_line]: 39,
        [_Location_file]: null
      });
    },
    get C569() {
      return C[569] = dart.constList([C[570] || CT.C570, C[571] || CT.C571, C[572] || CT.C572, C[573] || CT.C573, C[574] || CT.C574, C[575] || CT.C575, C[576] || CT.C576, C[577] || CT.C577, C[578] || CT.C578], T$._LocationL());
    },
    get C568() {
      return C[568] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[569] || CT.C569,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 30,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_state_manager/src/simple/mixin_state.dart"
      });
    },
    get C579() {
      return C[579] = dart.const({
        __proto__: get_responsive.ResponsiveScreenSettings.prototype,
        [ResponsiveScreenSettings_watchChangePoint]: 300,
        [ResponsiveScreenSettings_tabletChangePoint]: 600,
        [ResponsiveScreenSettings_desktopChangePoint]: 1200
      });
    },
    get C580() {
      return C[580] = dart.const({
        __proto__: get_responsive.ScreenType.prototype,
        [_name$5]: "ScreenType.Watch",
        index: 0
      });
    },
    get C581() {
      return C[581] = dart.const({
        __proto__: get_responsive.ScreenType.prototype,
        [_name$5]: "ScreenType.Phone",
        index: 1
      });
    },
    get C582() {
      return C[582] = dart.const({
        __proto__: get_responsive.ScreenType.prototype,
        [_name$5]: "ScreenType.Tablet",
        index: 2
      });
    },
    get C583() {
      return C[583] = dart.const({
        __proto__: get_responsive.ScreenType.prototype,
        [_name$5]: "ScreenType.Desktop",
        index: 3
      });
    },
    get C584() {
      return C[584] = dart.constList([C[580] || CT.C580, C[581] || CT.C581, C[582] || CT.C582, C[583] || CT.C583], T$.ScreenTypeL());
    },
    get C585() {
      return C[585] = dart.const({
        __proto__: ui.AppLifecycleState.prototype,
        [_name$2]: "AppLifecycleState.resumed",
        index: 0
      });
    },
    get C586() {
      return C[586] = dart.const({
        __proto__: ui.AppLifecycleState.prototype,
        [_name$2]: "AppLifecycleState.inactive",
        index: 1
      });
    },
    get C587() {
      return C[587] = dart.const({
        __proto__: ui.AppLifecycleState.prototype,
        [_name$2]: "AppLifecycleState.paused",
        index: 2
      });
    },
    get C588() {
      return C[588] = dart.const({
        __proto__: ui.AppLifecycleState.prototype,
        [_name$2]: "AppLifecycleState.detached",
        index: 3
      });
    },
    get C592() {
      return C[592] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 42,
        [_Location_line]: 143,
        [_Location_file]: null
      });
    },
    get C591() {
      return C[591] = dart.constList([C[592] || CT.C592], T$._LocationL());
    },
    get C590() {
      return C[590] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[591] || CT.C591,
        [_Location_name]: null,
        [_Location_column]: 35,
        [_Location_line]: 143,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_state_manager/src/rx_flutter/rx_notifier.dart"
      });
    },
    get C594() {
      return C[594] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[7] || CT.C7,
        [_Location_name]: null,
        [_Location_column]: 49,
        [_Location_line]: 143,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_state_manager/src/rx_flutter/rx_notifier.dart"
      });
    },
    get C595() {
      return C[595] = dart.const({
        __proto__: progress_indicator._ActivityIndicatorType.prototype,
        [_name$6]: "_ActivityIndicatorType.material",
        index: 0
      });
    },
    get C593() {
      return C[593] = dart.const({
        __proto__: progress_indicator.CircularProgressIndicator.prototype,
        [Widget__location]: C[594] || CT.C594,
        [Widget_key]: null,
        [ProgressIndicator_semanticsValue]: null,
        [ProgressIndicator_semanticsLabel]: null,
        [ProgressIndicator_valueColor]: null,
        [ProgressIndicator_color]: null,
        [ProgressIndicator_backgroundColor]: null,
        [ProgressIndicator_value]: null,
        [CircularProgressIndicator_strokeWidth]: 4,
        [CircularProgressIndicator__indicatorType]: C[595] || CT.C595
      });
    },
    get C596() {
      return C[596] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: 0
      });
    },
    get C589() {
      return C[589] = dart.const({
        __proto__: basic.Center.prototype,
        [Widget__location]: C[590] || CT.C590,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: C[593] || CT.C593,
        [Align_heightFactor]: null,
        [Align_widthFactor]: null,
        [Align_alignment]: C[596] || CT.C596
      });
    },
    get C599() {
      return C[599] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 76,
        [_Location_line]: 147,
        [_Location_file]: null
      });
    },
    get C598() {
      return C[598] = dart.constList([C[599] || CT.C599], T$._LocationL());
    },
    get C597() {
      return C[597] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[598] || CT.C598,
        [_Location_name]: null,
        [_Location_column]: 29,
        [_Location_line]: 147,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_state_manager/src/rx_flutter/rx_notifier.dart"
      });
    },
    get C602() {
      return C[602] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 22,
        [_Location_line]: 147,
        [_Location_file]: null
      });
    },
    get C601() {
      return C[601] = dart.constList([C[602] || CT.C602], T$._LocationL());
    },
    get C600() {
      return C[600] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[601] || CT.C601,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 147,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_state_manager/src/rx_flutter/rx_notifier.dart"
      });
    },
    get C603() {
      return C[603] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[7] || CT.C7,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 151,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_state_manager/src/rx_flutter/rx_notifier.dart"
      });
    },
    get C606() {
      return C[606] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 26,
        [_Location_line]: 141,
        [_Location_file]: null
      });
    },
    get C605() {
      return C[605] = dart.constList([C[606] || CT.C606], T$._LocationL());
    },
    get C604() {
      return C[604] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[605] || CT.C605,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 141,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_state_manager/src/rx_flutter/rx_notifier.dart"
      });
    },
    get C607() {
      return C[607] = dart.const({
        __proto__: curves._Linear.prototype
      });
    },
    get C608() {
      return C[608] = dart.constList([], T$.BindingsL());
    },
    get C609() {
      return C[609] = dart.constList([], T$.GetPageL());
    },
    get C610() {
      return C[610] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 2147483648.0
      });
    },
    get C611() {
      return C[611] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 200000
      });
    },
    get C614() {
      return C[614] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 53,
        [_Location_file]: null
      });
    },
    get C615() {
      return C[615] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scopesRoute",
        [_Location_column]: 7,
        [_Location_line]: 54,
        [_Location_file]: null
      });
    },
    get C616() {
      return C[616] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "explicitChildNodes",
        [_Location_column]: 7,
        [_Location_line]: 55,
        [_Location_file]: null
      });
    },
    get C613() {
      return C[613] = dart.constList([C[614] || CT.C614, C[615] || CT.C615, C[616] || CT.C616], T$._LocationL());
    },
    get C612() {
      return C[612] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[613] || CT.C613,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 52,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/dialog/dialog_route.dart"
      });
    },
    get C619() {
      return C[619] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 11,
        [_Location_line]: 64,
        [_Location_file]: null
      });
    },
    get C620() {
      return C[620] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 68,
        [_Location_file]: null
      });
    },
    get C618() {
      return C[618] = dart.constList([C[619] || CT.C619, C[620] || CT.C620], T$._LocationL());
    },
    get C617() {
      return C[617] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[618] || CT.C618,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 63,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/dialog/dialog_route.dart"
      });
    },
    get C621() {
      return C[621] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 3000000
      });
    },
    get C624() {
      return C[624] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "snackbarStatus",
        [_Location_column]: 7,
        [_Location_line]: 55,
        [_Location_file]: null
      });
    },
    get C625() {
      return C[625] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 7,
        [_Location_line]: 56,
        [_Location_file]: null
      });
    },
    get C626() {
      return C[626] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "message",
        [_Location_column]: 7,
        [_Location_line]: 57,
        [_Location_file]: null
      });
    },
    get C627() {
      return C[627] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "titleText",
        [_Location_column]: 7,
        [_Location_line]: 58,
        [_Location_file]: null
      });
    },
    get C628() {
      return C[628] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "messageText",
        [_Location_column]: 7,
        [_Location_line]: 59,
        [_Location_file]: null
      });
    },
    get C629() {
      return C[629] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "snackPosition",
        [_Location_column]: 7,
        [_Location_line]: 60,
        [_Location_file]: null
      });
    },
    get C630() {
      return C[630] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderRadius",
        [_Location_column]: 7,
        [_Location_line]: 61,
        [_Location_file]: null
      });
    },
    get C631() {
      return C[631] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 7,
        [_Location_line]: 62,
        [_Location_file]: null
      });
    },
    get C632() {
      return C[632] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "duration",
        [_Location_column]: 7,
        [_Location_line]: 63,
        [_Location_file]: null
      });
    },
    get C633() {
      return C[633] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "barBlur",
        [_Location_column]: 7,
        [_Location_line]: 64,
        [_Location_file]: null
      });
    },
    get C634() {
      return C[634] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 7,
        [_Location_line]: 65,
        [_Location_file]: null
      });
    },
    get C635() {
      return C[635] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "icon",
        [_Location_column]: 7,
        [_Location_line]: 66,
        [_Location_file]: null
      });
    },
    get C636() {
      return C[636] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shouldIconPulse",
        [_Location_column]: 7,
        [_Location_line]: 67,
        [_Location_file]: null
      });
    },
    get C637() {
      return C[637] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxWidth",
        [_Location_column]: 7,
        [_Location_line]: 68,
        [_Location_file]: null
      });
    },
    get C638() {
      return C[638] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 7,
        [_Location_line]: 69,
        [_Location_file]: null
      });
    },
    get C639() {
      return C[639] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderColor",
        [_Location_column]: 7,
        [_Location_line]: 70,
        [_Location_file]: null
      });
    },
    get C640() {
      return C[640] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderWidth",
        [_Location_column]: 7,
        [_Location_line]: 71,
        [_Location_file]: null
      });
    },
    get C641() {
      return C[641] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "leftBarIndicatorColor",
        [_Location_column]: 7,
        [_Location_line]: 72,
        [_Location_file]: null
      });
    },
    get C642() {
      return C[642] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "boxShadows",
        [_Location_column]: 7,
        [_Location_line]: 73,
        [_Location_file]: null
      });
    },
    get C643() {
      return C[643] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundGradient",
        [_Location_column]: 7,
        [_Location_line]: 74,
        [_Location_file]: null
      });
    },
    get C644() {
      return C[644] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainButton",
        [_Location_column]: 7,
        [_Location_line]: 75,
        [_Location_file]: null
      });
    },
    get C645() {
      return C[645] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 7,
        [_Location_line]: 76,
        [_Location_file]: null
      });
    },
    get C646() {
      return C[646] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isDismissible",
        [_Location_column]: 7,
        [_Location_line]: 77,
        [_Location_file]: null
      });
    },
    get C647() {
      return C[647] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dismissDirection",
        [_Location_column]: 7,
        [_Location_line]: 78,
        [_Location_file]: null
      });
    },
    get C648() {
      return C[648] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showProgressIndicator",
        [_Location_column]: 7,
        [_Location_line]: 79,
        [_Location_file]: null
      });
    },
    get C649() {
      return C[649] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "progressIndicatorController",
        [_Location_column]: 7,
        [_Location_line]: 80,
        [_Location_file]: null
      });
    },
    get C650() {
      return C[650] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "progressIndicatorBackgroundColor",
        [_Location_column]: 7,
        [_Location_line]: 81,
        [_Location_file]: null
      });
    },
    get C651() {
      return C[651] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "progressIndicatorValueColor",
        [_Location_column]: 7,
        [_Location_line]: 82,
        [_Location_file]: null
      });
    },
    get C652() {
      return C[652] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "snackStyle",
        [_Location_column]: 7,
        [_Location_line]: 83,
        [_Location_file]: null
      });
    },
    get C653() {
      return C[653] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "forwardAnimationCurve",
        [_Location_column]: 7,
        [_Location_line]: 84,
        [_Location_file]: null
      });
    },
    get C654() {
      return C[654] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "reverseAnimationCurve",
        [_Location_column]: 7,
        [_Location_line]: 85,
        [_Location_file]: null
      });
    },
    get C655() {
      return C[655] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animationDuration",
        [_Location_column]: 7,
        [_Location_line]: 86,
        [_Location_file]: null
      });
    },
    get C656() {
      return C[656] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overlayBlur",
        [_Location_column]: 7,
        [_Location_line]: 87,
        [_Location_file]: null
      });
    },
    get C657() {
      return C[657] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overlayColor",
        [_Location_column]: 7,
        [_Location_line]: 88,
        [_Location_file]: null
      });
    },
    get C658() {
      return C[658] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "userInputForm",
        [_Location_column]: 7,
        [_Location_line]: 89,
        [_Location_file]: null
      });
    },
    get C623() {
      return C[623] = dart.constList([C[624] || CT.C624, C[625] || CT.C625, C[626] || CT.C626, C[627] || CT.C627, C[628] || CT.C628, C[629] || CT.C629, C[630] || CT.C630, C[631] || CT.C631, C[632] || CT.C632, C[633] || CT.C633, C[634] || CT.C634, C[635] || CT.C635, C[636] || CT.C636, C[637] || CT.C637, C[638] || CT.C638, C[639] || CT.C639, C[640] || CT.C640, C[641] || CT.C641, C[642] || CT.C642, C[643] || CT.C643, C[644] || CT.C644, C[645] || CT.C645, C[646] || CT.C646, C[647] || CT.C647, C[648] || CT.C648, C[649] || CT.C649, C[650] || CT.C650, C[651] || CT.C651, C[652] || CT.C652, C[653] || CT.C653, C[654] || CT.C654, C[655] || CT.C655, C[656] || CT.C656, C[657] || CT.C657, C[658] || CT.C658], T$._LocationL());
    },
    get C622() {
      return C[622] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[623] || CT.C623,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 54,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C661() {
      return C[661] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 15,
        [_Location_line]: 150,
        [_Location_file]: null
      });
    },
    get C662() {
      return C[662] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 15,
        [_Location_line]: 151,
        [_Location_file]: null
      });
    },
    get C660() {
      return C[660] = dart.constList([C[661] || CT.C661, C[662] || CT.C662], T$._LocationL());
    },
    get C659() {
      return C[659] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[660] || CT.C660,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 149,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C665() {
      return C[665] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 15,
        [_Location_line]: 159,
        [_Location_file]: null
      });
    },
    get C666() {
      return C[666] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 15,
        [_Location_line]: 160,
        [_Location_file]: null
      });
    },
    get C664() {
      return C[664] = dart.constList([C[665] || CT.C665, C[666] || CT.C666], T$._LocationL());
    },
    get C663() {
      return C[663] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[664] || CT.C664,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 158,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C669() {
      return C[669] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "snackbarStatus",
        [_Location_column]: 9,
        [_Location_line]: 147,
        [_Location_file]: null
      });
    },
    get C670() {
      return C[670] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "titleText",
        [_Location_column]: 9,
        [_Location_line]: 148,
        [_Location_file]: null
      });
    },
    get C671() {
      return C[671] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "messageText",
        [_Location_column]: 9,
        [_Location_line]: 157,
        [_Location_file]: null
      });
    },
    get C672() {
      return C[672] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "snackPosition",
        [_Location_column]: 9,
        [_Location_line]: 166,
        [_Location_file]: null
      });
    },
    get C673() {
      return C[673] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderRadius",
        [_Location_column]: 9,
        [_Location_line]: 167,
        [_Location_file]: null
      });
    },
    get C674() {
      return C[674] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 9,
        [_Location_line]: 168,
        [_Location_file]: null
      });
    },
    get C675() {
      return C[675] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "duration",
        [_Location_column]: 9,
        [_Location_line]: 169,
        [_Location_file]: null
      });
    },
    get C676() {
      return C[676] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "barBlur",
        [_Location_column]: 9,
        [_Location_line]: 170,
        [_Location_file]: null
      });
    },
    get C677() {
      return C[677] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 9,
        [_Location_line]: 171,
        [_Location_file]: null
      });
    },
    get C678() {
      return C[678] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "icon",
        [_Location_column]: 9,
        [_Location_line]: 172,
        [_Location_file]: null
      });
    },
    get C679() {
      return C[679] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shouldIconPulse",
        [_Location_column]: 9,
        [_Location_line]: 173,
        [_Location_file]: null
      });
    },
    get C680() {
      return C[680] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxWidth",
        [_Location_column]: 9,
        [_Location_line]: 174,
        [_Location_file]: null
      });
    },
    get C681() {
      return C[681] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 9,
        [_Location_line]: 175,
        [_Location_file]: null
      });
    },
    get C682() {
      return C[682] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderColor",
        [_Location_column]: 9,
        [_Location_line]: 176,
        [_Location_file]: null
      });
    },
    get C683() {
      return C[683] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderWidth",
        [_Location_column]: 9,
        [_Location_line]: 177,
        [_Location_file]: null
      });
    },
    get C684() {
      return C[684] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "leftBarIndicatorColor",
        [_Location_column]: 9,
        [_Location_line]: 178,
        [_Location_file]: null
      });
    },
    get C685() {
      return C[685] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "boxShadows",
        [_Location_column]: 9,
        [_Location_line]: 179,
        [_Location_file]: null
      });
    },
    get C686() {
      return C[686] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundGradient",
        [_Location_column]: 9,
        [_Location_line]: 180,
        [_Location_file]: null
      });
    },
    get C687() {
      return C[687] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainButton",
        [_Location_column]: 9,
        [_Location_line]: 181,
        [_Location_file]: null
      });
    },
    get C688() {
      return C[688] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 9,
        [_Location_line]: 182,
        [_Location_file]: null
      });
    },
    get C689() {
      return C[689] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isDismissible",
        [_Location_column]: 9,
        [_Location_line]: 183,
        [_Location_file]: null
      });
    },
    get C690() {
      return C[690] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dismissDirection",
        [_Location_column]: 9,
        [_Location_line]: 184,
        [_Location_file]: null
      });
    },
    get C691() {
      return C[691] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showProgressIndicator",
        [_Location_column]: 9,
        [_Location_line]: 185,
        [_Location_file]: null
      });
    },
    get C692() {
      return C[692] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "progressIndicatorController",
        [_Location_column]: 9,
        [_Location_line]: 186,
        [_Location_file]: null
      });
    },
    get C693() {
      return C[693] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "progressIndicatorBackgroundColor",
        [_Location_column]: 9,
        [_Location_line]: 187,
        [_Location_file]: null
      });
    },
    get C694() {
      return C[694] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "progressIndicatorValueColor",
        [_Location_column]: 9,
        [_Location_line]: 188,
        [_Location_file]: null
      });
    },
    get C695() {
      return C[695] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "snackStyle",
        [_Location_column]: 9,
        [_Location_line]: 189,
        [_Location_file]: null
      });
    },
    get C696() {
      return C[696] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "forwardAnimationCurve",
        [_Location_column]: 9,
        [_Location_line]: 190,
        [_Location_file]: null
      });
    },
    get C697() {
      return C[697] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "reverseAnimationCurve",
        [_Location_column]: 9,
        [_Location_line]: 191,
        [_Location_file]: null
      });
    },
    get C698() {
      return C[698] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animationDuration",
        [_Location_column]: 9,
        [_Location_line]: 192,
        [_Location_file]: null
      });
    },
    get C699() {
      return C[699] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overlayBlur",
        [_Location_column]: 9,
        [_Location_line]: 193,
        [_Location_file]: null
      });
    },
    get C700() {
      return C[700] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overlayColor",
        [_Location_column]: 9,
        [_Location_line]: 194,
        [_Location_file]: null
      });
    },
    get C701() {
      return C[701] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "userInputForm",
        [_Location_column]: 9,
        [_Location_line]: 195,
        [_Location_file]: null
      });
    },
    get C668() {
      return C[668] = dart.constList([C[669] || CT.C669, C[670] || CT.C670, C[671] || CT.C671, C[672] || CT.C672, C[673] || CT.C673, C[674] || CT.C674, C[675] || CT.C675, C[676] || CT.C676, C[677] || CT.C677, C[678] || CT.C678, C[679] || CT.C679, C[680] || CT.C680, C[681] || CT.C681, C[682] || CT.C682, C[683] || CT.C683, C[684] || CT.C684, C[685] || CT.C685, C[686] || CT.C686, C[687] || CT.C687, C[688] || CT.C688, C[689] || CT.C689, C[690] || CT.C690, C[691] || CT.C691, C[692] || CT.C692, C[693] || CT.C693, C[694] || CT.C694, C[695] || CT.C695, C[696] || CT.C696, C[697] || CT.C697, C[698] || CT.C698, C[699] || CT.C699, C[700] || CT.C700, C[701] || CT.C701], T$._LocationL());
    },
    get C667() {
      return C[667] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[668] || CT.C668,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 146,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C702() {
      return C[702] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278190080.0
      });
    },
    get C705() {
      return C[705] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 13,
        [_Location_line]: 223,
        [_Location_file]: null
      });
    },
    get C704() {
      return C[704] = dart.constList([C[705] || CT.C705], T$._LocationL());
    },
    get C703() {
      return C[703] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[704] || CT.C704,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 222,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C708() {
      return C[708] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 11,
        [_Location_line]: 221,
        [_Location_file]: null
      });
    },
    get C709() {
      return C[709] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 222,
        [_Location_file]: null
      });
    },
    get C707() {
      return C[707] = dart.constList([C[708] || CT.C708, C[709] || CT.C709], T$._LocationL());
    },
    get C706() {
      return C[706] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[707] || CT.C707,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 220,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C712() {
      return C[712] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 25,
        [_Location_line]: 232,
        [_Location_file]: null
      });
    },
    get C711() {
      return C[711] = dart.constList([C[712] || CT.C712], T$._LocationL());
    },
    get C710() {
      return C[710] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[711] || CT.C711,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 232,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C715() {
      return C[715] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 13,
        [_Location_line]: 230,
        [_Location_file]: null
      });
    },
    get C716() {
      return C[716] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 13,
        [_Location_line]: 231,
        [_Location_file]: null
      });
    },
    get C717() {
      return C[717] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 232,
        [_Location_file]: null
      });
    },
    get C714() {
      return C[714] = dart.constList([C[715] || CT.C715, C[716] || CT.C716, C[717] || CT.C717], T$._LocationL());
    },
    get C713() {
      return C[713] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[714] || CT.C714,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 229,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C720() {
      return C[720] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 229,
        [_Location_file]: null
      });
    },
    get C719() {
      return C[719] = dart.constList([C[720] || CT.C720], T$._LocationL());
    },
    get C718() {
      return C[718] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[719] || CT.C719,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 228,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C723() {
      return C[723] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 24,
        [_Location_line]: 279,
        [_Location_file]: null
      });
    },
    get C724() {
      return C[724] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 37,
        [_Location_line]: 279,
        [_Location_file]: null
      });
    },
    get C722() {
      return C[722] = dart.constList([C[723] || CT.C723, C[724] || CT.C724], T$._LocationL());
    },
    get C721() {
      return C[721] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[722] || CT.C722,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 279,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C727() {
      return C[727] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 33,
        [_Location_line]: 278,
        [_Location_file]: null
      });
    },
    get C726() {
      return C[726] = dart.constList([C[727] || CT.C727], T$._LocationL());
    },
    get C725() {
      return C[725] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[726] || CT.C726,
        [_Location_name]: null,
        [_Location_column]: 25,
        [_Location_line]: 278,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C730() {
      return C[730] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 29,
        [_Location_line]: 282,
        [_Location_file]: null
      });
    },
    get C729() {
      return C[729] = dart.constList([C[730] || CT.C730], T$._LocationL());
    },
    get C728() {
      return C[728] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[729] || CT.C729,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 282,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C733() {
      return C[733] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 11,
        [_Location_line]: 292,
        [_Location_file]: null
      });
    },
    get C734() {
      return C[734] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 296,
        [_Location_file]: null
      });
    },
    get C732() {
      return C[732] = dart.constList([C[733] || CT.C733, C[734] || CT.C734], T$._LocationL());
    },
    get C731() {
      return C[731] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[732] || CT.C732,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 291,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C737() {
      return C[737] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 24,
        [_Location_line]: 391,
        [_Location_file]: null
      });
    },
    get C738() {
      return C[738] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 13,
        [_Location_line]: 392,
        [_Location_file]: null
      });
    },
    get C736() {
      return C[736] = dart.constList([C[737] || CT.C737, C[738] || CT.C738], T$._LocationL());
    },
    get C735() {
      return C[735] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[736] || CT.C736,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 390,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C741() {
      return C[741] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 11,
        [_Location_line]: 376,
        [_Location_file]: null
      });
    },
    get C742() {
      return C[742] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 11,
        [_Location_line]: 386,
        [_Location_file]: null
      });
    },
    get C743() {
      return C[743] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 390,
        [_Location_file]: null
      });
    },
    get C740() {
      return C[740] = dart.constList([C[741] || CT.C741, C[742] || CT.C742, C[743] || CT.C743], T$._LocationL());
    },
    get C739() {
      return C[739] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[740] || CT.C740,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 375,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C746() {
      return C[746] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 27,
        [_Location_line]: 409,
        [_Location_file]: null
      });
    },
    get C747() {
      return C[747] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 15,
        [_Location_line]: 410,
        [_Location_file]: null
      });
    },
    get C745() {
      return C[745] = dart.constList([C[746] || CT.C746, C[747] || CT.C747], T$._LocationL());
    },
    get C744() {
      return C[744] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[745] || CT.C745,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 408,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C750() {
      return C[750] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 13,
        [_Location_line]: 402,
        [_Location_file]: null
      });
    },
    get C751() {
      return C[751] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 408,
        [_Location_file]: null
      });
    },
    get C752() {
      return C[752] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 13,
        [_Location_line]: 413,
        [_Location_file]: null
      });
    },
    get C749() {
      return C[749] = dart.constList([C[750] || CT.C750, C[751] || CT.C751, C[752] || CT.C752], T$._LocationL());
    },
    get C748() {
      return C[748] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[749] || CT.C749,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 401,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C755() {
      return C[755] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 19,
        [_Location_line]: 426,
        [_Location_file]: null
      });
    },
    get C756() {
      return C[756] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlign",
        [_Location_column]: 26,
        [_Location_line]: 426,
        [_Location_file]: null
      });
    },
    get C757() {
      return C[757] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 55,
        [_Location_line]: 426,
        [_Location_file]: null
      });
    },
    get C754() {
      return C[754] = dart.constList([C[755] || CT.C755, C[756] || CT.C756, C[757] || CT.C757], T$._LocationL());
    },
    get C753() {
      return C[753] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[754] || CT.C754,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 426,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C760() {
      return C[760] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 20,
        [_Location_line]: 432,
        [_Location_file]: null
      });
    },
    get C761() {
      return C[761] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlign",
        [_Location_column]: 19,
        [_Location_line]: 433,
        [_Location_file]: null
      });
    },
    get C762() {
      return C[762] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 48,
        [_Location_line]: 433,
        [_Location_file]: null
      });
    },
    get C759() {
      return C[759] = dart.constList([C[760] || CT.C760, C[761] || CT.C761, C[762] || CT.C762], T$._LocationL());
    },
    get C758() {
      return C[758] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[759] || CT.C759,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 432,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C765() {
      return C[765] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 20,
        [_Location_line]: 434,
        [_Location_file]: null
      });
    },
    get C764() {
      return C[764] = dart.constList([C[765] || CT.C765], T$._LocationL());
    },
    get C763() {
      return C[763] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[764] || CT.C764,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 434,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C768() {
      return C[768] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 15,
        [_Location_line]: 439,
        [_Location_file]: null
      });
    },
    get C769() {
      return C[769] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "spacing",
        [_Location_column]: 15,
        [_Location_line]: 440,
        [_Location_file]: null
      });
    },
    get C770() {
      return C[770] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "runSpacing",
        [_Location_column]: 15,
        [_Location_line]: 441,
        [_Location_file]: null
      });
    },
    get C771() {
      return C[771] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 15,
        [_Location_line]: 442,
        [_Location_file]: null
      });
    },
    get C767() {
      return C[767] = dart.constList([C[768] || CT.C768, C[769] || CT.C769, C[770] || CT.C770, C[771] || CT.C771], T$._LocationL());
    },
    get C766() {
      return C[766] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[767] || CT.C767,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 438,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C774() {
      return C[774] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minWidth",
        [_Location_column]: 13,
        [_Location_line]: 436,
        [_Location_file]: null
      });
    },
    get C775() {
      return C[775] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 13,
        [_Location_line]: 437,
        [_Location_file]: null
      });
    },
    get C776() {
      return C[776] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 438,
        [_Location_file]: null
      });
    },
    get C773() {
      return C[773] = dart.constList([C[774] || CT.C774, C[775] || CT.C775, C[776] || CT.C776], T$._LocationL());
    },
    get C772() {
      return C[772] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[773] || CT.C773,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 435,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C779() {
      return C[779] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "crossAxisAlignment",
        [_Location_column]: 9,
        [_Location_line]: 428,
        [_Location_file]: null
      });
    },
    get C780() {
      return C[780] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisSize",
        [_Location_column]: 9,
        [_Location_line]: 429,
        [_Location_file]: null
      });
    },
    get C781() {
      return C[781] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 430,
        [_Location_file]: null
      });
    },
    get C778() {
      return C[778] = dart.constList([C[779] || CT.C779, C[780] || CT.C780, C[781] || CT.C781], T$._LocationL());
    },
    get C777() {
      return C[777] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[778] || CT.C778,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 427,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C784() {
      return C[784] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "titlePadding",
        [_Location_column]: 7,
        [_Location_line]: 420,
        [_Location_file]: null
      });
    },
    get C785() {
      return C[785] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "contentPadding",
        [_Location_column]: 7,
        [_Location_line]: 421,
        [_Location_file]: null
      });
    },
    get C786() {
      return C[786] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 7,
        [_Location_line]: 423,
        [_Location_file]: null
      });
    },
    get C787() {
      return C[787] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 7,
        [_Location_line]: 424,
        [_Location_file]: null
      });
    },
    get C788() {
      return C[788] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 7,
        [_Location_line]: 426,
        [_Location_file]: null
      });
    },
    get C789() {
      return C[789] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "content",
        [_Location_column]: 7,
        [_Location_line]: 427,
        [_Location_file]: null
      });
    },
    get C790() {
      return C[790] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "buttonPadding",
        [_Location_column]: 7,
        [_Location_line]: 448,
        [_Location_file]: null
      });
    },
    get C783() {
      return C[783] = dart.constList([C[784] || CT.C784, C[785] || CT.C785, C[786] || CT.C786, C[787] || CT.C787, C[788] || CT.C788, C[789] || CT.C789, C[790] || CT.C790], T$._LocationL());
    },
    get C782() {
      return C[782] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[783] || CT.C783,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 419,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C793() {
      return C[793] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onWillPop",
        [_Location_column]: 15,
        [_Location_line]: 454,
        [_Location_file]: null
      });
    },
    get C794() {
      return C[794] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 455,
        [_Location_file]: null
      });
    },
    get C792() {
      return C[792] = dart.constList([C[793] || CT.C793, C[794] || CT.C794], T$._LocationL());
    },
    get C791() {
      return C[791] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[792] || CT.C792,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 453,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C795() {
      return C[795] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 250000
      });
    },
    get C798() {
      return C[798] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "route",
        [_Location_column]: 11,
        [_Location_line]: 87,
        [_Location_file]: null
      });
    },
    get C799() {
      return C[799] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 11,
        [_Location_line]: 88,
        [_Location_file]: null
      });
    },
    get C800() {
      return C[800] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 11,
        [_Location_line]: 91,
        [_Location_file]: null
      });
    },
    get C801() {
      return C[801] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 11,
        [_Location_line]: 93,
        [_Location_file]: null
      });
    },
    get C802() {
      return C[802] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 11,
        [_Location_line]: 94,
        [_Location_file]: null
      });
    },
    get C803() {
      return C[803] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isScrollControlled",
        [_Location_column]: 11,
        [_Location_line]: 95,
        [_Location_file]: null
      });
    },
    get C804() {
      return C[804] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDrag",
        [_Location_column]: 11,
        [_Location_line]: 96,
        [_Location_file]: null
      });
    },
    get C797() {
      return C[797] = dart.constList([C[798] || CT.C798, C[799] || CT.C799, C[800] || CT.C800, C[801] || CT.C801, C[802] || CT.C802, C[803] || CT.C803, C[804] || CT.C804], T$._LocationL());
    },
    get C796() {
      return C[796] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[797] || CT.C797,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 86,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C807() {
      return C[807] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 9,
        [_Location_line]: 84,
        [_Location_file]: null
      });
    },
    get C808() {
      return C[808] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 86,
        [_Location_file]: null
      });
    },
    get C806() {
      return C[806] = dart.constList([C[807] || CT.C807, C[808] || CT.C808], T$._LocationL());
    },
    get C805() {
      return C[805] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[806] || CT.C806,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 83,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C811() {
      return C[811] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "context",
        [_Location_column]: 7,
        [_Location_line]: 81,
        [_Location_file]: null
      });
    },
    get C812() {
      return C[812] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "removeTop",
        [_Location_column]: 7,
        [_Location_line]: 82,
        [_Location_file]: null
      });
    },
    get C813() {
      return C[813] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 83,
        [_Location_file]: null
      });
    },
    get C810() {
      return C[810] = dart.constList([C[811] || CT.C811, C[812] || CT.C812, C[813] || CT.C813], T$._LocationL());
    },
    get C809() {
      return C[809] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[810] || CT.C810,
        [_Location_name]: null,
        [_Location_column]: 37,
        [_Location_line]: 80,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C816() {
      return C[816] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 44,
        [_Location_line]: 100,
        [_Location_file]: null
      });
    },
    get C817() {
      return C[817] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 58,
        [_Location_line]: 100,
        [_Location_file]: null
      });
    },
    get C815() {
      return C[815] = dart.constList([C[816] || CT.C816, C[817] || CT.C817], T$._LocationL());
    },
    get C814() {
      return C[814] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[815] || CT.C815,
        [_Location_name]: null,
        [_Location_column]: 38,
        [_Location_line]: 100,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C820() {
      return C[820] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animationController",
        [_Location_column]: 25,
        [_Location_line]: 167,
        [_Location_file]: null
      });
    },
    get C821() {
      return C[821] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onClosing",
        [_Location_column]: 25,
        [_Location_line]: 168,
        [_Location_file]: null
      });
    },
    get C822() {
      return C[822] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 25,
        [_Location_line]: 173,
        [_Location_file]: null
      });
    },
    get C823() {
      return C[823] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 25,
        [_Location_line]: 174,
        [_Location_file]: null
      });
    },
    get C824() {
      return C[824] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 25,
        [_Location_line]: 175,
        [_Location_file]: null
      });
    },
    get C825() {
      return C[825] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 25,
        [_Location_line]: 176,
        [_Location_file]: null
      });
    },
    get C826() {
      return C[826] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 25,
        [_Location_line]: 177,
        [_Location_file]: null
      });
    },
    get C827() {
      return C[827] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDrag",
        [_Location_column]: 25,
        [_Location_line]: 178,
        [_Location_file]: null
      });
    },
    get C819() {
      return C[819] = dart.constList([C[820] || CT.C820, C[821] || CT.C821, C[822] || CT.C822, C[823] || CT.C823, C[824] || CT.C824, C[825] || CT.C825, C[826] || CT.C826, C[827] || CT.C827], T$._LocationL());
    },
    get C818() {
      return C[818] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[819] || CT.C819,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 166,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C830() {
      return C[830] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animationController",
        [_Location_column]: 27,
        [_Location_line]: 182,
        [_Location_file]: null
      });
    },
    get C831() {
      return C[831] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onClosing",
        [_Location_column]: 27,
        [_Location_line]: 184,
        [_Location_file]: null
      });
    },
    get C832() {
      return C[832] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 27,
        [_Location_line]: 189,
        [_Location_file]: null
      });
    },
    get C833() {
      return C[833] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 27,
        [_Location_line]: 190,
        [_Location_file]: null
      });
    },
    get C834() {
      return C[834] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 27,
        [_Location_line]: 191,
        [_Location_file]: null
      });
    },
    get C835() {
      return C[835] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 27,
        [_Location_line]: 192,
        [_Location_file]: null
      });
    },
    get C836() {
      return C[836] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 27,
        [_Location_line]: 193,
        [_Location_file]: null
      });
    },
    get C837() {
      return C[837] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDrag",
        [_Location_column]: 27,
        [_Location_line]: 194,
        [_Location_file]: null
      });
    },
    get C829() {
      return C[829] = dart.constList([C[830] || CT.C830, C[831] || CT.C831, C[832] || CT.C832, C[833] || CT.C833, C[834] || CT.C834, C[835] || CT.C835, C[836] || CT.C836, C[837] || CT.C837], T$._LocationL());
    },
    get C828() {
      return C[828] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[829] || CT.C829,
        [_Location_name]: null,
        [_Location_column]: 38,
        [_Location_line]: 181,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C840() {
      return C[840] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottomSheet",
        [_Location_column]: 25,
        [_Location_line]: 181,
        [_Location_file]: null
      });
    },
    get C839() {
      return C[839] = dart.constList([C[840] || CT.C840], T$._LocationL());
    },
    get C838() {
      return C[838] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[839] || CT.C839,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 180,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C843() {
      return C[843] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegate",
        [_Location_column]: 17,
        [_Location_line]: 163,
        [_Location_file]: null
      });
    },
    get C844() {
      return C[844] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 165,
        [_Location_file]: null
      });
    },
    get C842() {
      return C[842] = dart.constList([C[843] || CT.C843, C[844] || CT.C844], T$._LocationL());
    },
    get C841() {
      return C[841] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[842] || CT.C842,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 162,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C847() {
      return C[847] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 162,
        [_Location_file]: null
      });
    },
    get C846() {
      return C[846] = dart.constList([C[847] || CT.C847], T$._LocationL());
    },
    get C845() {
      return C[845] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[846] || CT.C846,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 161,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C850() {
      return C[850] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scopesRoute",
        [_Location_column]: 11,
        [_Location_line]: 157,
        [_Location_file]: null
      });
    },
    get C851() {
      return C[851] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "namesRoute",
        [_Location_column]: 11,
        [_Location_line]: 158,
        [_Location_file]: null
      });
    },
    get C852() {
      return C[852] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 11,
        [_Location_line]: 159,
        [_Location_file]: null
      });
    },
    get C853() {
      return C[853] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "explicitChildNodes",
        [_Location_column]: 11,
        [_Location_line]: 160,
        [_Location_file]: null
      });
    },
    get C854() {
      return C[854] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 161,
        [_Location_file]: null
      });
    },
    get C849() {
      return C[849] = dart.constList([C[850] || CT.C850, C[851] || CT.C851, C[852] || CT.C852, C[853] || CT.C853, C[854] || CT.C854], T$._LocationL());
    },
    get C848() {
      return C[848] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[849] || CT.C849,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 156,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C857() {
      return C[857] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 7,
        [_Location_line]: 149,
        [_Location_file]: null
      });
    },
    get C858() {
      return C[858] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 150,
        [_Location_file]: null
      });
    },
    get C856() {
      return C[856] = dart.constList([C[857] || CT.C857, C[858] || CT.C858], T$._LocationL());
    },
    get C855() {
      return C[855] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[856] || CT.C856,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 148,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C861() {
      return C[861] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animationController",
        [_Location_column]: 25,
        [_Location_line]: 270,
        [_Location_file]: null
      });
    },
    get C862() {
      return C[862] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onClosing",
        [_Location_column]: 25,
        [_Location_line]: 271,
        [_Location_file]: null
      });
    },
    get C863() {
      return C[863] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 25,
        [_Location_line]: 276,
        [_Location_file]: null
      });
    },
    get C864() {
      return C[864] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 25,
        [_Location_line]: 277,
        [_Location_file]: null
      });
    },
    get C865() {
      return C[865] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 25,
        [_Location_line]: 278,
        [_Location_file]: null
      });
    },
    get C866() {
      return C[866] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 25,
        [_Location_line]: 279,
        [_Location_file]: null
      });
    },
    get C867() {
      return C[867] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 25,
        [_Location_line]: 280,
        [_Location_file]: null
      });
    },
    get C868() {
      return C[868] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDrag",
        [_Location_column]: 25,
        [_Location_line]: 281,
        [_Location_file]: null
      });
    },
    get C860() {
      return C[860] = dart.constList([C[861] || CT.C861, C[862] || CT.C862, C[863] || CT.C863, C[864] || CT.C864, C[865] || CT.C865, C[866] || CT.C866, C[867] || CT.C867, C[868] || CT.C868], T$._LocationL());
    },
    get C859() {
      return C[859] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[860] || CT.C860,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 269,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C871() {
      return C[871] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animationController",
        [_Location_column]: 27,
        [_Location_line]: 285,
        [_Location_file]: null
      });
    },
    get C872() {
      return C[872] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onClosing",
        [_Location_column]: 27,
        [_Location_line]: 287,
        [_Location_file]: null
      });
    },
    get C873() {
      return C[873] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 27,
        [_Location_line]: 292,
        [_Location_file]: null
      });
    },
    get C874() {
      return C[874] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 27,
        [_Location_line]: 293,
        [_Location_file]: null
      });
    },
    get C875() {
      return C[875] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 27,
        [_Location_line]: 294,
        [_Location_file]: null
      });
    },
    get C876() {
      return C[876] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 27,
        [_Location_line]: 295,
        [_Location_file]: null
      });
    },
    get C877() {
      return C[877] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 27,
        [_Location_line]: 296,
        [_Location_file]: null
      });
    },
    get C878() {
      return C[878] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDrag",
        [_Location_column]: 27,
        [_Location_line]: 297,
        [_Location_file]: null
      });
    },
    get C870() {
      return C[870] = dart.constList([C[871] || CT.C871, C[872] || CT.C872, C[873] || CT.C873, C[874] || CT.C874, C[875] || CT.C875, C[876] || CT.C876, C[877] || CT.C877, C[878] || CT.C878], T$._LocationL());
    },
    get C869() {
      return C[869] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[870] || CT.C870,
        [_Location_name]: null,
        [_Location_column]: 38,
        [_Location_line]: 284,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C881() {
      return C[881] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottomSheet",
        [_Location_column]: 25,
        [_Location_line]: 284,
        [_Location_file]: null
      });
    },
    get C880() {
      return C[880] = dart.constList([C[881] || CT.C881], T$._LocationL());
    },
    get C879() {
      return C[879] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[880] || CT.C880,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 283,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C884() {
      return C[884] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegate",
        [_Location_column]: 17,
        [_Location_line]: 266,
        [_Location_file]: null
      });
    },
    get C885() {
      return C[885] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 268,
        [_Location_file]: null
      });
    },
    get C883() {
      return C[883] = dart.constList([C[884] || CT.C884, C[885] || CT.C885], T$._LocationL());
    },
    get C882() {
      return C[882] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[883] || CT.C883,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 265,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C888() {
      return C[888] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 265,
        [_Location_file]: null
      });
    },
    get C887() {
      return C[887] = dart.constList([C[888] || CT.C888], T$._LocationL());
    },
    get C886() {
      return C[886] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[887] || CT.C887,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 264,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C891() {
      return C[891] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scopesRoute",
        [_Location_column]: 11,
        [_Location_line]: 260,
        [_Location_file]: null
      });
    },
    get C892() {
      return C[892] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "namesRoute",
        [_Location_column]: 11,
        [_Location_line]: 261,
        [_Location_file]: null
      });
    },
    get C893() {
      return C[893] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 11,
        [_Location_line]: 262,
        [_Location_file]: null
      });
    },
    get C894() {
      return C[894] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "explicitChildNodes",
        [_Location_column]: 11,
        [_Location_line]: 263,
        [_Location_file]: null
      });
    },
    get C895() {
      return C[895] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 264,
        [_Location_file]: null
      });
    },
    get C890() {
      return C[890] = dart.constList([C[891] || CT.C891, C[892] || CT.C892, C[893] || CT.C893, C[894] || CT.C894, C[895] || CT.C895], T$._LocationL());
    },
    get C889() {
      return C[889] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[890] || CT.C890,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 259,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C898() {
      return C[898] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 7,
        [_Location_line]: 252,
        [_Location_file]: null
      });
    },
    get C899() {
      return C[899] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 253,
        [_Location_file]: null
      });
    },
    get C897() {
      return C[897] = dart.constList([C[898] || CT.C898, C[899] || CT.C899], T$._LocationL());
    },
    get C896() {
      return C[896] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[897] || CT.C897,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 251,
        [_Location_file]: "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    }
  }, false);
  var C = Array(900).fill(void 0);
  var I = [
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/root/get_material_app.dart",
    "package:get/get_navigation/src/root/get_material_app.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/root/get_cupertino_app.dart",
    "package:get/get_navigation/src/root/get_cupertino_app.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/nav2/router_outlet.dart",
    "package:get/get_navigation/src/nav2/router_outlet.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/nav2/get_router_delegate.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/nav2/get_nav_config.dart",
    "package:get/get_navigation/src/nav2/get_nav_config.dart",
    "package:get/get_navigation/src/nav2/get_router_delegate.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/nav2/get_information_parser.dart",
    "package:get/get_navigation/src/nav2/get_information_parser.dart",
    "package:get/get_navigation/src/routes/route_middleware.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/route_middleware.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_transition_mixin.dart",
    "package:get/get_navigation/src/routes/get_transition_mixin.dart",
    "package:get/get_navigation/src/routes/default_route.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/default_route.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack.dart",
    "package:get/get_navigation/src/snackbar/snack.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/snackbar/snack_route.dart",
    "package:get/get_navigation/src/snackbar/snack_route.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/observers/route_observer.dart",
    "package:get/get_navigation/src/routes/observers/route_observer.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_state_manager/src/simple/simple_builder.dart",
    "package:get/get_state_manager/src/simple/simple_builder.dart",
    "package:get/get_state_manager/src/simple/get_state.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_state_manager/src/simple/mixin_state.dart",
    "package:get/get_state_manager/src/simple/mixin_state.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_state_manager/src/simple/get_state.dart",
    "package:get/get_state_manager/src/simple/get_view.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_state_manager/src/simple/get_view.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_state_manager/src/simple/get_responsive.dart",
    "package:get/get_state_manager/src/simple/get_responsive.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_state_manager/src/simple/get_controllers.dart",
    "package:get/get_state_manager/src/simple/get_controllers.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_state_manager/src/rx_flutter/rx_notifier.dart",
    "package:get/get_state_manager/src/rx_flutter/rx_notifier.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_state_manager/src/rx_flutter/rx_ticket_provider_mixin.dart",
    "package:get/get_state_manager/src/rx_flutter/rx_ticket_provider_mixin.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_state_manager/src/rx_flutter/rx_getx_widget.dart",
    "package:get/get_state_manager/src/rx_flutter/rx_getx_widget.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/root/root_controller.dart",
    "package:get/get_navigation/src/root/root_controller.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/routes/get_route.dart",
    "package:get/get_navigation/src/routes/get_route.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/root/parse_route.dart",
    "package:get/get_navigation/src/root/parse_route.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/dialog/dialog_route.dart",
    "package:get/get_navigation/src/dialog/dialog_route.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/extension_navigation.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/bottomsheet/bottomsheet.dart",
    "package:get/get_navigation/src/bottomsheet/bottomsheet.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_instance/src/extension_instance.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_navigation/src/router_report.dart",
    "package:get/get_navigation/src/router_report.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_instance/src/get_instance.dart",
    "package:get/get_instance/src/get_instance.dart",
    "package:get/get_instance/src/bindings_interface.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_instance/src/bindings_interface.dart",
    "file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/get-4.3.8/lib/get_common/get_reset.dart"
  ];
  var navigatorKey$ = dart.privateName(get_material_app, "GetMaterialApp.navigatorKey");
  var scaffoldMessengerKey$ = dart.privateName(get_material_app, "GetMaterialApp.scaffoldMessengerKey");
  var home$ = dart.privateName(get_material_app, "GetMaterialApp.home");
  var routes$ = dart.privateName(get_material_app, "GetMaterialApp.routes");
  var initialRoute$ = dart.privateName(get_material_app, "GetMaterialApp.initialRoute");
  var onGenerateRoute$ = dart.privateName(get_material_app, "GetMaterialApp.onGenerateRoute");
  var onGenerateInitialRoutes$ = dart.privateName(get_material_app, "GetMaterialApp.onGenerateInitialRoutes");
  var onUnknownRoute$ = dart.privateName(get_material_app, "GetMaterialApp.onUnknownRoute");
  var navigatorObservers$ = dart.privateName(get_material_app, "GetMaterialApp.navigatorObservers");
  var builder$ = dart.privateName(get_material_app, "GetMaterialApp.builder");
  var title$ = dart.privateName(get_material_app, "GetMaterialApp.title");
  var onGenerateTitle$ = dart.privateName(get_material_app, "GetMaterialApp.onGenerateTitle");
  var theme$0 = dart.privateName(get_material_app, "GetMaterialApp.theme");
  var darkTheme$ = dart.privateName(get_material_app, "GetMaterialApp.darkTheme");
  var themeMode$ = dart.privateName(get_material_app, "GetMaterialApp.themeMode");
  var customTransition$ = dart.privateName(get_material_app, "GetMaterialApp.customTransition");
  var color$ = dart.privateName(get_material_app, "GetMaterialApp.color");
  var translationsKeys$ = dart.privateName(get_material_app, "GetMaterialApp.translationsKeys");
  var translations$ = dart.privateName(get_material_app, "GetMaterialApp.translations");
  var textDirection$ = dart.privateName(get_material_app, "GetMaterialApp.textDirection");
  var locale$ = dart.privateName(get_material_app, "GetMaterialApp.locale");
  var fallbackLocale$ = dart.privateName(get_material_app, "GetMaterialApp.fallbackLocale");
  var localizationsDelegates$ = dart.privateName(get_material_app, "GetMaterialApp.localizationsDelegates");
  var localeListResolutionCallback$ = dart.privateName(get_material_app, "GetMaterialApp.localeListResolutionCallback");
  var localeResolutionCallback$ = dart.privateName(get_material_app, "GetMaterialApp.localeResolutionCallback");
  var supportedLocales$ = dart.privateName(get_material_app, "GetMaterialApp.supportedLocales");
  var showPerformanceOverlay$ = dart.privateName(get_material_app, "GetMaterialApp.showPerformanceOverlay");
  var checkerboardRasterCacheImages$ = dart.privateName(get_material_app, "GetMaterialApp.checkerboardRasterCacheImages");
  var checkerboardOffscreenLayers$ = dart.privateName(get_material_app, "GetMaterialApp.checkerboardOffscreenLayers");
  var showSemanticsDebugger$ = dart.privateName(get_material_app, "GetMaterialApp.showSemanticsDebugger");
  var debugShowCheckedModeBanner$ = dart.privateName(get_material_app, "GetMaterialApp.debugShowCheckedModeBanner");
  var shortcuts$ = dart.privateName(get_material_app, "GetMaterialApp.shortcuts");
  var scrollBehavior$ = dart.privateName(get_material_app, "GetMaterialApp.scrollBehavior");
  var highContrastTheme$ = dart.privateName(get_material_app, "GetMaterialApp.highContrastTheme");
  var highContrastDarkTheme$ = dart.privateName(get_material_app, "GetMaterialApp.highContrastDarkTheme");
  var actions$ = dart.privateName(get_material_app, "GetMaterialApp.actions");
  var debugShowMaterialGrid$ = dart.privateName(get_material_app, "GetMaterialApp.debugShowMaterialGrid");
  var routingCallback$ = dart.privateName(get_material_app, "GetMaterialApp.routingCallback");
  var defaultTransition$ = dart.privateName(get_material_app, "GetMaterialApp.defaultTransition");
  var opaqueRoute$ = dart.privateName(get_material_app, "GetMaterialApp.opaqueRoute");
  var onInit$ = dart.privateName(get_material_app, "GetMaterialApp.onInit");
  var onReady$ = dart.privateName(get_material_app, "GetMaterialApp.onReady");
  var onDispose$ = dart.privateName(get_material_app, "GetMaterialApp.onDispose");
  var enableLog$ = dart.privateName(get_material_app, "GetMaterialApp.enableLog");
  var logWriterCallback$ = dart.privateName(get_material_app, "GetMaterialApp.logWriterCallback");
  var popGesture$ = dart.privateName(get_material_app, "GetMaterialApp.popGesture");
  var smartManagement$ = dart.privateName(get_material_app, "GetMaterialApp.smartManagement");
  var initialBinding$ = dart.privateName(get_material_app, "GetMaterialApp.initialBinding");
  var transitionDuration$ = dart.privateName(get_material_app, "GetMaterialApp.transitionDuration");
  var defaultGlobalState$ = dart.privateName(get_material_app, "GetMaterialApp.defaultGlobalState");
  var getPages$ = dart.privateName(get_material_app, "GetMaterialApp.getPages");
  var unknownRoute$ = dart.privateName(get_material_app, "GetMaterialApp.unknownRoute");
  var routeInformationProvider$ = dart.privateName(get_material_app, "GetMaterialApp.routeInformationProvider");
  var routeInformationParser$ = dart.privateName(get_material_app, "GetMaterialApp.routeInformationParser");
  var routerDelegate$ = dart.privateName(get_material_app, "GetMaterialApp.routerDelegate");
  var backButtonDispatcher$ = dart.privateName(get_material_app, "GetMaterialApp.backButtonDispatcher");
  var _name = dart.privateName(app, "_name");
  var Locale__countryCode = dart.privateName(ui, "Locale._countryCode");
  var Locale_scriptCode = dart.privateName(ui, "Locale.scriptCode");
  var Locale__languageCode = dart.privateName(ui, "Locale._languageCode");
  var _name$ = dart.privateName(smart_management, "_name");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  get_material_app.GetMaterialApp = class GetMaterialApp extends framework.StatelessWidget {
    get navigatorKey() {
      return this[navigatorKey$];
    }
    set navigatorKey(value) {
      super.navigatorKey = value;
    }
    get scaffoldMessengerKey() {
      return this[scaffoldMessengerKey$];
    }
    set scaffoldMessengerKey(value) {
      super.scaffoldMessengerKey = value;
    }
    get home() {
      return this[home$];
    }
    set home(value) {
      super.home = value;
    }
    get routes() {
      return this[routes$];
    }
    set routes(value) {
      super.routes = value;
    }
    get initialRoute() {
      return this[initialRoute$];
    }
    set initialRoute(value) {
      super.initialRoute = value;
    }
    get onGenerateRoute() {
      return this[onGenerateRoute$];
    }
    set onGenerateRoute(value) {
      super.onGenerateRoute = value;
    }
    get onGenerateInitialRoutes() {
      return this[onGenerateInitialRoutes$];
    }
    set onGenerateInitialRoutes(value) {
      super.onGenerateInitialRoutes = value;
    }
    get onUnknownRoute() {
      return this[onUnknownRoute$];
    }
    set onUnknownRoute(value) {
      super.onUnknownRoute = value;
    }
    get navigatorObservers() {
      return this[navigatorObservers$];
    }
    set navigatorObservers(value) {
      super.navigatorObservers = value;
    }
    get builder() {
      return this[builder$];
    }
    set builder(value) {
      super.builder = value;
    }
    get title() {
      return this[title$];
    }
    set title(value) {
      super.title = value;
    }
    get onGenerateTitle() {
      return this[onGenerateTitle$];
    }
    set onGenerateTitle(value) {
      super.onGenerateTitle = value;
    }
    get theme() {
      return this[theme$0];
    }
    set theme(value) {
      super.theme = value;
    }
    get darkTheme() {
      return this[darkTheme$];
    }
    set darkTheme(value) {
      super.darkTheme = value;
    }
    get themeMode() {
      return this[themeMode$];
    }
    set themeMode(value) {
      super.themeMode = value;
    }
    get customTransition() {
      return this[customTransition$];
    }
    set customTransition(value) {
      super.customTransition = value;
    }
    get color() {
      return this[color$];
    }
    set color(value) {
      super.color = value;
    }
    get translationsKeys() {
      return this[translationsKeys$];
    }
    set translationsKeys(value) {
      super.translationsKeys = value;
    }
    get translations() {
      return this[translations$];
    }
    set translations(value) {
      super.translations = value;
    }
    get textDirection() {
      return this[textDirection$];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get locale() {
      return this[locale$];
    }
    set locale(value) {
      super.locale = value;
    }
    get fallbackLocale() {
      return this[fallbackLocale$];
    }
    set fallbackLocale(value) {
      super.fallbackLocale = value;
    }
    get localizationsDelegates() {
      return this[localizationsDelegates$];
    }
    set localizationsDelegates(value) {
      super.localizationsDelegates = value;
    }
    get localeListResolutionCallback() {
      return this[localeListResolutionCallback$];
    }
    set localeListResolutionCallback(value) {
      super.localeListResolutionCallback = value;
    }
    get localeResolutionCallback() {
      return this[localeResolutionCallback$];
    }
    set localeResolutionCallback(value) {
      super.localeResolutionCallback = value;
    }
    get supportedLocales() {
      return this[supportedLocales$];
    }
    set supportedLocales(value) {
      super.supportedLocales = value;
    }
    get showPerformanceOverlay() {
      return this[showPerformanceOverlay$];
    }
    set showPerformanceOverlay(value) {
      super.showPerformanceOverlay = value;
    }
    get checkerboardRasterCacheImages() {
      return this[checkerboardRasterCacheImages$];
    }
    set checkerboardRasterCacheImages(value) {
      super.checkerboardRasterCacheImages = value;
    }
    get checkerboardOffscreenLayers() {
      return this[checkerboardOffscreenLayers$];
    }
    set checkerboardOffscreenLayers(value) {
      super.checkerboardOffscreenLayers = value;
    }
    get showSemanticsDebugger() {
      return this[showSemanticsDebugger$];
    }
    set showSemanticsDebugger(value) {
      super.showSemanticsDebugger = value;
    }
    get debugShowCheckedModeBanner() {
      return this[debugShowCheckedModeBanner$];
    }
    set debugShowCheckedModeBanner(value) {
      super.debugShowCheckedModeBanner = value;
    }
    get shortcuts() {
      return this[shortcuts$];
    }
    set shortcuts(value) {
      super.shortcuts = value;
    }
    get scrollBehavior() {
      return this[scrollBehavior$];
    }
    set scrollBehavior(value) {
      super.scrollBehavior = value;
    }
    get highContrastTheme() {
      return this[highContrastTheme$];
    }
    set highContrastTheme(value) {
      super.highContrastTheme = value;
    }
    get highContrastDarkTheme() {
      return this[highContrastDarkTheme$];
    }
    set highContrastDarkTheme(value) {
      super.highContrastDarkTheme = value;
    }
    get actions() {
      return this[actions$];
    }
    set actions(value) {
      super.actions = value;
    }
    get debugShowMaterialGrid() {
      return this[debugShowMaterialGrid$];
    }
    set debugShowMaterialGrid(value) {
      super.debugShowMaterialGrid = value;
    }
    get routingCallback() {
      return this[routingCallback$];
    }
    set routingCallback(value) {
      super.routingCallback = value;
    }
    get defaultTransition() {
      return this[defaultTransition$];
    }
    set defaultTransition(value) {
      super.defaultTransition = value;
    }
    get opaqueRoute() {
      return this[opaqueRoute$];
    }
    set opaqueRoute(value) {
      super.opaqueRoute = value;
    }
    get onInit() {
      return this[onInit$];
    }
    set onInit(value) {
      super.onInit = value;
    }
    get onReady() {
      return this[onReady$];
    }
    set onReady(value) {
      super.onReady = value;
    }
    get onDispose() {
      return this[onDispose$];
    }
    set onDispose(value) {
      super.onDispose = value;
    }
    get enableLog() {
      return this[enableLog$];
    }
    set enableLog(value) {
      super.enableLog = value;
    }
    get logWriterCallback() {
      return this[logWriterCallback$];
    }
    set logWriterCallback(value) {
      super.logWriterCallback = value;
    }
    get popGesture() {
      return this[popGesture$];
    }
    set popGesture(value) {
      super.popGesture = value;
    }
    get smartManagement() {
      return this[smartManagement$];
    }
    set smartManagement(value) {
      super.smartManagement = value;
    }
    get initialBinding() {
      return this[initialBinding$];
    }
    set initialBinding(value) {
      super.initialBinding = value;
    }
    get transitionDuration() {
      return this[transitionDuration$];
    }
    set transitionDuration(value) {
      super.transitionDuration = value;
    }
    get defaultGlobalState() {
      return this[defaultGlobalState$];
    }
    set defaultGlobalState(value) {
      super.defaultGlobalState = value;
    }
    get getPages() {
      return this[getPages$];
    }
    set getPages(value) {
      super.getPages = value;
    }
    get unknownRoute() {
      return this[unknownRoute$];
    }
    set unknownRoute(value) {
      super.unknownRoute = value;
    }
    get routeInformationProvider() {
      return this[routeInformationProvider$];
    }
    set routeInformationProvider(value) {
      super.routeInformationProvider = value;
    }
    get routeInformationParser() {
      return this[routeInformationParser$];
    }
    set routeInformationParser(value) {
      super.routeInformationParser = value;
    }
    get routerDelegate() {
      return this[routerDelegate$];
    }
    set routerDelegate(value) {
      super.routerDelegate = value;
    }
    get backButtonDispatcher() {
      return this[backButtonDispatcher$];
    }
    set backButtonDispatcher(value) {
      super.backButtonDispatcher = value;
    }
    generator(settings) {
      if (settings == null) dart.nullFailed(I[0], 203, 42, "settings");
      return new route_middleware.PageRedirect.new({settings: settings, unknownRoute: this.unknownRoute}).page(dart.dynamic);
    }
    initialRoutesGenerate(name) {
      if (name == null) dart.nullFailed(I[0], 207, 53, "name");
      return T$.JSArrayOfRoute().of([new route_middleware.PageRedirect.new({settings: new navigator.RouteSettings.new({name: name}), unknownRoute: this.unknownRoute}).page(dart.dynamic)]);
    }
    defaultBuilder(context, child) {
      let t1, t0, t0$, t0$0;
      if (context == null) dart.nullFailed(I[0], 216, 38, "context");
      return new basic.Directionality.new({textDirection: (t0 = this.textDirection, t0 == null ? dart.test(internacionalization.rtlLanguages[$contains]((t1 = internacionalization$['LocalesIntl|get#locale'](get_main.Get), t1 == null ? null : t1.languageCode))) ? ui.TextDirection.rtl : ui.TextDirection.ltr : t0), child: this.builder == null ? (t0$ = child, t0$ == null ? new material.Material.new({$creationLocationd_0dea112b090073317d4: C[6] || CT.C6}) : t0$) : dart.nullCheck(this.builder)(context, (t0$0 = child, t0$0 == null ? new material.Material.new({$creationLocationd_0dea112b090073317d4: C[8] || CT.C8}) : t0$0)), $creationLocationd_0dea112b090073317d4: C[9] || CT.C9});
    }
    build(context) {
      if (context == null) dart.nullFailed(I[0], 229, 29, "context");
      return new (T$.GetBuilderOfGetMaterialController()).new({init: extension_navigation['GetNavigation|get#rootController'](get_main.Get), dispose: dart.fn(d => {
          let t0;
          if (d == null) dart.nullFailed(I[0], 231, 17, "d");
          t0 = this.onDispose;
          t0 == null ? null : t0();
        }, T$.GetBuilderStateOfGetMaterialControllerTovoid()), initState: dart.fn(i => {
          let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4;
          if (i == null) dart.nullFailed(I[0], 234, 19, "i");
          dart.nullCheck(extension_navigation['GetNavigation|get#engine'](get_main.Get)).addPostFrameCallback(dart.fn(timeStamp => {
            let t0;
            if (timeStamp == null) dart.nullFailed(I[0], 235, 43, "timeStamp");
            t0 = this.onReady;
            t0 == null ? null : t0();
          }, T$.DurationTovoid()));
          if (this.locale != null) internacionalization$['LocalesIntl|set#locale'](get_main.Get, this.locale);
          if (this.fallbackLocale != null) internacionalization$['LocalesIntl|set#fallbackLocale'](get_main.Get, this.fallbackLocale);
          if (this.translations != null) {
            internacionalization$['LocalesIntl|addTranslations'](get_main.Get, dart.nullCheck(this.translations).keys);
          } else if (this.translationsKeys != null) {
            internacionalization$['LocalesIntl|addTranslations'](get_main.Get, dart.nullCheck(this.translationsKeys));
          }
          extension_navigation['GetNavigation|set#customTransition'](get_main.Get, this.customTransition);
          t0 = this.initialBinding;
          t0 == null ? null : t0.dependencies();
          if (this.getPages != null) {
            extension_navigation['NavTwoExt|addPages'](get_main.Get, dart.nullCheck(this.getPages));
          }
          get_main.Get.smartManagement = this.smartManagement;
          t0$ = this.onInit;
          t0$ == null ? null : t0$();
          extension_navigation['GetNavigation|config'](get_main.Get, {enableLog: (t0$0 = this.enableLog, t0$0 == null ? get_main.Get.isLogEnable : t0$0), logWriterCallback: this.logWriterCallback, defaultTransition: (t0$1 = this.defaultTransition, t0$1 == null ? extension_navigation['GetNavigation|get#defaultTransition'](get_main.Get) : t0$1), defaultOpaqueRoute: (t0$2 = this.opaqueRoute, t0$2 == null ? extension_navigation['GetNavigation|get#isOpaqueRouteDefault'](get_main.Get) : t0$2), defaultPopGesture: (t0$3 = this.popGesture, t0$3 == null ? extension_navigation['GetNavigation|get#isPopGestureEnable'](get_main.Get) : t0$3), defaultDurationTransition: (t0$4 = this.transitionDuration, t0$4 == null ? extension_navigation['GetNavigation|get#defaultTransitionDuration'](get_main.Get) : t0$4)});
        }, T$.GetBuilderStateOfGetMaterialControllerTovoid()), builder: dart.fn(_ => {
          let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4, t0$5, t0$6, t0$7, t0$8, t0$9, t0$10, t0$11, t0$12, t0$13;
          if (_ == null) dart.nullFailed(I[0], 269, 17, "_");
          return this.routerDelegate != null ? new app.MaterialApp.router({routerDelegate: dart.nullCheck(this.routerDelegate), routeInformationParser: dart.nullCheck(this.routeInformationParser), scaffoldMessengerKey: this.scaffoldMessengerKey, backButtonDispatcher: this.backButtonDispatcher, routeInformationProvider: this.routeInformationProvider, key: _.unikey, builder: dart.bind(this, 'defaultBuilder'), title: this.title, onGenerateTitle: this.onGenerateTitle, color: this.color, theme: (t0$ = (t0 = _.theme, t0 == null ? this.theme : t0), t0$ == null ? theme_data.ThemeData.fallback() : t0$), darkTheme: (t0$2 = (t0$1 = (t0$0 = _.darkTheme, t0$0 == null ? this.darkTheme : t0$0), t0$1 == null ? this.theme : t0$1), t0$2 == null ? theme_data.ThemeData.fallback() : t0$2), themeMode: (t0$3 = _.themeMode, t0$3 == null ? this.themeMode : t0$3), locale: (t0$4 = internacionalization$['LocalesIntl|get#locale'](get_main.Get), t0$4 == null ? this.locale : t0$4), localizationsDelegates: this.localizationsDelegates, localeListResolutionCallback: this.localeListResolutionCallback, localeResolutionCallback: this.localeResolutionCallback, supportedLocales: this.supportedLocales, debugShowMaterialGrid: this.debugShowMaterialGrid, showPerformanceOverlay: this.showPerformanceOverlay, checkerboardRasterCacheImages: this.checkerboardRasterCacheImages, checkerboardOffscreenLayers: this.checkerboardOffscreenLayers, showSemanticsDebugger: this.showSemanticsDebugger, debugShowCheckedModeBanner: this.debugShowCheckedModeBanner, shortcuts: this.shortcuts, scrollBehavior: this.scrollBehavior, $creationLocationd_0dea112b090073317d4: C[13] || CT.C13}) : new app.MaterialApp.new({key: _.unikey, navigatorKey: this.navigatorKey == null ? extension_navigation['GetNavigation|get#key'](get_main.Get) : extension_navigation['GetNavigation|addKey'](get_main.Get, dart.nullCheck(this.navigatorKey)), scaffoldMessengerKey: this.scaffoldMessengerKey, home: this.home, routes: (t0$5 = this.routes, t0$5 == null ? C[0] || CT.C0 : t0$5), initialRoute: this.initialRoute, onGenerateRoute: this.getPages != null ? dart.bind(this, 'generator') : this.onGenerateRoute, onGenerateInitialRoutes: this.getPages == null || this.home != null ? this.onGenerateInitialRoutes : dart.bind(this, 'initialRoutesGenerate'), onUnknownRoute: this.onUnknownRoute, navigatorObservers: (t0$6 = this.navigatorObservers == null ? T$.JSArrayOfNavigatorObserver().of([new route_observer.GetObserver.new(this.routingCallback, extension_navigation['GetNavigation|get#routing'](get_main.Get))]) : T$.JSArrayOfNavigatorObserver().of([new route_observer.GetObserver.new(this.routingCallback, extension_navigation['GetNavigation|get#routing'](get_main.Get))]), (() => {
              t0$6[$addAll](dart.nullCheck(this.navigatorObservers));
              return t0$6;
            })()), builder: dart.bind(this, 'defaultBuilder'), title: this.title, onGenerateTitle: this.onGenerateTitle, color: this.color, theme: (t0$8 = (t0$7 = _.theme, t0$7 == null ? this.theme : t0$7), t0$8 == null ? theme_data.ThemeData.fallback() : t0$8), darkTheme: (t0$11 = (t0$10 = (t0$9 = _.darkTheme, t0$9 == null ? this.darkTheme : t0$9), t0$10 == null ? this.theme : t0$10), t0$11 == null ? theme_data.ThemeData.fallback() : t0$11), themeMode: (t0$12 = _.themeMode, t0$12 == null ? this.themeMode : t0$12), locale: (t0$13 = internacionalization$['LocalesIntl|get#locale'](get_main.Get), t0$13 == null ? this.locale : t0$13), localizationsDelegates: this.localizationsDelegates, localeListResolutionCallback: this.localeListResolutionCallback, localeResolutionCallback: this.localeResolutionCallback, supportedLocales: this.supportedLocales, debugShowMaterialGrid: this.debugShowMaterialGrid, showPerformanceOverlay: this.showPerformanceOverlay, checkerboardRasterCacheImages: this.checkerboardRasterCacheImages, checkerboardOffscreenLayers: this.checkerboardOffscreenLayers, showSemanticsDebugger: this.showSemanticsDebugger, debugShowCheckedModeBanner: this.debugShowCheckedModeBanner, shortcuts: this.shortcuts, scrollBehavior: this.scrollBehavior, $creationLocationd_0dea112b090073317d4: C[41] || CT.C41});
        }, T$.GetMaterialControllerToMaterialApp()), $creationLocationd_0dea112b090073317d4: C[73] || CT.C73});
    }
  };
  (get_material_app.GetMaterialApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let navigatorKey = opts && 'navigatorKey' in opts ? opts.navigatorKey : null;
    let scaffoldMessengerKey = opts && 'scaffoldMessengerKey' in opts ? opts.scaffoldMessengerKey : null;
    let home = opts && 'home' in opts ? opts.home : null;
    let routes = opts && 'routes' in opts ? opts.routes : C[0] || CT.C0;
    if (routes == null) dart.nullFailed(I[0], 18, 53, "routes");
    let initialRoute = opts && 'initialRoute' in opts ? opts.initialRoute : null;
    let onGenerateRoute = opts && 'onGenerateRoute' in opts ? opts.onGenerateRoute : null;
    let onGenerateInitialRoutes = opts && 'onGenerateInitialRoutes' in opts ? opts.onGenerateInitialRoutes : null;
    let onUnknownRoute = opts && 'onUnknownRoute' in opts ? opts.onUnknownRoute : null;
    let navigatorObservers = opts && 'navigatorObservers' in opts ? opts.navigatorObservers : C[1] || CT.C1;
    if (navigatorObservers == null) dart.nullFailed(I[0], 24, 34, "navigatorObservers");
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let title = opts && 'title' in opts ? opts.title : "";
    if (title == null) dart.nullFailed(I[0], 28, 10, "title");
    let onGenerateTitle = opts && 'onGenerateTitle' in opts ? opts.onGenerateTitle : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let theme = opts && 'theme' in opts ? opts.theme : null;
    let darkTheme = opts && 'darkTheme' in opts ? opts.darkTheme : null;
    let themeMode = opts && 'themeMode' in opts ? opts.themeMode : C[2] || CT.C2;
    if (themeMode == null) dart.nullFailed(I[0], 33, 10, "themeMode");
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let fallbackLocale = opts && 'fallbackLocale' in opts ? opts.fallbackLocale : null;
    let localizationsDelegates = opts && 'localizationsDelegates' in opts ? opts.localizationsDelegates : null;
    let localeListResolutionCallback = opts && 'localeListResolutionCallback' in opts ? opts.localeListResolutionCallback : null;
    let localeResolutionCallback = opts && 'localeResolutionCallback' in opts ? opts.localeResolutionCallback : null;
    let supportedLocales = opts && 'supportedLocales' in opts ? opts.supportedLocales : C[3] || CT.C3;
    if (supportedLocales == null) dart.nullFailed(I[0], 39, 10, "supportedLocales");
    let debugShowMaterialGrid = opts && 'debugShowMaterialGrid' in opts ? opts.debugShowMaterialGrid : false;
    if (debugShowMaterialGrid == null) dart.nullFailed(I[0], 40, 10, "debugShowMaterialGrid");
    let showPerformanceOverlay = opts && 'showPerformanceOverlay' in opts ? opts.showPerformanceOverlay : false;
    if (showPerformanceOverlay == null) dart.nullFailed(I[0], 41, 10, "showPerformanceOverlay");
    let checkerboardRasterCacheImages = opts && 'checkerboardRasterCacheImages' in opts ? opts.checkerboardRasterCacheImages : false;
    if (checkerboardRasterCacheImages == null) dart.nullFailed(I[0], 42, 10, "checkerboardRasterCacheImages");
    let checkerboardOffscreenLayers = opts && 'checkerboardOffscreenLayers' in opts ? opts.checkerboardOffscreenLayers : false;
    if (checkerboardOffscreenLayers == null) dart.nullFailed(I[0], 43, 10, "checkerboardOffscreenLayers");
    let showSemanticsDebugger = opts && 'showSemanticsDebugger' in opts ? opts.showSemanticsDebugger : false;
    if (showSemanticsDebugger == null) dart.nullFailed(I[0], 44, 10, "showSemanticsDebugger");
    let debugShowCheckedModeBanner = opts && 'debugShowCheckedModeBanner' in opts ? opts.debugShowCheckedModeBanner : true;
    if (debugShowCheckedModeBanner == null) dart.nullFailed(I[0], 45, 10, "debugShowCheckedModeBanner");
    let shortcuts = opts && 'shortcuts' in opts ? opts.shortcuts : null;
    let scrollBehavior = opts && 'scrollBehavior' in opts ? opts.scrollBehavior : null;
    let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
    let translationsKeys = opts && 'translationsKeys' in opts ? opts.translationsKeys : null;
    let translations = opts && 'translations' in opts ? opts.translations : null;
    let onInit = opts && 'onInit' in opts ? opts.onInit : null;
    let onReady = opts && 'onReady' in opts ? opts.onReady : null;
    let onDispose = opts && 'onDispose' in opts ? opts.onDispose : null;
    let routingCallback = opts && 'routingCallback' in opts ? opts.routingCallback : null;
    let defaultTransition = opts && 'defaultTransition' in opts ? opts.defaultTransition : null;
    let getPages = opts && 'getPages' in opts ? opts.getPages : null;
    let opaqueRoute = opts && 'opaqueRoute' in opts ? opts.opaqueRoute : null;
    let enableLog = opts && 'enableLog' in opts ? opts.enableLog : null;
    let logWriterCallback = opts && 'logWriterCallback' in opts ? opts.logWriterCallback : null;
    let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
    let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
    let defaultGlobalState = opts && 'defaultGlobalState' in opts ? opts.defaultGlobalState : null;
    let smartManagement = opts && 'smartManagement' in opts ? opts.smartManagement : C[5] || CT.C5;
    if (smartManagement == null) dart.nullFailed(I[0], 63, 10, "smartManagement");
    let initialBinding = opts && 'initialBinding' in opts ? opts.initialBinding : null;
    let unknownRoute = opts && 'unknownRoute' in opts ? opts.unknownRoute : null;
    let highContrastTheme = opts && 'highContrastTheme' in opts ? opts.highContrastTheme : null;
    let highContrastDarkTheme = opts && 'highContrastDarkTheme' in opts ? opts.highContrastDarkTheme : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[navigatorKey$] = navigatorKey;
    this[scaffoldMessengerKey$] = scaffoldMessengerKey;
    this[home$] = home;
    this[routes$] = routes;
    this[initialRoute$] = initialRoute;
    this[onGenerateRoute$] = onGenerateRoute;
    this[onGenerateInitialRoutes$] = onGenerateInitialRoutes;
    this[onUnknownRoute$] = onUnknownRoute;
    this[navigatorObservers$] = navigatorObservers;
    this[builder$] = builder;
    this[textDirection$] = textDirection;
    this[title$] = title;
    this[onGenerateTitle$] = onGenerateTitle;
    this[color$] = color;
    this[theme$0] = theme;
    this[darkTheme$] = darkTheme;
    this[themeMode$] = themeMode;
    this[locale$] = locale;
    this[fallbackLocale$] = fallbackLocale;
    this[localizationsDelegates$] = localizationsDelegates;
    this[localeListResolutionCallback$] = localeListResolutionCallback;
    this[localeResolutionCallback$] = localeResolutionCallback;
    this[supportedLocales$] = supportedLocales;
    this[debugShowMaterialGrid$] = debugShowMaterialGrid;
    this[showPerformanceOverlay$] = showPerformanceOverlay;
    this[checkerboardRasterCacheImages$] = checkerboardRasterCacheImages;
    this[checkerboardOffscreenLayers$] = checkerboardOffscreenLayers;
    this[showSemanticsDebugger$] = showSemanticsDebugger;
    this[debugShowCheckedModeBanner$] = debugShowCheckedModeBanner;
    this[shortcuts$] = shortcuts;
    this[scrollBehavior$] = scrollBehavior;
    this[customTransition$] = customTransition;
    this[translationsKeys$] = translationsKeys;
    this[translations$] = translations;
    this[onInit$] = onInit;
    this[onReady$] = onReady;
    this[onDispose$] = onDispose;
    this[routingCallback$] = routingCallback;
    this[defaultTransition$] = defaultTransition;
    this[getPages$] = getPages;
    this[opaqueRoute$] = opaqueRoute;
    this[enableLog$] = enableLog;
    this[logWriterCallback$] = logWriterCallback;
    this[popGesture$] = popGesture;
    this[transitionDuration$] = transitionDuration;
    this[defaultGlobalState$] = defaultGlobalState;
    this[smartManagement$] = smartManagement;
    this[initialBinding$] = initialBinding;
    this[unknownRoute$] = unknownRoute;
    this[highContrastTheme$] = highContrastTheme;
    this[highContrastDarkTheme$] = highContrastDarkTheme;
    this[actions$] = actions;
    this[routeInformationProvider$] = null;
    this[routeInformationParser$] = null;
    this[routerDelegate$] = null;
    this[backButtonDispatcher$] = null;
    get_material_app.GetMaterialApp.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = get_material_app.GetMaterialApp.prototype;
  (get_material_app.GetMaterialApp.router = function(opts) {
    let t0, t1, t1$, t0$;
    let key = opts && 'key' in opts ? opts.key : null;
    let routeInformationProvider = opts && 'routeInformationProvider' in opts ? opts.routeInformationProvider : null;
    let scaffoldMessengerKey = opts && 'scaffoldMessengerKey' in opts ? opts.scaffoldMessengerKey : null;
    let routeInformationParser = opts && 'routeInformationParser' in opts ? opts.routeInformationParser : null;
    let routerDelegate = opts && 'routerDelegate' in opts ? opts.routerDelegate : null;
    let backButtonDispatcher = opts && 'backButtonDispatcher' in opts ? opts.backButtonDispatcher : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let title = opts && 'title' in opts ? opts.title : "";
    if (title == null) dart.nullFailed(I[0], 140, 10, "title");
    let onGenerateTitle = opts && 'onGenerateTitle' in opts ? opts.onGenerateTitle : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let theme = opts && 'theme' in opts ? opts.theme : null;
    let darkTheme = opts && 'darkTheme' in opts ? opts.darkTheme : null;
    let highContrastTheme = opts && 'highContrastTheme' in opts ? opts.highContrastTheme : null;
    let highContrastDarkTheme = opts && 'highContrastDarkTheme' in opts ? opts.highContrastDarkTheme : null;
    let themeMode = opts && 'themeMode' in opts ? opts.themeMode : C[2] || CT.C2;
    if (themeMode == null) dart.nullFailed(I[0], 147, 10, "themeMode");
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let localizationsDelegates = opts && 'localizationsDelegates' in opts ? opts.localizationsDelegates : null;
    let localeListResolutionCallback = opts && 'localeListResolutionCallback' in opts ? opts.localeListResolutionCallback : null;
    let localeResolutionCallback = opts && 'localeResolutionCallback' in opts ? opts.localeResolutionCallback : null;
    let supportedLocales = opts && 'supportedLocales' in opts ? opts.supportedLocales : C[3] || CT.C3;
    if (supportedLocales == null) dart.nullFailed(I[0], 152, 10, "supportedLocales");
    let debugShowMaterialGrid = opts && 'debugShowMaterialGrid' in opts ? opts.debugShowMaterialGrid : false;
    if (debugShowMaterialGrid == null) dart.nullFailed(I[0], 153, 10, "debugShowMaterialGrid");
    let showPerformanceOverlay = opts && 'showPerformanceOverlay' in opts ? opts.showPerformanceOverlay : false;
    if (showPerformanceOverlay == null) dart.nullFailed(I[0], 154, 10, "showPerformanceOverlay");
    let checkerboardRasterCacheImages = opts && 'checkerboardRasterCacheImages' in opts ? opts.checkerboardRasterCacheImages : false;
    if (checkerboardRasterCacheImages == null) dart.nullFailed(I[0], 155, 10, "checkerboardRasterCacheImages");
    let checkerboardOffscreenLayers = opts && 'checkerboardOffscreenLayers' in opts ? opts.checkerboardOffscreenLayers : false;
    if (checkerboardOffscreenLayers == null) dart.nullFailed(I[0], 156, 10, "checkerboardOffscreenLayers");
    let showSemanticsDebugger = opts && 'showSemanticsDebugger' in opts ? opts.showSemanticsDebugger : false;
    if (showSemanticsDebugger == null) dart.nullFailed(I[0], 157, 10, "showSemanticsDebugger");
    let debugShowCheckedModeBanner = opts && 'debugShowCheckedModeBanner' in opts ? opts.debugShowCheckedModeBanner : true;
    if (debugShowCheckedModeBanner == null) dart.nullFailed(I[0], 158, 10, "debugShowCheckedModeBanner");
    let shortcuts = opts && 'shortcuts' in opts ? opts.shortcuts : null;
    let scrollBehavior = opts && 'scrollBehavior' in opts ? opts.scrollBehavior : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
    let translationsKeys = opts && 'translationsKeys' in opts ? opts.translationsKeys : null;
    let translations = opts && 'translations' in opts ? opts.translations : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let fallbackLocale = opts && 'fallbackLocale' in opts ? opts.fallbackLocale : null;
    let routingCallback = opts && 'routingCallback' in opts ? opts.routingCallback : null;
    let defaultTransition = opts && 'defaultTransition' in opts ? opts.defaultTransition : null;
    let opaqueRoute = opts && 'opaqueRoute' in opts ? opts.opaqueRoute : null;
    let onInit = opts && 'onInit' in opts ? opts.onInit : null;
    let onReady = opts && 'onReady' in opts ? opts.onReady : null;
    let onDispose = opts && 'onDispose' in opts ? opts.onDispose : null;
    let enableLog = opts && 'enableLog' in opts ? opts.enableLog : null;
    let logWriterCallback = opts && 'logWriterCallback' in opts ? opts.logWriterCallback : null;
    let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
    let smartManagement = opts && 'smartManagement' in opts ? opts.smartManagement : C[5] || CT.C5;
    if (smartManagement == null) dart.nullFailed(I[0], 176, 10, "smartManagement");
    let initialBinding = opts && 'initialBinding' in opts ? opts.initialBinding : null;
    let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
    let defaultGlobalState = opts && 'defaultGlobalState' in opts ? opts.defaultGlobalState : null;
    let getPages = opts && 'getPages' in opts ? opts.getPages : null;
    let navigatorObservers = opts && 'navigatorObservers' in opts ? opts.navigatorObservers : null;
    let unknownRoute = opts && 'unknownRoute' in opts ? opts.unknownRoute : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[routeInformationProvider$] = routeInformationProvider;
    this[scaffoldMessengerKey$] = scaffoldMessengerKey;
    this[backButtonDispatcher$] = backButtonDispatcher;
    this[builder$] = builder;
    this[title$] = title;
    this[onGenerateTitle$] = onGenerateTitle;
    this[color$] = color;
    this[theme$0] = theme;
    this[darkTheme$] = darkTheme;
    this[highContrastTheme$] = highContrastTheme;
    this[highContrastDarkTheme$] = highContrastDarkTheme;
    this[themeMode$] = themeMode;
    this[locale$] = locale;
    this[localizationsDelegates$] = localizationsDelegates;
    this[localeListResolutionCallback$] = localeListResolutionCallback;
    this[localeResolutionCallback$] = localeResolutionCallback;
    this[supportedLocales$] = supportedLocales;
    this[debugShowMaterialGrid$] = debugShowMaterialGrid;
    this[showPerformanceOverlay$] = showPerformanceOverlay;
    this[checkerboardRasterCacheImages$] = checkerboardRasterCacheImages;
    this[checkerboardOffscreenLayers$] = checkerboardOffscreenLayers;
    this[showSemanticsDebugger$] = showSemanticsDebugger;
    this[debugShowCheckedModeBanner$] = debugShowCheckedModeBanner;
    this[shortcuts$] = shortcuts;
    this[scrollBehavior$] = scrollBehavior;
    this[actions$] = actions;
    this[customTransition$] = customTransition;
    this[translationsKeys$] = translationsKeys;
    this[translations$] = translations;
    this[textDirection$] = textDirection;
    this[fallbackLocale$] = fallbackLocale;
    this[routingCallback$] = routingCallback;
    this[defaultTransition$] = defaultTransition;
    this[opaqueRoute$] = opaqueRoute;
    this[onInit$] = onInit;
    this[onReady$] = onReady;
    this[onDispose$] = onDispose;
    this[enableLog$] = enableLog;
    this[logWriterCallback$] = logWriterCallback;
    this[popGesture$] = popGesture;
    this[smartManagement$] = smartManagement;
    this[initialBinding$] = initialBinding;
    this[transitionDuration$] = transitionDuration;
    this[defaultGlobalState$] = defaultGlobalState;
    this[getPages$] = getPages;
    this[navigatorObservers$] = navigatorObservers;
    this[unknownRoute$] = unknownRoute;
    this[routerDelegate$] = (t0 = routerDelegate, t0 == null ? routerDelegate = extension_navigation['NavTwoExt|createDelegate'](get_main.Get, {notFoundRoute: unknownRoute}) : t0);
    this[routeInformationParser$] = (t0$ = routeInformationParser, t0$ == null ? routeInformationParser = extension_navigation['NavTwoExt|createInformationParser'](get_main.Get, {initialRoute: (t1$ = (t1 = getPages, t1 == null ? null : t1[$first].name), t1$ == null ? "/" : t1$)}) : t0$);
    this[navigatorKey$] = null;
    this[onGenerateRoute$] = null;
    this[home$] = null;
    this[onGenerateInitialRoutes$] = null;
    this[onUnknownRoute$] = null;
    this[routes$] = null;
    this[initialRoute$] = null;
    get_material_app.GetMaterialApp.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    get_main.Get.routerDelegate = routerDelegate;
    get_main.Get.routeInformationParser = routeInformationParser;
  }).prototype = get_material_app.GetMaterialApp.prototype;
  dart.addTypeTests(get_material_app.GetMaterialApp);
  dart.addTypeCaches(get_material_app.GetMaterialApp);
  dart.setMethodSignature(get_material_app.GetMaterialApp, () => ({
    __proto__: dart.getMethods(get_material_app.GetMaterialApp.__proto__),
    generator: dart.fnType(navigator.Route, [navigator.RouteSettings]),
    initialRoutesGenerate: dart.fnType(core.List$(navigator.Route), [core.String]),
    defaultBuilder: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(get_material_app.GetMaterialApp, I[1]);
  dart.setFieldSignature(get_material_app.GetMaterialApp, () => ({
    __proto__: dart.getFields(get_material_app.GetMaterialApp.__proto__),
    navigatorKey: dart.finalFieldType(dart.nullable(framework.GlobalKey$(navigator.NavigatorState))),
    scaffoldMessengerKey: dart.finalFieldType(dart.nullable(framework.GlobalKey$(scaffold.ScaffoldMessengerState))),
    home: dart.finalFieldType(dart.nullable(framework.Widget)),
    routes: dart.finalFieldType(dart.nullable(core.Map$(core.String, dart.fnType(framework.Widget, [framework.BuildContext])))),
    initialRoute: dart.finalFieldType(dart.nullable(core.String)),
    onGenerateRoute: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(navigator.Route), [navigator.RouteSettings]))),
    onGenerateInitialRoutes: dart.finalFieldType(dart.nullable(dart.fnType(core.List$(navigator.Route), [core.String]))),
    onUnknownRoute: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(navigator.Route), [navigator.RouteSettings]))),
    navigatorObservers: dart.finalFieldType(dart.nullable(core.List$(navigator.NavigatorObserver))),
    builder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]))),
    title: dart.finalFieldType(core.String),
    onGenerateTitle: dart.finalFieldType(dart.nullable(dart.fnType(core.String, [framework.BuildContext]))),
    theme: dart.finalFieldType(dart.nullable(theme_data.ThemeData)),
    darkTheme: dart.finalFieldType(dart.nullable(theme_data.ThemeData)),
    themeMode: dart.finalFieldType(app.ThemeMode),
    customTransition: dart.finalFieldType(dart.nullable(custom_transition.CustomTransition)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    translationsKeys: dart.finalFieldType(dart.nullable(core.Map$(core.String, core.Map$(core.String, core.String)))),
    translations: dart.finalFieldType(dart.nullable(internacionalization.Translations)),
    textDirection: dart.finalFieldType(dart.nullable(ui.TextDirection)),
    locale: dart.finalFieldType(dart.nullable(ui.Locale)),
    fallbackLocale: dart.finalFieldType(dart.nullable(ui.Locale)),
    localizationsDelegates: dart.finalFieldType(dart.nullable(core.Iterable$(localizations.LocalizationsDelegate))),
    localeListResolutionCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(ui.Locale), [dart.nullable(core.List$(ui.Locale)), core.Iterable$(ui.Locale)]))),
    localeResolutionCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(ui.Locale), [dart.nullable(ui.Locale), core.Iterable$(ui.Locale)]))),
    supportedLocales: dart.finalFieldType(core.Iterable$(ui.Locale)),
    showPerformanceOverlay: dart.finalFieldType(core.bool),
    checkerboardRasterCacheImages: dart.finalFieldType(core.bool),
    checkerboardOffscreenLayers: dart.finalFieldType(core.bool),
    showSemanticsDebugger: dart.finalFieldType(core.bool),
    debugShowCheckedModeBanner: dart.finalFieldType(core.bool),
    shortcuts: dart.finalFieldType(dart.nullable(core.Map$(shortcuts.LogicalKeySet, actions.Intent))),
    scrollBehavior: dart.finalFieldType(dart.nullable(scroll_configuration.ScrollBehavior)),
    highContrastTheme: dart.finalFieldType(dart.nullable(theme_data.ThemeData)),
    highContrastDarkTheme: dart.finalFieldType(dart.nullable(theme_data.ThemeData)),
    actions: dart.finalFieldType(dart.nullable(core.Map$(core.Type, actions.Action$(actions.Intent)))),
    debugShowMaterialGrid: dart.finalFieldType(core.bool),
    routingCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [dart.nullable(route_observer.Routing)]))),
    defaultTransition: dart.finalFieldType(dart.nullable(transitions_type.Transition)),
    opaqueRoute: dart.finalFieldType(dart.nullable(core.bool)),
    onInit: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onReady: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onDispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    enableLog: dart.finalFieldType(dart.nullable(core.bool)),
    logWriterCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.String], {isError: core.bool}, {}))),
    popGesture: dart.finalFieldType(dart.nullable(core.bool)),
    smartManagement: dart.finalFieldType(smart_management.SmartManagement),
    initialBinding: dart.finalFieldType(dart.nullable(bindings_interface.Bindings)),
    transitionDuration: dart.finalFieldType(dart.nullable(core.Duration)),
    defaultGlobalState: dart.finalFieldType(dart.nullable(core.bool)),
    getPages: dart.finalFieldType(dart.nullable(core.List$(get_route.GetPage))),
    unknownRoute: dart.finalFieldType(dart.nullable(get_route.GetPage)),
    routeInformationProvider: dart.finalFieldType(dart.nullable(router.RouteInformationProvider)),
    routeInformationParser: dart.finalFieldType(dart.nullable(router.RouteInformationParser$(core.Object))),
    routerDelegate: dart.finalFieldType(dart.nullable(router.RouterDelegate$(core.Object))),
    backButtonDispatcher: dart.finalFieldType(dart.nullable(router.BackButtonDispatcher))
  }));
  var navigatorKey$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.navigatorKey");
  var home$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.home");
  var routes$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.routes");
  var initialRoute$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.initialRoute");
  var onGenerateRoute$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.onGenerateRoute");
  var onGenerateInitialRoutes$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.onGenerateInitialRoutes");
  var onUnknownRoute$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.onUnknownRoute");
  var navigatorObservers$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.navigatorObservers");
  var builder$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.builder");
  var title$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.title");
  var onGenerateTitle$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.onGenerateTitle");
  var customTransition$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.customTransition");
  var color$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.color");
  var translationsKeys$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.translationsKeys");
  var translations$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.translations");
  var textDirection$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.textDirection");
  var locale$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.locale");
  var fallbackLocale$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.fallbackLocale");
  var localizationsDelegates$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.localizationsDelegates");
  var localeListResolutionCallback$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.localeListResolutionCallback");
  var localeResolutionCallback$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.localeResolutionCallback");
  var supportedLocales$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.supportedLocales");
  var showPerformanceOverlay$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.showPerformanceOverlay");
  var checkerboardRasterCacheImages$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.checkerboardRasterCacheImages");
  var checkerboardOffscreenLayers$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.checkerboardOffscreenLayers");
  var showSemanticsDebugger$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.showSemanticsDebugger");
  var debugShowCheckedModeBanner$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.debugShowCheckedModeBanner");
  var shortcuts$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.shortcuts");
  var highContrastTheme$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.highContrastTheme");
  var highContrastDarkTheme$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.highContrastDarkTheme");
  var actions$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.actions");
  var routingCallback$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.routingCallback");
  var defaultTransition$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.defaultTransition");
  var opaqueRoute$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.opaqueRoute");
  var onInit$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.onInit");
  var onReady$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.onReady");
  var onDispose$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.onDispose");
  var enableLog$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.enableLog");
  var logWriterCallback$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.logWriterCallback");
  var popGesture$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.popGesture");
  var smartManagement$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.smartManagement");
  var initialBinding$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.initialBinding");
  var transitionDuration$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.transitionDuration");
  var defaultGlobalState$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.defaultGlobalState");
  var getPages$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.getPages");
  var unknownRoute$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.unknownRoute");
  var routeInformationProvider$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.routeInformationProvider");
  var routeInformationParser$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.routeInformationParser");
  var routerDelegate$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.routerDelegate");
  var backButtonDispatcher$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.backButtonDispatcher");
  var theme$1 = dart.privateName(get_cupertino_app, "GetCupertinoApp.theme");
  get_cupertino_app.GetCupertinoApp = class GetCupertinoApp extends framework.StatelessWidget {
    get navigatorKey() {
      return this[navigatorKey$0];
    }
    set navigatorKey(value) {
      super.navigatorKey = value;
    }
    get home() {
      return this[home$0];
    }
    set home(value) {
      super.home = value;
    }
    get routes() {
      return this[routes$0];
    }
    set routes(value) {
      super.routes = value;
    }
    get initialRoute() {
      return this[initialRoute$0];
    }
    set initialRoute(value) {
      super.initialRoute = value;
    }
    get onGenerateRoute() {
      return this[onGenerateRoute$0];
    }
    set onGenerateRoute(value) {
      super.onGenerateRoute = value;
    }
    get onGenerateInitialRoutes() {
      return this[onGenerateInitialRoutes$0];
    }
    set onGenerateInitialRoutes(value) {
      super.onGenerateInitialRoutes = value;
    }
    get onUnknownRoute() {
      return this[onUnknownRoute$0];
    }
    set onUnknownRoute(value) {
      super.onUnknownRoute = value;
    }
    get navigatorObservers() {
      return this[navigatorObservers$0];
    }
    set navigatorObservers(value) {
      super.navigatorObservers = value;
    }
    get builder() {
      return this[builder$0];
    }
    set builder(value) {
      super.builder = value;
    }
    get title() {
      return this[title$0];
    }
    set title(value) {
      super.title = value;
    }
    get onGenerateTitle() {
      return this[onGenerateTitle$0];
    }
    set onGenerateTitle(value) {
      super.onGenerateTitle = value;
    }
    get customTransition() {
      return this[customTransition$0];
    }
    set customTransition(value) {
      super.customTransition = value;
    }
    get color() {
      return this[color$0];
    }
    set color(value) {
      super.color = value;
    }
    get translationsKeys() {
      return this[translationsKeys$0];
    }
    set translationsKeys(value) {
      super.translationsKeys = value;
    }
    get translations() {
      return this[translations$0];
    }
    set translations(value) {
      super.translations = value;
    }
    get textDirection() {
      return this[textDirection$0];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get locale() {
      return this[locale$0];
    }
    set locale(value) {
      super.locale = value;
    }
    get fallbackLocale() {
      return this[fallbackLocale$0];
    }
    set fallbackLocale(value) {
      super.fallbackLocale = value;
    }
    get localizationsDelegates() {
      return this[localizationsDelegates$0];
    }
    set localizationsDelegates(value) {
      super.localizationsDelegates = value;
    }
    get localeListResolutionCallback() {
      return this[localeListResolutionCallback$0];
    }
    set localeListResolutionCallback(value) {
      super.localeListResolutionCallback = value;
    }
    get localeResolutionCallback() {
      return this[localeResolutionCallback$0];
    }
    set localeResolutionCallback(value) {
      super.localeResolutionCallback = value;
    }
    get supportedLocales() {
      return this[supportedLocales$0];
    }
    set supportedLocales(value) {
      super.supportedLocales = value;
    }
    get showPerformanceOverlay() {
      return this[showPerformanceOverlay$0];
    }
    set showPerformanceOverlay(value) {
      super.showPerformanceOverlay = value;
    }
    get checkerboardRasterCacheImages() {
      return this[checkerboardRasterCacheImages$0];
    }
    set checkerboardRasterCacheImages(value) {
      super.checkerboardRasterCacheImages = value;
    }
    get checkerboardOffscreenLayers() {
      return this[checkerboardOffscreenLayers$0];
    }
    set checkerboardOffscreenLayers(value) {
      super.checkerboardOffscreenLayers = value;
    }
    get showSemanticsDebugger() {
      return this[showSemanticsDebugger$0];
    }
    set showSemanticsDebugger(value) {
      super.showSemanticsDebugger = value;
    }
    get debugShowCheckedModeBanner() {
      return this[debugShowCheckedModeBanner$0];
    }
    set debugShowCheckedModeBanner(value) {
      super.debugShowCheckedModeBanner = value;
    }
    get shortcuts() {
      return this[shortcuts$0];
    }
    set shortcuts(value) {
      super.shortcuts = value;
    }
    get highContrastTheme() {
      return this[highContrastTheme$0];
    }
    set highContrastTheme(value) {
      super.highContrastTheme = value;
    }
    get highContrastDarkTheme() {
      return this[highContrastDarkTheme$0];
    }
    set highContrastDarkTheme(value) {
      super.highContrastDarkTheme = value;
    }
    get actions() {
      return this[actions$0];
    }
    set actions(value) {
      super.actions = value;
    }
    get routingCallback() {
      return this[routingCallback$0];
    }
    set routingCallback(value) {
      super.routingCallback = value;
    }
    get defaultTransition() {
      return this[defaultTransition$0];
    }
    set defaultTransition(value) {
      super.defaultTransition = value;
    }
    get opaqueRoute() {
      return this[opaqueRoute$0];
    }
    set opaqueRoute(value) {
      super.opaqueRoute = value;
    }
    get onInit() {
      return this[onInit$0];
    }
    set onInit(value) {
      super.onInit = value;
    }
    get onReady() {
      return this[onReady$0];
    }
    set onReady(value) {
      super.onReady = value;
    }
    get onDispose() {
      return this[onDispose$0];
    }
    set onDispose(value) {
      super.onDispose = value;
    }
    get enableLog() {
      return this[enableLog$0];
    }
    set enableLog(value) {
      super.enableLog = value;
    }
    get logWriterCallback() {
      return this[logWriterCallback$0];
    }
    set logWriterCallback(value) {
      super.logWriterCallback = value;
    }
    get popGesture() {
      return this[popGesture$0];
    }
    set popGesture(value) {
      super.popGesture = value;
    }
    get smartManagement() {
      return this[smartManagement$0];
    }
    set smartManagement(value) {
      super.smartManagement = value;
    }
    get initialBinding() {
      return this[initialBinding$0];
    }
    set initialBinding(value) {
      super.initialBinding = value;
    }
    get transitionDuration() {
      return this[transitionDuration$0];
    }
    set transitionDuration(value) {
      super.transitionDuration = value;
    }
    get defaultGlobalState() {
      return this[defaultGlobalState$0];
    }
    set defaultGlobalState(value) {
      super.defaultGlobalState = value;
    }
    get getPages() {
      return this[getPages$0];
    }
    set getPages(value) {
      super.getPages = value;
    }
    get unknownRoute() {
      return this[unknownRoute$0];
    }
    set unknownRoute(value) {
      super.unknownRoute = value;
    }
    get routeInformationProvider() {
      return this[routeInformationProvider$0];
    }
    set routeInformationProvider(value) {
      super.routeInformationProvider = value;
    }
    get routeInformationParser() {
      return this[routeInformationParser$0];
    }
    set routeInformationParser(value) {
      super.routeInformationParser = value;
    }
    get routerDelegate() {
      return this[routerDelegate$0];
    }
    set routerDelegate(value) {
      super.routerDelegate = value;
    }
    get backButtonDispatcher() {
      return this[backButtonDispatcher$0];
    }
    set backButtonDispatcher(value) {
      super.backButtonDispatcher = value;
    }
    get theme() {
      return this[theme$1];
    }
    set theme(value) {
      super.theme = value;
    }
    generator(settings) {
      if (settings == null) dart.nullFailed(I[2], 186, 42, "settings");
      return new route_middleware.PageRedirect.new({settings: settings, unknownRoute: this.unknownRoute}).page(dart.dynamic);
    }
    initialRoutesGenerate(name) {
      if (name == null) dart.nullFailed(I[2], 190, 53, "name");
      return T$.JSArrayOfRoute().of([new route_middleware.PageRedirect.new({settings: new navigator.RouteSettings.new({name: name}), unknownRoute: this.unknownRoute}).page(dart.dynamic)]);
    }
    defaultBuilder(context, child) {
      let t1, t0, t0$, t0$0;
      if (context == null) dart.nullFailed(I[2], 199, 38, "context");
      return new basic.Directionality.new({textDirection: (t0 = this.textDirection, t0 == null ? dart.test(internacionalization.rtlLanguages[$contains]((t1 = internacionalization$['LocalesIntl|get#locale'](get_main.Get), t1 == null ? null : t1.languageCode))) ? ui.TextDirection.rtl : ui.TextDirection.ltr : t0), child: this.builder == null ? (t0$ = child, t0$ == null ? new material.Material.new({$creationLocationd_0dea112b090073317d4: C[79] || CT.C79}) : t0$) : dart.nullCheck(this.builder)(context, (t0$0 = child, t0$0 == null ? new material.Material.new({$creationLocationd_0dea112b090073317d4: C[80] || CT.C80}) : t0$0)), $creationLocationd_0dea112b090073317d4: C[81] || CT.C81});
    }
    build(context) {
      if (context == null) dart.nullFailed(I[2], 212, 29, "context");
      return new (T$.GetBuilderOfGetMaterialController()).new({init: extension_navigation['GetNavigation|get#rootController'](get_main.Get), dispose: dart.fn(d => {
          let t0;
          if (d == null) dart.nullFailed(I[2], 214, 19, "d");
          t0 = this.onDispose;
          t0 == null ? null : t0();
        }, T$.GetBuilderStateOfGetMaterialControllerTovoid()), initState: dart.fn(i => {
          let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4;
          if (i == null) dart.nullFailed(I[2], 217, 21, "i");
          dart.nullCheck(extension_navigation['GetNavigation|get#engine'](get_main.Get)).addPostFrameCallback(dart.fn(timeStamp => {
            let t0;
            if (timeStamp == null) dart.nullFailed(I[2], 218, 45, "timeStamp");
            t0 = this.onReady;
            t0 == null ? null : t0();
          }, T$.DurationTovoid()));
          if (this.locale != null) internacionalization$['LocalesIntl|set#locale'](get_main.Get, this.locale);
          if (this.fallbackLocale != null) internacionalization$['LocalesIntl|set#fallbackLocale'](get_main.Get, this.fallbackLocale);
          if (this.translations != null) {
            internacionalization$['LocalesIntl|addTranslations'](get_main.Get, dart.nullCheck(this.translations).keys);
          } else if (this.translationsKeys != null) {
            internacionalization$['LocalesIntl|addTranslations'](get_main.Get, dart.nullCheck(this.translationsKeys));
          }
          extension_navigation['GetNavigation|set#customTransition'](get_main.Get, this.customTransition);
          t0 = this.initialBinding;
          t0 == null ? null : t0.dependencies();
          if (this.getPages != null) {
            extension_navigation['NavTwoExt|addPages'](get_main.Get, dart.nullCheck(this.getPages));
          }
          get_main.Get.smartManagement = this.smartManagement;
          t0$ = this.onInit;
          t0$ == null ? null : t0$();
          extension_navigation['GetNavigation|config'](get_main.Get, {enableLog: (t0$0 = this.enableLog, t0$0 == null ? get_main.Get.isLogEnable : t0$0), logWriterCallback: this.logWriterCallback, defaultTransition: (t0$1 = this.defaultTransition, t0$1 == null ? extension_navigation['GetNavigation|get#defaultTransition'](get_main.Get) : t0$1), defaultOpaqueRoute: (t0$2 = this.opaqueRoute, t0$2 == null ? extension_navigation['GetNavigation|get#isOpaqueRouteDefault'](get_main.Get) : t0$2), defaultPopGesture: (t0$3 = this.popGesture, t0$3 == null ? extension_navigation['GetNavigation|get#isPopGestureEnable'](get_main.Get) : t0$3), defaultDurationTransition: (t0$4 = this.transitionDuration, t0$4 == null ? extension_navigation['GetNavigation|get#defaultTransitionDuration'](get_main.Get) : t0$4)});
        }, T$.GetBuilderStateOfGetMaterialControllerTovoid()), builder: dart.fn(_ => {
          let t0, t0$, t0$0, t0$1;
          if (_ == null) dart.nullFailed(I[2], 251, 19, "_");
          return this.routerDelegate != null ? new app$.CupertinoApp.router({routerDelegate: dart.nullCheck(this.routerDelegate), routeInformationParser: dart.nullCheck(this.routeInformationParser), backButtonDispatcher: this.backButtonDispatcher, routeInformationProvider: this.routeInformationProvider, key: _.unikey, theme: this.theme, builder: dart.bind(this, 'defaultBuilder'), title: this.title, onGenerateTitle: this.onGenerateTitle, color: this.color, locale: (t0 = internacionalization$['LocalesIntl|get#locale'](get_main.Get), t0 == null ? this.locale : t0), localizationsDelegates: this.localizationsDelegates, localeListResolutionCallback: this.localeListResolutionCallback, localeResolutionCallback: this.localeResolutionCallback, supportedLocales: this.supportedLocales, showPerformanceOverlay: this.showPerformanceOverlay, checkerboardRasterCacheImages: this.checkerboardRasterCacheImages, checkerboardOffscreenLayers: this.checkerboardOffscreenLayers, showSemanticsDebugger: this.showSemanticsDebugger, debugShowCheckedModeBanner: this.debugShowCheckedModeBanner, shortcuts: this.shortcuts, $creationLocationd_0dea112b090073317d4: C[85] || CT.C85}) : new app$.CupertinoApp.new({key: _.unikey, theme: this.theme, navigatorKey: this.navigatorKey == null ? extension_navigation['GetNavigation|get#key'](get_main.Get) : extension_navigation['GetNavigation|addKey'](get_main.Get, dart.nullCheck(this.navigatorKey)), home: this.home, routes: (t0$ = this.routes, t0$ == null ? C[0] || CT.C0 : t0$), initialRoute: this.initialRoute, onGenerateRoute: this.getPages != null ? dart.bind(this, 'generator') : this.onGenerateRoute, onGenerateInitialRoutes: this.getPages == null || this.home != null ? this.onGenerateInitialRoutes : dart.bind(this, 'initialRoutesGenerate'), onUnknownRoute: this.onUnknownRoute, navigatorObservers: (t0$0 = this.navigatorObservers == null ? T$.JSArrayOfNavigatorObserver().of([new route_observer.GetObserver.new(this.routingCallback, extension_navigation['GetNavigation|get#routing'](get_main.Get))]) : T$.JSArrayOfNavigatorObserver().of([new route_observer.GetObserver.new(this.routingCallback, extension_navigation['GetNavigation|get#routing'](get_main.Get))]), (() => {
              t0$0[$addAll](dart.nullCheck(this.navigatorObservers));
              return t0$0;
            })()), builder: dart.bind(this, 'defaultBuilder'), title: this.title, onGenerateTitle: this.onGenerateTitle, color: this.color, locale: (t0$1 = internacionalization$['LocalesIntl|get#locale'](get_main.Get), t0$1 == null ? this.locale : t0$1), localizationsDelegates: this.localizationsDelegates, localeListResolutionCallback: this.localeListResolutionCallback, localeResolutionCallback: this.localeResolutionCallback, supportedLocales: this.supportedLocales, showPerformanceOverlay: this.showPerformanceOverlay, checkerboardRasterCacheImages: this.checkerboardRasterCacheImages, checkerboardOffscreenLayers: this.checkerboardOffscreenLayers, showSemanticsDebugger: this.showSemanticsDebugger, debugShowCheckedModeBanner: this.debugShowCheckedModeBanner, shortcuts: this.shortcuts, $creationLocationd_0dea112b090073317d4: C[108] || CT.C108});
        }, T$.GetMaterialControllerToCupertinoApp()), $creationLocationd_0dea112b090073317d4: C[135] || CT.C135});
    }
  };
  (get_cupertino_app.GetCupertinoApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let theme = opts && 'theme' in opts ? opts.theme : null;
    let navigatorKey = opts && 'navigatorKey' in opts ? opts.navigatorKey : null;
    let home = opts && 'home' in opts ? opts.home : null;
    let routes = opts && 'routes' in opts ? opts.routes : C[0] || CT.C0;
    if (routes == null) dart.nullFailed(I[2], 17, 53, "routes");
    let initialRoute = opts && 'initialRoute' in opts ? opts.initialRoute : null;
    let onGenerateRoute = opts && 'onGenerateRoute' in opts ? opts.onGenerateRoute : null;
    let onGenerateInitialRoutes = opts && 'onGenerateInitialRoutes' in opts ? opts.onGenerateInitialRoutes : null;
    let onUnknownRoute = opts && 'onUnknownRoute' in opts ? opts.onUnknownRoute : null;
    let navigatorObservers = opts && 'navigatorObservers' in opts ? opts.navigatorObservers : C[1] || CT.C1;
    if (navigatorObservers == null) dart.nullFailed(I[2], 23, 34, "navigatorObservers");
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let translationsKeys = opts && 'translationsKeys' in opts ? opts.translationsKeys : null;
    let translations = opts && 'translations' in opts ? opts.translations : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let title = opts && 'title' in opts ? opts.title : "";
    if (title == null) dart.nullFailed(I[2], 29, 10, "title");
    let onGenerateTitle = opts && 'onGenerateTitle' in opts ? opts.onGenerateTitle : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
    let onInit = opts && 'onInit' in opts ? opts.onInit : null;
    let onDispose = opts && 'onDispose' in opts ? opts.onDispose : null;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let fallbackLocale = opts && 'fallbackLocale' in opts ? opts.fallbackLocale : null;
    let localizationsDelegates = opts && 'localizationsDelegates' in opts ? opts.localizationsDelegates : null;
    let localeListResolutionCallback = opts && 'localeListResolutionCallback' in opts ? opts.localeListResolutionCallback : null;
    let localeResolutionCallback = opts && 'localeResolutionCallback' in opts ? opts.localeResolutionCallback : null;
    let supportedLocales = opts && 'supportedLocales' in opts ? opts.supportedLocales : C[3] || CT.C3;
    if (supportedLocales == null) dart.nullFailed(I[2], 40, 10, "supportedLocales");
    let showPerformanceOverlay = opts && 'showPerformanceOverlay' in opts ? opts.showPerformanceOverlay : false;
    if (showPerformanceOverlay == null) dart.nullFailed(I[2], 41, 10, "showPerformanceOverlay");
    let checkerboardRasterCacheImages = opts && 'checkerboardRasterCacheImages' in opts ? opts.checkerboardRasterCacheImages : false;
    if (checkerboardRasterCacheImages == null) dart.nullFailed(I[2], 42, 10, "checkerboardRasterCacheImages");
    let checkerboardOffscreenLayers = opts && 'checkerboardOffscreenLayers' in opts ? opts.checkerboardOffscreenLayers : false;
    if (checkerboardOffscreenLayers == null) dart.nullFailed(I[2], 43, 10, "checkerboardOffscreenLayers");
    let showSemanticsDebugger = opts && 'showSemanticsDebugger' in opts ? opts.showSemanticsDebugger : false;
    if (showSemanticsDebugger == null) dart.nullFailed(I[2], 44, 10, "showSemanticsDebugger");
    let debugShowCheckedModeBanner = opts && 'debugShowCheckedModeBanner' in opts ? opts.debugShowCheckedModeBanner : true;
    if (debugShowCheckedModeBanner == null) dart.nullFailed(I[2], 45, 10, "debugShowCheckedModeBanner");
    let shortcuts = opts && 'shortcuts' in opts ? opts.shortcuts : null;
    let smartManagement = opts && 'smartManagement' in opts ? opts.smartManagement : C[5] || CT.C5;
    if (smartManagement == null) dart.nullFailed(I[2], 47, 10, "smartManagement");
    let initialBinding = opts && 'initialBinding' in opts ? opts.initialBinding : null;
    let unknownRoute = opts && 'unknownRoute' in opts ? opts.unknownRoute : null;
    let routingCallback = opts && 'routingCallback' in opts ? opts.routingCallback : null;
    let defaultTransition = opts && 'defaultTransition' in opts ? opts.defaultTransition : null;
    let onReady = opts && 'onReady' in opts ? opts.onReady : null;
    let getPages = opts && 'getPages' in opts ? opts.getPages : null;
    let opaqueRoute = opts && 'opaqueRoute' in opts ? opts.opaqueRoute : null;
    let enableLog = opts && 'enableLog' in opts ? opts.enableLog : null;
    let logWriterCallback = opts && 'logWriterCallback' in opts ? opts.logWriterCallback : null;
    let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
    let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
    let defaultGlobalState = opts && 'defaultGlobalState' in opts ? opts.defaultGlobalState : null;
    let highContrastTheme = opts && 'highContrastTheme' in opts ? opts.highContrastTheme : null;
    let highContrastDarkTheme = opts && 'highContrastDarkTheme' in opts ? opts.highContrastDarkTheme : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[theme$1] = theme;
    this[navigatorKey$0] = navigatorKey;
    this[home$0] = home;
    this[routes$0] = routes;
    this[initialRoute$0] = initialRoute;
    this[onGenerateRoute$0] = onGenerateRoute;
    this[onGenerateInitialRoutes$0] = onGenerateInitialRoutes;
    this[onUnknownRoute$0] = onUnknownRoute;
    this[navigatorObservers$0] = navigatorObservers;
    this[builder$0] = builder;
    this[translationsKeys$0] = translationsKeys;
    this[translations$0] = translations;
    this[textDirection$0] = textDirection;
    this[title$0] = title;
    this[onGenerateTitle$0] = onGenerateTitle;
    this[color$0] = color;
    this[customTransition$0] = customTransition;
    this[onInit$0] = onInit;
    this[onDispose$0] = onDispose;
    this[locale$0] = locale;
    this[fallbackLocale$0] = fallbackLocale;
    this[localizationsDelegates$0] = localizationsDelegates;
    this[localeListResolutionCallback$0] = localeListResolutionCallback;
    this[localeResolutionCallback$0] = localeResolutionCallback;
    this[supportedLocales$0] = supportedLocales;
    this[showPerformanceOverlay$0] = showPerformanceOverlay;
    this[checkerboardRasterCacheImages$0] = checkerboardRasterCacheImages;
    this[checkerboardOffscreenLayers$0] = checkerboardOffscreenLayers;
    this[showSemanticsDebugger$0] = showSemanticsDebugger;
    this[debugShowCheckedModeBanner$0] = debugShowCheckedModeBanner;
    this[shortcuts$0] = shortcuts;
    this[smartManagement$0] = smartManagement;
    this[initialBinding$0] = initialBinding;
    this[unknownRoute$0] = unknownRoute;
    this[routingCallback$0] = routingCallback;
    this[defaultTransition$0] = defaultTransition;
    this[onReady$0] = onReady;
    this[getPages$0] = getPages;
    this[opaqueRoute$0] = opaqueRoute;
    this[enableLog$0] = enableLog;
    this[logWriterCallback$0] = logWriterCallback;
    this[popGesture$0] = popGesture;
    this[transitionDuration$0] = transitionDuration;
    this[defaultGlobalState$0] = defaultGlobalState;
    this[highContrastTheme$0] = highContrastTheme;
    this[highContrastDarkTheme$0] = highContrastDarkTheme;
    this[actions$0] = actions;
    this[routeInformationProvider$0] = null;
    this[routeInformationParser$0] = null;
    this[routerDelegate$0] = null;
    this[backButtonDispatcher$0] = null;
    get_cupertino_app.GetCupertinoApp.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = get_cupertino_app.GetCupertinoApp.prototype;
  (get_cupertino_app.GetCupertinoApp.router = function(opts) {
    let t0, t1, t1$, t0$;
    let key = opts && 'key' in opts ? opts.key : null;
    let theme = opts && 'theme' in opts ? opts.theme : null;
    let routeInformationProvider = opts && 'routeInformationProvider' in opts ? opts.routeInformationProvider : null;
    let routeInformationParser = opts && 'routeInformationParser' in opts ? opts.routeInformationParser : null;
    let routerDelegate = opts && 'routerDelegate' in opts ? opts.routerDelegate : null;
    let backButtonDispatcher = opts && 'backButtonDispatcher' in opts ? opts.backButtonDispatcher : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let title = opts && 'title' in opts ? opts.title : "";
    if (title == null) dart.nullFailed(I[2], 129, 10, "title");
    let onGenerateTitle = opts && 'onGenerateTitle' in opts ? opts.onGenerateTitle : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let highContrastTheme = opts && 'highContrastTheme' in opts ? opts.highContrastTheme : null;
    let highContrastDarkTheme = opts && 'highContrastDarkTheme' in opts ? opts.highContrastDarkTheme : null;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let localizationsDelegates = opts && 'localizationsDelegates' in opts ? opts.localizationsDelegates : null;
    let localeListResolutionCallback = opts && 'localeListResolutionCallback' in opts ? opts.localeListResolutionCallback : null;
    let localeResolutionCallback = opts && 'localeResolutionCallback' in opts ? opts.localeResolutionCallback : null;
    let supportedLocales = opts && 'supportedLocales' in opts ? opts.supportedLocales : C[3] || CT.C3;
    if (supportedLocales == null) dart.nullFailed(I[2], 138, 10, "supportedLocales");
    let showPerformanceOverlay = opts && 'showPerformanceOverlay' in opts ? opts.showPerformanceOverlay : false;
    if (showPerformanceOverlay == null) dart.nullFailed(I[2], 139, 10, "showPerformanceOverlay");
    let checkerboardRasterCacheImages = opts && 'checkerboardRasterCacheImages' in opts ? opts.checkerboardRasterCacheImages : false;
    if (checkerboardRasterCacheImages == null) dart.nullFailed(I[2], 140, 10, "checkerboardRasterCacheImages");
    let checkerboardOffscreenLayers = opts && 'checkerboardOffscreenLayers' in opts ? opts.checkerboardOffscreenLayers : false;
    if (checkerboardOffscreenLayers == null) dart.nullFailed(I[2], 141, 10, "checkerboardOffscreenLayers");
    let showSemanticsDebugger = opts && 'showSemanticsDebugger' in opts ? opts.showSemanticsDebugger : false;
    if (showSemanticsDebugger == null) dart.nullFailed(I[2], 142, 10, "showSemanticsDebugger");
    let debugShowCheckedModeBanner = opts && 'debugShowCheckedModeBanner' in opts ? opts.debugShowCheckedModeBanner : true;
    if (debugShowCheckedModeBanner == null) dart.nullFailed(I[2], 143, 10, "debugShowCheckedModeBanner");
    let shortcuts = opts && 'shortcuts' in opts ? opts.shortcuts : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
    let translationsKeys = opts && 'translationsKeys' in opts ? opts.translationsKeys : null;
    let translations = opts && 'translations' in opts ? opts.translations : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let fallbackLocale = opts && 'fallbackLocale' in opts ? opts.fallbackLocale : null;
    let routingCallback = opts && 'routingCallback' in opts ? opts.routingCallback : null;
    let defaultTransition = opts && 'defaultTransition' in opts ? opts.defaultTransition : null;
    let opaqueRoute = opts && 'opaqueRoute' in opts ? opts.opaqueRoute : null;
    let onInit = opts && 'onInit' in opts ? opts.onInit : null;
    let onReady = opts && 'onReady' in opts ? opts.onReady : null;
    let onDispose = opts && 'onDispose' in opts ? opts.onDispose : null;
    let enableLog = opts && 'enableLog' in opts ? opts.enableLog : null;
    let logWriterCallback = opts && 'logWriterCallback' in opts ? opts.logWriterCallback : null;
    let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
    let smartManagement = opts && 'smartManagement' in opts ? opts.smartManagement : C[5] || CT.C5;
    if (smartManagement == null) dart.nullFailed(I[2], 160, 10, "smartManagement");
    let initialBinding = opts && 'initialBinding' in opts ? opts.initialBinding : null;
    let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
    let defaultGlobalState = opts && 'defaultGlobalState' in opts ? opts.defaultGlobalState : null;
    let getPages = opts && 'getPages' in opts ? opts.getPages : null;
    let unknownRoute = opts && 'unknownRoute' in opts ? opts.unknownRoute : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[theme$1] = theme;
    this[routeInformationProvider$0] = routeInformationProvider;
    this[backButtonDispatcher$0] = backButtonDispatcher;
    this[builder$0] = builder;
    this[title$0] = title;
    this[onGenerateTitle$0] = onGenerateTitle;
    this[color$0] = color;
    this[highContrastTheme$0] = highContrastTheme;
    this[highContrastDarkTheme$0] = highContrastDarkTheme;
    this[locale$0] = locale;
    this[localizationsDelegates$0] = localizationsDelegates;
    this[localeListResolutionCallback$0] = localeListResolutionCallback;
    this[localeResolutionCallback$0] = localeResolutionCallback;
    this[supportedLocales$0] = supportedLocales;
    this[showPerformanceOverlay$0] = showPerformanceOverlay;
    this[checkerboardRasterCacheImages$0] = checkerboardRasterCacheImages;
    this[checkerboardOffscreenLayers$0] = checkerboardOffscreenLayers;
    this[showSemanticsDebugger$0] = showSemanticsDebugger;
    this[debugShowCheckedModeBanner$0] = debugShowCheckedModeBanner;
    this[shortcuts$0] = shortcuts;
    this[actions$0] = actions;
    this[customTransition$0] = customTransition;
    this[translationsKeys$0] = translationsKeys;
    this[translations$0] = translations;
    this[textDirection$0] = textDirection;
    this[fallbackLocale$0] = fallbackLocale;
    this[routingCallback$0] = routingCallback;
    this[defaultTransition$0] = defaultTransition;
    this[opaqueRoute$0] = opaqueRoute;
    this[onInit$0] = onInit;
    this[onReady$0] = onReady;
    this[onDispose$0] = onDispose;
    this[enableLog$0] = enableLog;
    this[logWriterCallback$0] = logWriterCallback;
    this[popGesture$0] = popGesture;
    this[smartManagement$0] = smartManagement;
    this[initialBinding$0] = initialBinding;
    this[transitionDuration$0] = transitionDuration;
    this[defaultGlobalState$0] = defaultGlobalState;
    this[getPages$0] = getPages;
    this[unknownRoute$0] = unknownRoute;
    this[routerDelegate$0] = (t0 = routerDelegate, t0 == null ? routerDelegate = extension_navigation['NavTwoExt|createDelegate'](get_main.Get, {notFoundRoute: unknownRoute}) : t0);
    this[routeInformationParser$0] = (t0$ = routeInformationParser, t0$ == null ? routeInformationParser = extension_navigation['NavTwoExt|createInformationParser'](get_main.Get, {initialRoute: (t1$ = (t1 = getPages, t1 == null ? null : t1[$first].name), t1$ == null ? "/" : t1$)}) : t0$);
    this[navigatorObservers$0] = null;
    this[navigatorKey$0] = null;
    this[onGenerateRoute$0] = null;
    this[home$0] = null;
    this[onGenerateInitialRoutes$0] = null;
    this[onUnknownRoute$0] = null;
    this[routes$0] = null;
    this[initialRoute$0] = null;
    get_cupertino_app.GetCupertinoApp.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    get_main.Get.routerDelegate = routerDelegate;
    get_main.Get.routeInformationParser = routeInformationParser;
  }).prototype = get_cupertino_app.GetCupertinoApp.prototype;
  dart.addTypeTests(get_cupertino_app.GetCupertinoApp);
  dart.addTypeCaches(get_cupertino_app.GetCupertinoApp);
  dart.setMethodSignature(get_cupertino_app.GetCupertinoApp, () => ({
    __proto__: dart.getMethods(get_cupertino_app.GetCupertinoApp.__proto__),
    generator: dart.fnType(navigator.Route, [navigator.RouteSettings]),
    initialRoutesGenerate: dart.fnType(core.List$(navigator.Route), [core.String]),
    defaultBuilder: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(get_cupertino_app.GetCupertinoApp, I[3]);
  dart.setFieldSignature(get_cupertino_app.GetCupertinoApp, () => ({
    __proto__: dart.getFields(get_cupertino_app.GetCupertinoApp.__proto__),
    navigatorKey: dart.finalFieldType(dart.nullable(framework.GlobalKey$(navigator.NavigatorState))),
    home: dart.finalFieldType(dart.nullable(framework.Widget)),
    routes: dart.finalFieldType(dart.nullable(core.Map$(core.String, dart.fnType(framework.Widget, [framework.BuildContext])))),
    initialRoute: dart.finalFieldType(dart.nullable(core.String)),
    onGenerateRoute: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(navigator.Route), [navigator.RouteSettings]))),
    onGenerateInitialRoutes: dart.finalFieldType(dart.nullable(dart.fnType(core.List$(navigator.Route), [core.String]))),
    onUnknownRoute: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(navigator.Route), [navigator.RouteSettings]))),
    navigatorObservers: dart.finalFieldType(dart.nullable(core.List$(navigator.NavigatorObserver))),
    builder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]))),
    title: dart.finalFieldType(core.String),
    onGenerateTitle: dart.finalFieldType(dart.nullable(dart.fnType(core.String, [framework.BuildContext]))),
    customTransition: dart.finalFieldType(dart.nullable(custom_transition.CustomTransition)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    translationsKeys: dart.finalFieldType(dart.nullable(core.Map$(core.String, core.Map$(core.String, core.String)))),
    translations: dart.finalFieldType(dart.nullable(internacionalization.Translations)),
    textDirection: dart.finalFieldType(dart.nullable(ui.TextDirection)),
    locale: dart.finalFieldType(dart.nullable(ui.Locale)),
    fallbackLocale: dart.finalFieldType(dart.nullable(ui.Locale)),
    localizationsDelegates: dart.finalFieldType(dart.nullable(core.Iterable$(localizations.LocalizationsDelegate))),
    localeListResolutionCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(ui.Locale), [dart.nullable(core.List$(ui.Locale)), core.Iterable$(ui.Locale)]))),
    localeResolutionCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(ui.Locale), [dart.nullable(ui.Locale), core.Iterable$(ui.Locale)]))),
    supportedLocales: dart.finalFieldType(core.Iterable$(ui.Locale)),
    showPerformanceOverlay: dart.finalFieldType(core.bool),
    checkerboardRasterCacheImages: dart.finalFieldType(core.bool),
    checkerboardOffscreenLayers: dart.finalFieldType(core.bool),
    showSemanticsDebugger: dart.finalFieldType(core.bool),
    debugShowCheckedModeBanner: dart.finalFieldType(core.bool),
    shortcuts: dart.finalFieldType(dart.nullable(core.Map$(shortcuts.LogicalKeySet, actions.Intent))),
    highContrastTheme: dart.finalFieldType(dart.nullable(theme_data.ThemeData)),
    highContrastDarkTheme: dart.finalFieldType(dart.nullable(theme_data.ThemeData)),
    actions: dart.finalFieldType(dart.nullable(core.Map$(core.Type, actions.Action$(actions.Intent)))),
    routingCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.dynamic, [dart.nullable(route_observer.Routing)]))),
    defaultTransition: dart.finalFieldType(dart.nullable(transitions_type.Transition)),
    opaqueRoute: dart.finalFieldType(dart.nullable(core.bool)),
    onInit: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onReady: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onDispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    enableLog: dart.finalFieldType(dart.nullable(core.bool)),
    logWriterCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.String], {isError: core.bool}, {}))),
    popGesture: dart.finalFieldType(dart.nullable(core.bool)),
    smartManagement: dart.finalFieldType(smart_management.SmartManagement),
    initialBinding: dart.finalFieldType(dart.nullable(bindings_interface.Bindings)),
    transitionDuration: dart.finalFieldType(dart.nullable(core.Duration)),
    defaultGlobalState: dart.finalFieldType(dart.nullable(core.bool)),
    getPages: dart.finalFieldType(dart.nullable(core.List$(get_route.GetPage))),
    unknownRoute: dart.finalFieldType(dart.nullable(get_route.GetPage)),
    routeInformationProvider: dart.finalFieldType(dart.nullable(router.RouteInformationProvider)),
    routeInformationParser: dart.finalFieldType(dart.nullable(router.RouteInformationParser$(core.Object))),
    routerDelegate: dart.finalFieldType(dart.nullable(router.RouterDelegate$(core.Object))),
    backButtonDispatcher: dart.finalFieldType(dart.nullable(router.BackButtonDispatcher)),
    theme: dart.finalFieldType(dart.nullable(theme.CupertinoThemeData))
  }));
  var routerDelegate = dart.privateName(router_outlet, "RouterOutlet.routerDelegate");
  var builder$1 = dart.privateName(router_outlet, "RouterOutlet.builder");
  const _is_RouterOutlet_default = Symbol('_is_RouterOutlet_default');
  router_outlet.RouterOutlet$ = dart.generic((TDelegate, T) => {
    var BuildContextAndTDelegateAndTNToWidget = () => (BuildContextAndTDelegateAndTNToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, TDelegate, TN()])))();
    var _RouterOutletStateOfTDelegate$T = () => (_RouterOutletStateOfTDelegate$T = dart.constFn(router_outlet._RouterOutletState$(TDelegate, T)))();
    var TN = () => (TN = dart.constFn(dart.nullable(T)))();
    class RouterOutlet extends framework.StatefulWidget {
      get routerDelegate() {
        return this[routerDelegate];
      }
      set routerDelegate(value) {
        super.routerDelegate = value;
      }
      get builder() {
        return this[builder$1];
      }
      set builder(value) {
        super.builder = value;
      }
      createState() {
        return new (_RouterOutletStateOfTDelegate$T()).new();
      }
    }
    (RouterOutlet.builder = function(opts) {
      let t0;
      let delegate = opts && 'delegate' in opts ? opts.delegate : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      if (builder == null) dart.nullFailed(I[4], 18, 19, "builder");
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[builder$1] = builder;
      this[routerDelegate] = (t0 = delegate, t0 == null ? dart.nullCheck(extension_navigation['NavTwoExt|delegate'](TDelegate, T, get_main.Get)) : t0);
      RouterOutlet.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = RouterOutlet.prototype;
    (RouterOutlet.new = function(opts) {
      let delegate = opts && 'delegate' in opts ? opts.delegate : null;
      let pickPages = opts && 'pickPages' in opts ? opts.pickPages : null;
      if (pickPages == null) dart.nullFailed(I[4], 24, 60, "pickPages");
      let pageBuilder = opts && 'pageBuilder' in opts ? opts.pageBuilder : null;
      if (pageBuilder == null) dart.nullFailed(I[4], 30, 9, "pageBuilder");
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      RouterOutlet.builder.call(this, {builder: dart.fn((context, rDelegate, currentConfig) => {
          let t0;
          if (context == null) dart.nullFailed(I[4], 32, 21, "context");
          if (rDelegate == null) dart.nullFailed(I[4], 32, 30, "rDelegate");
          let picked = currentConfig == null ? null : pickPages(currentConfig);
          if ((t0 = picked, t0 == null ? null : t0[$length]) === 0) {
            picked = null;
          }
          return pageBuilder(context, rDelegate, picked);
        }, BuildContextAndTDelegateAndTNToWidget()), delegate: delegate, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    }).prototype = RouterOutlet.prototype;
    dart.addTypeTests(RouterOutlet);
    RouterOutlet.prototype[_is_RouterOutlet_default] = true;
    dart.addTypeCaches(RouterOutlet);
    dart.setMethodSignature(RouterOutlet, () => ({
      __proto__: dart.getMethods(RouterOutlet.__proto__),
      createState: dart.fnType(router_outlet._RouterOutletState$(TDelegate, T), [])
    }));
    dart.setLibraryUri(RouterOutlet, I[5]);
    dart.setFieldSignature(RouterOutlet, () => ({
      __proto__: dart.getFields(RouterOutlet.__proto__),
      routerDelegate: dart.finalFieldType(TDelegate),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, TDelegate, dart.nullable(T)]))
    }));
    return RouterOutlet;
  });
  router_outlet.RouterOutlet = router_outlet.RouterOutlet$();
  dart.addTypeTests(router_outlet.RouterOutlet, _is_RouterOutlet_default);
  var currentRoute = dart.privateName(router_outlet, "_RouterOutletState.currentRoute");
  var _getCurrentRoute = dart.privateName(router_outlet, "_getCurrentRoute");
  const _is__RouterOutletState_default = Symbol('_is__RouterOutletState_default');
  router_outlet._RouterOutletState$ = dart.generic((TDelegate, T) => {
    var BuildContextAndTDelegateAndTNToWidget = () => (BuildContextAndTDelegateAndTNToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, TDelegate, TN()])))();
    var TN = () => (TN = dart.constFn(dart.nullable(T)))();
    class _RouterOutletState extends framework.State$(router_outlet.RouterOutlet$(TDelegate, T)) {
      get currentRoute() {
        return this[currentRoute];
      }
      set currentRoute(value) {
        this[currentRoute] = TN().as(value);
      }
      get delegate() {
        return this.widget.routerDelegate;
      }
      initState() {
        super.initState();
        this[_getCurrentRoute]();
        this.delegate.addListener(dart.bind(this, 'onRouterDelegateChanged'));
      }
      dispose() {
        this.delegate.removeListener(dart.bind(this, 'onRouterDelegateChanged'));
        super.dispose();
      }
      [_getCurrentRoute]() {
        this.currentRoute = this.delegate.currentConfiguration;
      }
      onRouterDelegateChanged() {
        this.setState(dart.bind(this, _getCurrentRoute));
      }
      build(context) {
        let t3, t2, t1, t0;
        if (context == null) dart.nullFailed(I[4], 73, 29, "context");
        t0 = this.widget;
        t1 = context;
        t2 = this.delegate;
        t3 = this.currentRoute;
        return BuildContextAndTDelegateAndTNToWidget().as(t0.builder)(t1, t2, t3);
      }
    }
    (_RouterOutletState.new = function() {
      this[currentRoute] = null;
      _RouterOutletState.__proto__.new.call(this);
      ;
    }).prototype = _RouterOutletState.prototype;
    dart.addTypeTests(_RouterOutletState);
    _RouterOutletState.prototype[_is__RouterOutletState_default] = true;
    dart.addTypeCaches(_RouterOutletState);
    dart.setMethodSignature(_RouterOutletState, () => ({
      __proto__: dart.getMethods(_RouterOutletState.__proto__),
      [_getCurrentRoute]: dart.fnType(dart.void, []),
      onRouterDelegateChanged: dart.fnType(dart.void, []),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setGetterSignature(_RouterOutletState, () => ({
      __proto__: dart.getGetters(_RouterOutletState.__proto__),
      delegate: TDelegate
    }));
    dart.setLibraryUri(_RouterOutletState, I[5]);
    dart.setFieldSignature(_RouterOutletState, () => ({
      __proto__: dart.getFields(_RouterOutletState.__proto__),
      currentRoute: dart.fieldType(dart.nullable(T))
    }));
    return _RouterOutletState;
  });
  router_outlet._RouterOutletState = router_outlet._RouterOutletState$();
  dart.addTypeTests(router_outlet._RouterOutletState, _is__RouterOutletState_default);
  var history = dart.privateName(get_router_delegate, "GetDelegate.history");
  var backButtonPopMode$ = dart.privateName(get_router_delegate, "GetDelegate.backButtonPopMode");
  var preventDuplicateHandlingMode$ = dart.privateName(get_router_delegate, "GetDelegate.preventDuplicateHandlingMode");
  var notFoundRoute$ = dart.privateName(get_router_delegate, "GetDelegate.notFoundRoute");
  var navigatorObservers$1 = dart.privateName(get_router_delegate, "GetDelegate.navigatorObservers");
  var transitionDelegate$ = dart.privateName(get_router_delegate, "GetDelegate.transitionDelegate");
  var _name$0 = dart.privateName(get_router_delegate, "_name");
  var _allCompleters = dart.privateName(get_router_delegate, "_allCompleters");
  var _unsafeHistoryAdd = dart.privateName(get_router_delegate, "_unsafeHistoryAdd");
  var _unsafeHistoryRemoveAt = dart.privateName(get_router_delegate, "_unsafeHistoryRemoveAt");
  var _unsafeHistoryRemove = dart.privateName(get_router_delegate, "_unsafeHistoryRemove");
  var _pushHistory = dart.privateName(get_router_delegate, "_pushHistory");
  var _removeHistoryEntry = dart.privateName(get_router_delegate, "_removeHistoryEntry");
  var _canPopHistory = dart.privateName(get_router_delegate, "_canPopHistory");
  var _doPopHistory = dart.privateName(get_router_delegate, "_doPopHistory");
  var _popHistory = dart.privateName(get_router_delegate, "_popHistory");
  var _canPopPage = dart.privateName(get_router_delegate, "_canPopPage");
  var _doPopPage = dart.privateName(get_router_delegate, "_doPopPage");
  var _popPage = dart.privateName(get_router_delegate, "_popPage");
  var _pop = dart.privateName(get_router_delegate, "_pop");
  var _canPop = dart.privateName(get_router_delegate, "_canPop");
  var _onPopVisualRoute = dart.privateName(get_router_delegate, "_onPopVisualRoute");
  var currentTreeBranch$ = dart.privateName(get_nav_config, "GetNavConfig.currentTreeBranch");
  get_nav_config.GetNavConfig = class GetNavConfig extends router.RouteInformation {
    get currentTreeBranch() {
      return this[currentTreeBranch$];
    }
    set currentTreeBranch(value) {
      super.currentTreeBranch = value;
    }
    get currentPage() {
      return this.currentTreeBranch[$last];
    }
    copyWith(opts) {
      let t3, t3$, t3$0;
      let currentTreeBranch = opts && 'currentTreeBranch' in opts ? opts.currentTreeBranch : null;
      let location = opts && 'location' in opts ? opts.location : null;
      let state = opts && 'state' in opts ? opts.state : null;
      return new get_nav_config.GetNavConfig.new({currentTreeBranch: (t3 = currentTreeBranch, t3 == null ? this.currentTreeBranch : t3), location: (t3$ = location, t3$ == null ? this.location : t3$), state: (t3$0 = state, t3$0 == null ? this.state : t3$0)});
    }
    static fromRoute(route) {
      if (route == null) dart.nullFailed(I[7], 47, 41, "route");
      let res = extension_navigation['NavTwoExt|get#routeTree'](get_main.Get).matchRoute(route);
      if (dart.test(res.treeBranch[$isEmpty])) return null;
      return new get_nav_config.GetNavConfig.new({currentTreeBranch: res.treeBranch, location: route, state: null});
    }
    toString() {
      return "======GetNavConfig=====\ncurrentTreeBranch: " + dart.str(this.currentTreeBranch) + "\ncurrentPage: " + dart.str(this.currentPage) + "\n======GetNavConfig=====";
    }
  };
  (get_nav_config.GetNavConfig.new = function(opts) {
    let currentTreeBranch = opts && 'currentTreeBranch' in opts ? opts.currentTreeBranch : null;
    if (currentTreeBranch == null) dart.nullFailed(I[7], 27, 19, "currentTreeBranch");
    let location = opts && 'location' in opts ? opts.location : null;
    let state = opts && 'state' in opts ? opts.state : null;
    this[currentTreeBranch$] = currentTreeBranch;
    get_nav_config.GetNavConfig.__proto__.new.call(this, {location: location, state: state});
    ;
  }).prototype = get_nav_config.GetNavConfig.prototype;
  dart.addTypeTests(get_nav_config.GetNavConfig);
  dart.addTypeCaches(get_nav_config.GetNavConfig);
  dart.setMethodSignature(get_nav_config.GetNavConfig, () => ({
    __proto__: dart.getMethods(get_nav_config.GetNavConfig.__proto__),
    copyWith: dart.fnType(get_nav_config.GetNavConfig, [], {currentTreeBranch: dart.nullable(core.List$(get_route.GetPage))}, {location: dart.nullable(core.String), state: dart.nullable(core.Object)})
  }));
  dart.setGetterSignature(get_nav_config.GetNavConfig, () => ({
    __proto__: dart.getGetters(get_nav_config.GetNavConfig.__proto__),
    currentPage: dart.nullable(get_route.GetPage)
  }));
  dart.setLibraryUri(get_nav_config.GetNavConfig, I[8]);
  dart.setFieldSignature(get_nav_config.GetNavConfig, () => ({
    __proto__: dart.getFields(get_nav_config.GetNavConfig.__proto__),
    currentTreeBranch: dart.finalFieldType(core.List$(get_route.GetPage))
  }));
  dart.defineExtensionMethods(get_nav_config.GetNavConfig, ['toString']);
  const RouterDelegate_ListenableMixin$36 = class RouterDelegate_ListenableMixin extends router.RouterDelegate$(get_nav_config.GetNavConfig) {};
  (RouterDelegate_ListenableMixin$36.new = function() {
    RouterDelegate_ListenableMixin$36.__proto__.new.call(this);
  }).prototype = RouterDelegate_ListenableMixin$36.prototype;
  dart.applyMixin(RouterDelegate_ListenableMixin$36, list_notifier.ListenableMixin);
  const RouterDelegate_ListNotifierMixin$36 = class RouterDelegate_ListNotifierMixin extends RouterDelegate_ListenableMixin$36 {};
  (RouterDelegate_ListNotifierMixin$36.new = function() {
    list_notifier.ListNotifierMixin[dart.mixinNew].call(this);
    RouterDelegate_ListNotifierMixin$36.__proto__.new.call(this);
  }).prototype = RouterDelegate_ListNotifierMixin$36.prototype;
  dart.applyMixin(RouterDelegate_ListNotifierMixin$36, list_notifier.ListNotifierMixin);
  get_router_delegate.GetDelegate = class GetDelegate extends RouterDelegate_ListNotifierMixin$36 {
    get history() {
      return this[history];
    }
    set history(value) {
      super.history = value;
    }
    get backButtonPopMode() {
      return this[backButtonPopMode$];
    }
    set backButtonPopMode(value) {
      super.backButtonPopMode = value;
    }
    get preventDuplicateHandlingMode() {
      return this[preventDuplicateHandlingMode$];
    }
    set preventDuplicateHandlingMode(value) {
      super.preventDuplicateHandlingMode = value;
    }
    get notFoundRoute() {
      return this[notFoundRoute$];
    }
    set notFoundRoute(value) {
      super.notFoundRoute = value;
    }
    get navigatorObservers() {
      return this[navigatorObservers$1];
    }
    set navigatorObservers(value) {
      super.navigatorObservers = value;
    }
    get transitionDelegate() {
      return this[transitionDelegate$];
    }
    set transitionDelegate(value) {
      super.transitionDelegate = value;
    }
    get navigatorKey() {
      return extension_navigation['GetNavigation|get#key'](get_main.Get);
    }
    runMiddleware(config) {
      if (config == null) dart.nullFailed(I[6], 79, 52, "config");
      return async.async(T$.GetNavConfigN(), function* runMiddleware() {
        let middlewares = config.currentTreeBranch[$last].middlewares;
        if (middlewares == null) {
          return config;
        }
        let iterator = config;
        for (let item of middlewares) {
          let redirectRes = (yield item.redirectDelegate(iterator));
          if (redirectRes == null) return null;
          iterator = redirectRes;
        }
        return iterator;
      });
    }
    [_unsafeHistoryAdd](config) {
      if (config == null) dart.nullFailed(I[6], 93, 47, "config");
      return async.async(dart.void, (function* _unsafeHistoryAdd() {
        let res = (yield this.runMiddleware(config));
        if (res == null) return;
        this.history[$add](res);
      }).bind(this));
    }
    [_unsafeHistoryRemove](config) {
      if (config == null) dart.nullFailed(I[6], 99, 50, "config");
      return async.async(dart.void, (function* _unsafeHistoryRemove() {
        let index = this.history[$indexOf](config);
        if (dart.notNull(index) >= 0) yield this[_unsafeHistoryRemoveAt](index);
      }).bind(this));
    }
    [_unsafeHistoryRemoveAt](index) {
      if (index == null) dart.nullFailed(I[6], 104, 52, "index");
      return async.async(T$.GetNavConfigN(), (function* _unsafeHistoryRemoveAt() {
        if (index === dart.notNull(this.history[$length]) - 1 && dart.notNull(this.history[$length]) > 1) {
          let toCheck = this.history[$_get](dart.notNull(this.history[$length]) - 2);
          let resMiddleware = (yield this.runMiddleware(toCheck));
          if (resMiddleware == null) return null;
          this.history[$_set](dart.notNull(this.history[$length]) - 2, resMiddleware);
        }
        return this.history[$removeAt](index);
      }).bind(this));
    }
    arguments(T) {
      let t3, t2;
      return T.as((t2 = this.currentConfiguration, t2 == null ? null : (t3 = t2.currentPage, t3 == null ? null : t3.arguments)));
    }
    get parameters() {
      let t3, t2, t2$;
      t2$ = (t2 = this.currentConfiguration, t2 == null ? null : (t3 = t2.currentPage, t3 == null ? null : t3.parameters));
      return t2$ == null ? new (T$.IdentityMapOfString$String()).new() : t2$;
    }
    pushHistory(config, opts) {
      if (config == null) dart.nullFailed(I[6], 129, 18, "config");
      let rebuildStack = opts && 'rebuildStack' in opts ? opts.rebuildStack : true;
      if (rebuildStack == null) dart.nullFailed(I[6], 130, 10, "rebuildStack");
      return async.async(dart.void, (function* pushHistory() {
        yield this[_pushHistory](config);
        if (dart.test(rebuildStack)) {
          this.refresh();
        }
      }).bind(this));
    }
    [_removeHistoryEntry](entry) {
      if (entry == null) dart.nullFailed(I[6], 139, 49, "entry");
      return async.async(dart.void, (function* _removeHistoryEntry() {
        yield this[_unsafeHistoryRemove](entry);
      }).bind(this));
    }
    [_pushHistory](config) {
      if (config == null) dart.nullFailed(I[6], 143, 42, "config");
      return async.async(dart.void, (function* _pushHistory() {
        if (dart.test(dart.nullCheck(config.currentPage).preventDuplicates)) {
          let originalEntryIndex = this.history[$indexWhere](dart.fn(element => {
            if (element == null) dart.nullFailed(I[6], 146, 31, "element");
            return element.location == config.location;
          }, T$.GetNavConfigTobool()));
          if (dart.notNull(originalEntryIndex) >= 0) {
            switch (this.preventDuplicateHandlingMode) {
              case C[155] || CT.C155:
              {
                yield this.backUntil(dart.nullCheck(config.location), {popMode: get_router_delegate.PopMode.Page});
                break;
              }
              case C[148] || CT.C148:
              {
                yield this[_unsafeHistoryRemoveAt](originalEntryIndex);
                yield this[_unsafeHistoryAdd](config);
                break;
              }
              case C[156] || CT.C156:
              default:
              {
                break;
              }
            }
            return;
          }
        }
        yield this[_unsafeHistoryAdd](config);
      }).bind(this));
    }
    [_popHistory]() {
      return async.async(T$.GetNavConfigN(), (function* _popHistory() {
        if (!dart.test(this[_canPopHistory]())) return null;
        return yield this[_doPopHistory]();
      }).bind(this));
    }
    [_doPopHistory]() {
      return async.async(T$.GetNavConfigN(), (function* _doPopHistory() {
        return yield this[_unsafeHistoryRemoveAt](dart.notNull(this.history[$length]) - 1);
      }).bind(this));
    }
    [_popPage]() {
      return async.async(T$.GetNavConfigN(), (function* _popPage() {
        if (!dart.test(this[_canPopPage]())) return null;
        return yield this[_doPopPage]();
      }).bind(this));
    }
    [_pop](mode) {
      if (mode == null) dart.nullFailed(I[6], 185, 38, "mode");
      return async.async(T$.GetNavConfigN(), (function* _pop() {
        switch (mode) {
          case C[147] || CT.C147:
          {
            return yield this[_popHistory]();
          }
          case C[157] || CT.C157:
          {
            return yield this[_popPage]();
          }
          default:
          {
            return null;
          }
        }
      }).bind(this));
    }
    [_doPopPage]() {
      return async.async(T$.GetNavConfigN(), (function* _doPopPage() {
        let t2;
        let currentBranch = (t2 = this.currentConfiguration, t2 == null ? null : t2.currentTreeBranch);
        if (currentBranch != null && dart.notNull(currentBranch[$length]) > 1) {
          let remaining = currentBranch[$take](dart.notNull(currentBranch[$length]) - 1);
          let prevHistoryEntry = dart.notNull(this.history[$length]) > 1 ? this.history[$_get](dart.notNull(this.history[$length]) - 2) : null;
          if (prevHistoryEntry != null) {
            let newLocation = remaining[$last].name;
            let prevLocation = prevHistoryEntry.location;
            if (newLocation == prevLocation) {
              return yield this[_popHistory]();
            }
          }
          let res = (yield this[_popHistory]());
          yield this[_pushHistory](new get_nav_config.GetNavConfig.new({currentTreeBranch: remaining[$toList](), location: remaining[$last].name, state: null}));
          return res;
        } else {
          return yield this[_popHistory]();
        }
      }).bind(this));
    }
    popHistory() {
      return async.async(T$.GetNavConfigN(), (function* popHistory() {
        return yield this[_popHistory]();
      }).bind(this));
    }
    [_canPopHistory]() {
      return dart.notNull(this.history[$length]) > 1;
    }
    canPopHistory() {
      return new (T$.SynchronousFutureOfbool()).new(this[_canPopHistory]());
    }
    [_canPopPage]() {
      let t2;
      let currentTreeBranch = (t2 = this.currentConfiguration, t2 == null ? null : t2.currentTreeBranch);
      if (currentTreeBranch == null) return false;
      return dart.notNull(currentTreeBranch[$length]) > 1 ? true : this[_canPopHistory]();
    }
    canPopPage() {
      return new (T$.SynchronousFutureOfbool()).new(this[_canPopPage]());
    }
    [_canPop](mode) {
      if (mode == null) dart.nullFailed(I[6], 254, 24, "mode");
      switch (mode) {
        case C[147] || CT.C147:
        {
          return this[_canPopHistory]();
        }
        case C[157] || CT.C157:
        default:
        {
          return this[_canPopPage]();
        }
      }
    }
    getVisualPages() {
      let currentHistory = this.currentConfiguration;
      if (currentHistory == null) return T$.JSArrayOfGetPage().of([]);
      let res = currentHistory.currentTreeBranch[$where](dart.fn(r => {
        if (r == null) dart.nullFailed(I[6], 272, 17, "r");
        return r.participatesInRootNavigator != null;
      }, T$.GetPageTobool()));
      if (res[$length] === 0) {
        return this.history[$map](get_route.GetPage, dart.fn(e => {
          if (e == null) dart.nullFailed(I[6], 275, 27, "e");
          return dart.nullCheck(e.currentPage);
        }, T$.GetNavConfigToGetPage()))[$toList]();
      } else {
        return res[$where](dart.fn(element => {
          if (element == null) dart.nullFailed(I[6], 279, 19, "element");
          return element.participatesInRootNavigator === true;
        }, T$.GetPageTobool()))[$toList]();
      }
    }
    build(context) {
      let t3;
      if (context == null) dart.nullFailed(I[6], 285, 29, "context");
      let pages = this.getVisualPages();
      if (pages[$length] === 0) return new basic.SizedBox.shrink({$creationLocationd_0dea112b090073317d4: C[158] || CT.C158});
      let extraObservers = this.navigatorObservers;
      return new get_router_delegate.GetNavigator.new({key: this.navigatorKey, onPopPage: dart.bind(this, _onPopVisualRoute), pages: pages, observers: (() => {
          let t2 = T$.JSArrayOfNavigatorObserver().of([new route_observer.GetObserver.new()]);
          if (extraObservers != null) t2[$addAll](extraObservers);
          return t2;
        })(), transitionDelegate: (t3 = this.transitionDelegate, t3 == null ? C[159] || CT.C159 : t3), $creationLocationd_0dea112b090073317d4: C[160] || CT.C160});
    }
    setNewRoutePath(configuration) {
      get_nav_config.GetNavConfig.as(configuration);
      if (configuration == null) dart.nullFailed(I[6], 311, 45, "configuration");
      return async.async(dart.void, (function* setNewRoutePath() {
        yield this.pushHistory(configuration);
      }).bind(this));
    }
    get currentConfiguration() {
      if (dart.test(this.history[$isEmpty])) return null;
      let route = this.history[$last];
      return route;
    }
    toNamed(T, page, opts) {
      if (page == null) dart.nullFailed(I[6], 323, 12, "page");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      return async.async(T, (function* toNamed() {
        if (parameters != null) {
          let uri = core._Uri.new({path: page, queryParameters: parameters});
          page = dart.toString(uri);
        }
        let decoder = extension_navigation['NavTwoExt|get#routeTree'](get_main.Get).matchRoute(page, {arguments: $arguments});
        decoder.replaceArguments($arguments);
        let completer = async.Completer$(T).new();
        if (decoder.route != null) {
          this[_allCompleters][$_set](dart.nullCheck(decoder.route), completer);
          yield this.pushHistory(new get_nav_config.GetNavConfig.new({currentTreeBranch: decoder.treeBranch, location: page, state: null}));
          return completer.future;
        } else {
          return async.Future$(T).value();
        }
      }).bind(this));
    }
    offAndToNamed(T, page, opts) {
      if (page == null) dart.nullFailed(I[6], 356, 12, "page");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let id = opts && 'id' in opts ? opts.id : null;
      let result = opts && 'result' in opts ? opts.result : null;
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      let popMode = opts && 'popMode' in opts ? opts.popMode : C[147] || CT.C147;
      if (popMode == null) dart.nullFailed(I[6], 361, 13, "popMode");
      return async.async(dart.nullable(T), (function* offAndToNamed() {
        if (parameters != null) {
          let uri = core._Uri.new({path: page, queryParameters: parameters});
          page = dart.toString(uri);
        }
        yield this.popRoute({result: result});
        return this.toNamed(dart.nullable(T), page, {arguments: $arguments, parameters: parameters});
      }).bind(this));
    }
    offNamed(T, page, opts) {
      if (page == null) dart.nullFailed(I[6], 373, 12, "page");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      return async.async(T, (function* offNamed() {
        this.history[$removeLast]();
        return this.toNamed(T, page, {arguments: $arguments, parameters: parameters});
      }).bind(this));
    }
    backUntil(fullRoute, opts) {
      if (fullRoute == null) dart.nullFailed(I[6], 385, 12, "fullRoute");
      let popMode = opts && 'popMode' in opts ? opts.popMode : C[157] || CT.C157;
      if (popMode == null) dart.nullFailed(I[6], 386, 13, "popMode");
      return async.async(dart.void, (function* backUntil() {
        let iterator = this.currentConfiguration;
        while (dart.test(this[_canPop](popMode)) && iterator != null && iterator.location != fullRoute) {
          yield this[_pop](popMode);
          iterator = this.currentConfiguration;
        }
        this.refresh();
      }).bind(this));
    }
    handlePopupRoutes(opts) {
      let result = opts && 'result' in opts ? opts.result : null;
      return async.async(core.bool, (function* handlePopupRoutes() {
        let currentRoute = null;
        dart.nullCheck(this.navigatorKey.currentState).popUntil(dart.fn(route => {
          if (route == null) dart.nullFailed(I[6], 404, 42, "route");
          currentRoute = route;
          return true;
        }, T$.RouteTobool()));
        if (routes.PopupRoute.is(currentRoute)) {
          return yield dart.nullCheck(this.navigatorKey.currentState).maybePop(core.Object, result);
        }
        return false;
      }).bind(this));
    }
    popRoute(opts) {
      let result = opts && 'result' in opts ? opts.result : null;
      let popMode = opts && 'popMode' in opts ? opts.popMode : C[157] || CT.C157;
      if (popMode == null) dart.nullFailed(I[6], 417, 13, "popMode");
      return async.async(core.bool, (function* popRoute() {
        let wasPopup = (yield this.handlePopupRoutes({result: result}));
        if (dart.test(wasPopup)) return true;
        let _popped = (yield this[_pop](popMode));
        this.refresh();
        if (_popped != null) {
          return true;
        }
        return false;
      }).bind(this));
    }
    [_onPopVisualRoute](route, result) {
      let t3;
      if (route == null) dart.nullFailed(I[6], 433, 41, "route");
      let didPop = route.didPop(result);
      if (!dart.test(didPop)) {
        return false;
      }
      let settings = route.settings;
      if (get_route.GetPage.is(settings)) {
        let config = this.history[$cast](T$.GetNavConfigN())[$firstWhere](dart.fn(element => {
          let t3;
          return dart.equals((t3 = element, t3 == null ? null : t3.currentPage), settings);
        }, T$.GetNavConfigNTobool()), {orElse: dart.fn(() => null, T$.VoidToNull())});
        if (config != null) {
          this[_removeHistoryEntry](config);
        }
        if (dart.test(this[_allCompleters][$containsKey](settings))) {
          t3 = this[_allCompleters][$_get](settings);
          t3 == null ? null : t3.complete(route.popped);
        }
      }
      this.refresh();
      return true;
    }
  };
  (get_router_delegate.GetDelegate.new = function(opts) {
    let t2, t3, t2$;
    let notFoundRoute = opts && 'notFoundRoute' in opts ? opts.notFoundRoute : null;
    let navigatorObservers = opts && 'navigatorObservers' in opts ? opts.navigatorObservers : null;
    let transitionDelegate = opts && 'transitionDelegate' in opts ? opts.transitionDelegate : null;
    let backButtonPopMode = opts && 'backButtonPopMode' in opts ? opts.backButtonPopMode : C[147] || CT.C147;
    if (backButtonPopMode == null) dart.nullFailed(I[6], 66, 10, "backButtonPopMode");
    let preventDuplicateHandlingMode = opts && 'preventDuplicateHandlingMode' in opts ? opts.preventDuplicateHandlingMode : C[148] || CT.C148;
    if (preventDuplicateHandlingMode == null) dart.nullFailed(I[6], 67, 10, "preventDuplicateHandlingMode");
    this[history] = T$.JSArrayOfGetNavConfig().of([]);
    this[_allCompleters] = new (T$.LinkedMapOfGetPage$Completer()).new();
    this[navigatorObservers$1] = navigatorObservers;
    this[transitionDelegate$] = transitionDelegate;
    this[backButtonPopMode$] = backButtonPopMode;
    this[preventDuplicateHandlingMode$] = preventDuplicateHandlingMode;
    this[notFoundRoute$] = (t2 = notFoundRoute, t2 == null ? new get_route.GetPage.new({name: "/404", page: dart.fn(() => new scaffold.Scaffold.new({body: new text.Text.new("Route not found", {$creationLocationd_0dea112b090073317d4: C[149] || CT.C149}), $creationLocationd_0dea112b090073317d4: C[152] || CT.C152}), T$.VoidToScaffold())}) : t2);
    get_router_delegate.GetDelegate.__proto__.new.call(this);
    t2$ = get_main.Get;
    t3 = "GetDelegate is created !";
    t2$.log(t3);
  }).prototype = get_router_delegate.GetDelegate.prototype;
  dart.addTypeTests(get_router_delegate.GetDelegate);
  dart.addTypeCaches(get_router_delegate.GetDelegate);
  dart.setMethodSignature(get_router_delegate.GetDelegate, () => ({
    __proto__: dart.getMethods(get_router_delegate.GetDelegate.__proto__),
    runMiddleware: dart.fnType(async.Future$(dart.nullable(get_nav_config.GetNavConfig)), [get_nav_config.GetNavConfig]),
    [_unsafeHistoryAdd]: dart.fnType(async.Future$(dart.void), [get_nav_config.GetNavConfig]),
    [_unsafeHistoryRemove]: dart.fnType(async.Future$(dart.void), [get_nav_config.GetNavConfig]),
    [_unsafeHistoryRemoveAt]: dart.fnType(async.Future$(dart.nullable(get_nav_config.GetNavConfig)), [core.int]),
    arguments: dart.gFnType(T => [T, []], T => [dart.nullable(core.Object)]),
    pushHistory: dart.fnType(async.Future$(dart.void), [get_nav_config.GetNavConfig], {rebuildStack: core.bool}, {}),
    [_removeHistoryEntry]: dart.fnType(async.Future$(dart.void), [get_nav_config.GetNavConfig]),
    [_pushHistory]: dart.fnType(async.Future$(dart.void), [get_nav_config.GetNavConfig]),
    [_popHistory]: dart.fnType(async.Future$(dart.nullable(get_nav_config.GetNavConfig)), []),
    [_doPopHistory]: dart.fnType(async.Future$(dart.nullable(get_nav_config.GetNavConfig)), []),
    [_popPage]: dart.fnType(async.Future$(dart.nullable(get_nav_config.GetNavConfig)), []),
    [_pop]: dart.fnType(async.Future$(dart.nullable(get_nav_config.GetNavConfig)), [get_router_delegate.PopMode]),
    [_doPopPage]: dart.fnType(async.Future$(dart.nullable(get_nav_config.GetNavConfig)), []),
    popHistory: dart.fnType(async.Future$(dart.nullable(get_nav_config.GetNavConfig)), []),
    [_canPopHistory]: dart.fnType(core.bool, []),
    canPopHistory: dart.fnType(async.Future$(core.bool), []),
    [_canPopPage]: dart.fnType(core.bool, []),
    canPopPage: dart.fnType(async.Future$(core.bool), []),
    [_canPop]: dart.fnType(core.bool, [get_router_delegate.PopMode]),
    getVisualPages: dart.fnType(core.List$(get_route.GetPage), []),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    setNewRoutePath: dart.fnType(async.Future$(dart.void), [dart.nullable(core.Object)]),
    toNamed: dart.gFnType(T => [async.Future$(T), [core.String], {arguments: dart.dynamic, parameters: dart.nullable(core.Map$(core.String, core.String))}, {}], T => [dart.nullable(core.Object)]),
    offAndToNamed: dart.gFnType(T => [dart.nullable(async.Future$(dart.nullable(T))), [core.String], {arguments: dart.dynamic, id: dart.nullable(core.int), parameters: dart.nullable(core.Map$(core.String, core.String)), popMode: get_router_delegate.PopMode, result: dart.dynamic}, {}], T => [dart.nullable(core.Object)]),
    offNamed: dart.gFnType(T => [async.Future$(T), [core.String], {arguments: dart.dynamic, parameters: dart.nullable(core.Map$(core.String, core.String))}, {}], T => [dart.nullable(core.Object)]),
    backUntil: dart.fnType(async.Future$(dart.void), [core.String], {popMode: get_router_delegate.PopMode}, {}),
    handlePopupRoutes: dart.fnType(async.Future$(core.bool), [], {result: dart.nullable(core.Object)}, {}),
    popRoute: dart.fnType(async.Future$(core.bool), [], {popMode: get_router_delegate.PopMode, result: dart.nullable(core.Object)}, {}),
    [_onPopVisualRoute]: dart.fnType(core.bool, [navigator.Route, dart.dynamic])
  }));
  dart.setGetterSignature(get_router_delegate.GetDelegate, () => ({
    __proto__: dart.getGetters(get_router_delegate.GetDelegate.__proto__),
    navigatorKey: framework.GlobalKey$(navigator.NavigatorState),
    parameters: core.Map$(core.String, core.String)
  }));
  dart.setLibraryUri(get_router_delegate.GetDelegate, I[9]);
  dart.setFieldSignature(get_router_delegate.GetDelegate, () => ({
    __proto__: dart.getFields(get_router_delegate.GetDelegate.__proto__),
    history: dart.finalFieldType(core.List$(get_nav_config.GetNavConfig)),
    backButtonPopMode: dart.finalFieldType(get_router_delegate.PopMode),
    preventDuplicateHandlingMode: dart.finalFieldType(get_router_delegate.PreventDuplicateHandlingMode),
    notFoundRoute: dart.finalFieldType(get_route.GetPage),
    navigatorObservers: dart.finalFieldType(dart.nullable(core.List$(navigator.NavigatorObserver))),
    transitionDelegate: dart.finalFieldType(dart.nullable(navigator.TransitionDelegate)),
    [_allCompleters]: dart.finalFieldType(core.Map$(get_route.GetPage, async.Completer))
  }));
  router_outlet.GetRouterOutlet = class GetRouterOutlet extends router_outlet.RouterOutlet$(get_router_delegate.GetDelegate, get_nav_config.GetNavConfig) {};
  (router_outlet.GetRouterOutlet.new = function(opts) {
    let anchorRoute = opts && 'anchorRoute' in opts ? opts.anchorRoute : null;
    let initialRoute = opts && 'initialRoute' in opts ? opts.initialRoute : null;
    if (initialRoute == null) dart.nullFailed(I[4], 81, 21, "initialRoute");
    let filterPages = opts && 'filterPages' in opts ? opts.filterPages : null;
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    router_outlet.GetRouterOutlet.pickPages.call(this, {pickPages: dart.fn(config => {
        if (config == null) dart.nullFailed(I[4], 86, 23, "config");
        let ret = null;
        if (anchorRoute == null) {
          let length = core.Uri.parse(initialRoute).pathSegments[$length];
          return config.currentTreeBranch[$skip](length)[$take](length)[$toList]();
        }
        ret = router_outlet['PagesListExt|pickAfterRoute'](config.currentTreeBranch, anchorRoute);
        if (filterPages != null) {
          ret = filterPages(ret);
        }
        return ret;
      }, T$.GetNavConfigToIterableOfGetPage()), emptyPage: dart.fn(delegate => {
        let t0;
        if (delegate == null) dart.nullFailed(I[4], 103, 23, "delegate");
        t0 = extension_navigation['NavTwoExt|get#routeTree'](get_main.Get).matchRoute(initialRoute).route;
        return t0 == null ? delegate.notFoundRoute : t0;
      }, T$.GetDelegateToGetPage()), key: key, delegate: delegate, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
  }).prototype = router_outlet.GetRouterOutlet.prototype;
  (router_outlet.GetRouterOutlet.pickPages = function(opts) {
    let t2;
    let emptyWidget = opts && 'emptyWidget' in opts ? opts.emptyWidget : null;
    let emptyPage = opts && 'emptyPage' in opts ? opts.emptyPage : null;
    let pickPages = opts && 'pickPages' in opts ? opts.pickPages : null;
    if (pickPages == null) dart.nullFailed(I[4], 112, 71, "pickPages");
    let onPopPage = opts && 'onPopPage' in opts ? opts.onPopPage : null;
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    router_outlet.GetRouterOutlet.__proto__.new.call(this, {pageBuilder: dart.fn((context, rDelegate, pages) => {
        let t2, t2$, t2$0, t2$1;
        if (context == null) dart.nullFailed(I[4], 117, 25, "context");
        if (rDelegate == null) dart.nullFailed(I[4], 117, 34, "rDelegate");
        let pageRes = (() => {
          let t0 = T$.JSArrayOfGetPageN().of([]);
          let t1 = pages;
          if (t1 != null) t0[$addAll](t1);
          if (pages == null || pages[$length] === 0) t0[$add]((t2 = emptyPage, t2 == null ? null : t2(rDelegate)));
          return t0;
        })()[$whereType](get_route.GetPage);
        if (dart.notNull(pageRes[$length]) > 0) {
          return new get_router_delegate.GetNavigator.new({onPopPage: (t2$ = onPopPage, t2$ == null ? dart.fn((route, result) => {
              if (route == null) dart.nullFailed(I[4], 127, 22, "route");
              let didPop = route.didPop(result);
              if (!dart.test(didPop)) {
                return false;
              }
              return true;
            }, T$.RouteAnddynamicTobool()) : t2$), pages: pageRes[$toList](), key: key, $creationLocationd_0dea112b090073317d4: C[141] || CT.C141});
        }
        t2$1 = (t2$0 = emptyWidget, t2$0 == null ? null : t2$0(rDelegate));
        return t2$1 == null ? new basic.SizedBox.shrink({$creationLocationd_0dea112b090073317d4: C[146] || CT.C146}) : t2$1;
      }, T$.BuildContextAndGetDelegateAndIterableNOfGetPageToWidget()), pickPages: pickPages, delegate: (t2 = delegate, t2 == null ? extension_navigation['NavTwoExt|get#rootDelegate'](get_main.Get) : t2), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = router_outlet.GetRouterOutlet.prototype;
  (router_outlet.GetRouterOutlet.builder = function(opts) {
    let builder = opts && 'builder' in opts ? opts.builder : null;
    if (builder == null) dart.nullFailed(I[4], 150, 9, "builder");
    let routerDelegate = opts && 'routerDelegate' in opts ? opts.routerDelegate : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    router_outlet.GetRouterOutlet.__proto__.builder.call(this, {builder: builder, delegate: routerDelegate, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = router_outlet.GetRouterOutlet.prototype;
  dart.addTypeTests(router_outlet.GetRouterOutlet);
  dart.addTypeCaches(router_outlet.GetRouterOutlet);
  dart.setLibraryUri(router_outlet.GetRouterOutlet, I[5]);
  router_outlet['PagesListExt|pickAtRoute'] = function PagesListExt$124pickAtRoute($this, route) {
    if ($this == null) dart.nullFailed(I[4], 159, 21, "#this");
    if (route == null) dart.nullFailed(I[4], 159, 40, "route");
    return $this[$skipWhile](dart.fn(value => {
      if (value == null) dart.nullFailed(I[4], 160, 23, "value");
      return value.name != route;
    }, T$.GetPageTobool()));
  };
  router_outlet['PagesListExt|get#pickAtRoute'] = function PagesListExt$124get$35pickAtRoute($this) {
    if ($this == null) dart.nullFailed(I[4], 159, 21, "#this");
    return dart.fn(route => {
      if (route == null) dart.nullFailed(I[4], 159, 40, "route");
      return router_outlet['PagesListExt|pickAtRoute']($this, route);
    }, T$.StringToIterableOfGetPage());
  };
  router_outlet['PagesListExt|pickAfterRoute'] = function PagesListExt$124pickAfterRoute($this, route) {
    if ($this == null) dart.nullFailed(I[4], 165, 21, "#this");
    if (route == null) dart.nullFailed(I[4], 165, 43, "route");
    return router_outlet['PagesListExt|pickAtRoute']($this, route)[$skip](1);
  };
  router_outlet['PagesListExt|get#pickAfterRoute'] = function PagesListExt$124get$35pickAfterRoute($this) {
    if ($this == null) dart.nullFailed(I[4], 165, 21, "#this");
    return dart.fn(route => {
      if (route == null) dart.nullFailed(I[4], 165, 43, "route");
      return router_outlet['PagesListExt|pickAfterRoute']($this, route);
    }, T$.StringToIterableOfGetPage());
  };
  get_router_delegate.PopMode = class PopMode extends core.Object {
    toString() {
      return this[_name$0];
    }
  };
  (get_router_delegate.PopMode.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[6], 28, 6, "index");
    if (_name == null) dart.nullFailed(I[6], 28, 6, "_name");
    this.index = index;
    this[_name$0] = _name;
    ;
  }).prototype = get_router_delegate.PopMode.prototype;
  dart.addTypeTests(get_router_delegate.PopMode);
  dart.addTypeCaches(get_router_delegate.PopMode);
  dart.setLibraryUri(get_router_delegate.PopMode, I[9]);
  dart.setFieldSignature(get_router_delegate.PopMode, () => ({
    __proto__: dart.getFields(get_router_delegate.PopMode.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$0]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(get_router_delegate.PopMode, ['toString']);
  get_router_delegate.PopMode.History = C[147] || CT.C147;
  get_router_delegate.PopMode.Page = C[157] || CT.C157;
  get_router_delegate.PopMode.values = C[167] || CT.C167;
  get_router_delegate.PreventDuplicateHandlingMode = class PreventDuplicateHandlingMode extends core.Object {
    toString() {
      return this[_name$0];
    }
  };
  (get_router_delegate.PreventDuplicateHandlingMode.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[6], 35, 6, "index");
    if (_name == null) dart.nullFailed(I[6], 35, 6, "_name");
    this.index = index;
    this[_name$0] = _name;
    ;
  }).prototype = get_router_delegate.PreventDuplicateHandlingMode.prototype;
  dart.addTypeTests(get_router_delegate.PreventDuplicateHandlingMode);
  dart.addTypeCaches(get_router_delegate.PreventDuplicateHandlingMode);
  dart.setLibraryUri(get_router_delegate.PreventDuplicateHandlingMode, I[9]);
  dart.setFieldSignature(get_router_delegate.PreventDuplicateHandlingMode, () => ({
    __proto__: dart.getFields(get_router_delegate.PreventDuplicateHandlingMode.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$0]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(get_router_delegate.PreventDuplicateHandlingMode, ['toString']);
  get_router_delegate.PreventDuplicateHandlingMode.PopUntilOriginalRoute = C[155] || CT.C155;
  get_router_delegate.PreventDuplicateHandlingMode.DoNothing = C[156] || CT.C156;
  get_router_delegate.PreventDuplicateHandlingMode.ReorderRoutes = C[148] || CT.C148;
  get_router_delegate.PreventDuplicateHandlingMode.values = C[168] || CT.C168;
  get_router_delegate.GetNavigator = class GetNavigator extends navigator.Navigator {};
  (get_router_delegate.GetNavigator.new = function(opts) {
    let t7, t8;
    let key = opts && 'key' in opts ? opts.key : null;
    let onPopPage = opts && 'onPopPage' in opts ? opts.onPopPage : null;
    let pages = opts && 'pages' in opts ? opts.pages : null;
    if (pages == null) dart.nullFailed(I[6], 461, 25, "pages");
    let observers = opts && 'observers' in opts ? opts.observers : null;
    let reportsRouteUpdateToEngine = opts && 'reportsRouteUpdateToEngine' in opts ? opts.reportsRouteUpdateToEngine : false;
    if (reportsRouteUpdateToEngine == null) dart.nullFailed(I[6], 463, 10, "reportsRouteUpdateToEngine");
    let transitionDelegate = opts && 'transitionDelegate' in opts ? opts.transitionDelegate : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    get_router_delegate.GetNavigator.__proto__.new.call(this, {key: key, onPopPage: (t7 = onPopPage, t7 == null ? dart.fn((route, result) => {
        if (route == null) dart.nullFailed(I[6], 469, 16, "route");
        let didPop = route.didPop(result);
        if (!dart.test(didPop)) {
          return false;
        }
        return true;
      }, T$.RouteAnddynamicTobool()) : t7), reportsRouteUpdateToEngine: reportsRouteUpdateToEngine, pages: pages, observers: (() => {
        let t7 = T$.JSArrayOfNavigatorObserver().of([]);
        if (observers != null) t7[$addAll](observers);
        return t7;
      })(), transitionDelegate: (t8 = transitionDelegate, t8 == null ? C[159] || CT.C159 : t8), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = get_router_delegate.GetNavigator.prototype;
  dart.addTypeTests(get_router_delegate.GetNavigator);
  dart.addTypeCaches(get_router_delegate.GetNavigator);
  dart.setLibraryUri(get_router_delegate.GetNavigator, I[9]);
  var initialRoute$1 = dart.privateName(get_information_parser, "GetInformationParser.initialRoute");
  get_information_parser.GetInformationParser = class GetInformationParser extends router.RouteInformationParser$(get_nav_config.GetNavConfig) {
    get initialRoute() {
      return this[initialRoute$1];
    }
    set initialRoute(value) {
      super.initialRoute = value;
    }
    parseRouteInformation(routeInformation) {
      let t8;
      if (routeInformation == null) dart.nullFailed(I[10], 15, 22, "routeInformation");
      core.print("GetInformationParser: route location: " + dart.str(routeInformation.location));
      let location = routeInformation.location;
      if (location === "/") {
        if (!dart.test(extension_navigation['NavTwoExt|get#routeTree'](get_main.Get).routes[$any](dart.fn(element => {
          if (element == null) dart.nullFailed(I[10], 22, 38, "element");
          return element.name === "/";
        }, T$.GetPageTobool())))) {
          location = this.initialRoute;
        }
      }
      let matchResult = extension_navigation['NavTwoExt|get#routeTree'](get_main.Get).matchRoute((t8 = location, t8 == null ? this.initialRoute : t8));
      return new (T$.SynchronousFutureOfGetNavConfig()).new(new get_nav_config.GetNavConfig.new({currentTreeBranch: matchResult.treeBranch, location: location, state: routeInformation.state}));
    }
    restoreRouteInformation(config) {
      get_nav_config.GetNavConfig.as(config);
      if (config == null) dart.nullFailed(I[10], 39, 57, "config");
      return new router.RouteInformation.new({location: config.location, state: config.state});
    }
  };
  (get_information_parser.GetInformationParser.new = function(opts) {
    let t9, t8;
    let initialRoute = opts && 'initialRoute' in opts ? opts.initialRoute : "/";
    if (initialRoute == null) dart.nullFailed(I[10], 9, 10, "initialRoute");
    this[initialRoute$1] = initialRoute;
    get_information_parser.GetInformationParser.__proto__.new.call(this);
    t8 = get_main.Get;
    t9 = "GetInformationParser is created !";
    t8.log(t9);
  }).prototype = get_information_parser.GetInformationParser.prototype;
  dart.addTypeTests(get_information_parser.GetInformationParser);
  dart.addTypeCaches(get_information_parser.GetInformationParser);
  dart.setMethodSignature(get_information_parser.GetInformationParser, () => ({
    __proto__: dart.getMethods(get_information_parser.GetInformationParser.__proto__),
    parseRouteInformation: dart.fnType(synchronous_future.SynchronousFuture$(get_nav_config.GetNavConfig), [router.RouteInformation]),
    restoreRouteInformation: dart.fnType(router.RouteInformation, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(get_information_parser.GetInformationParser, I[11]);
  dart.setFieldSignature(get_information_parser.GetInformationParser, () => ({
    __proto__: dart.getFields(get_information_parser.GetInformationParser.__proto__),
    initialRoute: dart.finalFieldType(core.String)
  }));
  route_middleware._RouteMiddleware = class _RouteMiddleware extends core.Object {};
  (route_middleware._RouteMiddleware.new = function() {
    this.priority = null;
    ;
  }).prototype = route_middleware._RouteMiddleware.prototype;
  dart.addTypeTests(route_middleware._RouteMiddleware);
  dart.addTypeCaches(route_middleware._RouteMiddleware);
  dart.setLibraryUri(route_middleware._RouteMiddleware, I[12]);
  dart.setFieldSignature(route_middleware._RouteMiddleware, () => ({
    __proto__: dart.getFields(route_middleware._RouteMiddleware.__proto__),
    priority: dart.fieldType(dart.nullable(core.int))
  }));
  var priority$ = dart.privateName(route_middleware, "GetMiddleware.priority");
  route_middleware.GetMiddleware = class GetMiddleware extends core.Object {
    get priority() {
      return this[priority$];
    }
    set priority(value) {
      this[priority$] = value;
    }
    redirect(route) {
      return null;
    }
    onPageCalled(page) {
      return page;
    }
    onBindingsStart(bindings) {
      return bindings;
    }
    onPageBuildStart(page) {
      return page;
    }
    onPageBuilt(page) {
      if (page == null) dart.nullFailed(I[13], 116, 29, "page");
      return page;
    }
    onPageDispose() {
    }
    redirectDelegate(route) {
      if (route == null) dart.nullFailed(I[13], 122, 55, "route");
      return new (T$.SynchronousFutureOfGetNavConfigN()).new(route);
    }
  };
  (route_middleware.GetMiddleware.new = function(opts) {
    let priority = opts && 'priority' in opts ? opts.priority : null;
    this[priority$] = 0;
    this[priority$] = priority;
    ;
  }).prototype = route_middleware.GetMiddleware.prototype;
  dart.addTypeTests(route_middleware.GetMiddleware);
  dart.addTypeCaches(route_middleware.GetMiddleware);
  route_middleware.GetMiddleware[dart.implements] = () => [route_middleware._RouteMiddleware];
  dart.setMethodSignature(route_middleware.GetMiddleware, () => ({
    __proto__: dart.getMethods(route_middleware.GetMiddleware.__proto__),
    redirect: dart.fnType(dart.nullable(navigator.RouteSettings), [dart.nullable(core.String)]),
    onPageCalled: dart.fnType(dart.nullable(get_route.GetPage), [dart.nullable(get_route.GetPage)]),
    onBindingsStart: dart.fnType(dart.nullable(core.List$(bindings_interface.Bindings)), [dart.nullable(core.List$(bindings_interface.Bindings))]),
    onPageBuildStart: dart.fnType(dart.nullable(dart.fnType(framework.Widget, [])), [dart.nullable(dart.fnType(framework.Widget, []))]),
    onPageBuilt: dart.fnType(framework.Widget, [framework.Widget]),
    onPageDispose: dart.fnType(dart.void, []),
    redirectDelegate: dart.fnType(async.Future$(dart.nullable(get_nav_config.GetNavConfig)), [get_nav_config.GetNavConfig])
  }));
  dart.setLibraryUri(route_middleware.GetMiddleware, I[12]);
  dart.setFieldSignature(route_middleware.GetMiddleware, () => ({
    __proto__: dart.getFields(route_middleware.GetMiddleware.__proto__),
    priority: dart.fieldType(dart.nullable(core.int))
  }));
  var _middlewares$ = dart.privateName(route_middleware, "_middlewares");
  var _getMiddlewares = dart.privateName(route_middleware, "_getMiddlewares");
  route_middleware.MiddlewareRunner = class MiddlewareRunner extends core.Object {
    [_getMiddlewares]() {
      let t8, t8$;
      let _m = (t8 = this[_middlewares$], t8 == null ? T$.JSArrayOfGetMiddleware().of([]) : t8);
      t8$ = _m;
      return (() => {
        t8$[$sort](dart.fn((a, b) => {
          let t9, t9$;
          if (a == null) dart.nullFailed(I[13], 135, 10, "a");
          if (b == null) dart.nullFailed(I[13], 135, 13, "b");
          return (t9 = a.priority, t9 == null ? 0 : t9)[$compareTo]((t9$ = b.priority, t9$ == null ? 0 : t9$));
        }, T$.GetMiddlewareAndGetMiddlewareToint()));
        return t8$;
      })();
    }
    runOnPageCalled(page) {
      this[_getMiddlewares]()[$forEach](dart.fn(element => {
        if (element == null) dart.nullFailed(I[13], 140, 32, "element");
        page = element.onPageCalled(page);
      }, T$.GetMiddlewareTovoid()));
      return page;
    }
    runRedirect(route) {
      let t9, t8;
      let to = null;
      for (let element of this[_getMiddlewares]()) {
        to = element.redirect(route);
        if (to != null) {
          break;
        }
      }
      t8 = get_main.Get;
      t9 = "Redirect to " + dart.str(to);
      t8.log(t9);
      return to;
    }
    runOnBindingsStart(bindings) {
      this[_getMiddlewares]()[$forEach](dart.fn(element => {
        if (element == null) dart.nullFailed(I[13], 159, 32, "element");
        bindings = element.onBindingsStart(bindings);
      }, T$.GetMiddlewareTovoid()));
      return bindings;
    }
    runOnPageBuildStart(page) {
      this[_getMiddlewares]()[$forEach](dart.fn(element => {
        if (element == null) dart.nullFailed(I[13], 166, 32, "element");
        page = element.onPageBuildStart(page);
      }, T$.GetMiddlewareTovoid()));
      return page;
    }
    runOnPageBuilt(page) {
      if (page == null) dart.nullFailed(I[13], 172, 32, "page");
      this[_getMiddlewares]()[$forEach](dart.fn(element => {
        if (element == null) dart.nullFailed(I[13], 173, 32, "element");
        page = element.onPageBuilt(page);
      }, T$.GetMiddlewareTovoid()));
      return page;
    }
    runOnPageDispose() {
      return this[_getMiddlewares]()[$forEach](dart.fn(element => {
        if (element == null) dart.nullFailed(I[13], 180, 34, "element");
        return element.onPageDispose();
      }, T$.GetMiddlewareTovoid()));
    }
  };
  (route_middleware.MiddlewareRunner.new = function(_middlewares) {
    this[_middlewares$] = _middlewares;
    ;
  }).prototype = route_middleware.MiddlewareRunner.prototype;
  dart.addTypeTests(route_middleware.MiddlewareRunner);
  dart.addTypeCaches(route_middleware.MiddlewareRunner);
  dart.setMethodSignature(route_middleware.MiddlewareRunner, () => ({
    __proto__: dart.getMethods(route_middleware.MiddlewareRunner.__proto__),
    [_getMiddlewares]: dart.fnType(core.List$(route_middleware.GetMiddleware), []),
    runOnPageCalled: dart.fnType(dart.nullable(get_route.GetPage), [dart.nullable(get_route.GetPage)]),
    runRedirect: dart.fnType(dart.nullable(navigator.RouteSettings), [dart.nullable(core.String)]),
    runOnBindingsStart: dart.fnType(dart.nullable(core.List$(bindings_interface.Bindings)), [dart.nullable(core.List$(bindings_interface.Bindings))]),
    runOnPageBuildStart: dart.fnType(dart.nullable(dart.fnType(framework.Widget, [])), [dart.nullable(dart.fnType(framework.Widget, []))]),
    runOnPageBuilt: dart.fnType(framework.Widget, [framework.Widget]),
    runOnPageDispose: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(route_middleware.MiddlewareRunner, I[12]);
  dart.setFieldSignature(route_middleware.MiddlewareRunner, () => ({
    __proto__: dart.getFields(route_middleware.MiddlewareRunner.__proto__),
    [_middlewares$]: dart.finalFieldType(dart.nullable(core.List$(route_middleware.GetMiddleware)))
  }));
  var route$0 = dart.privateName(route_middleware, "PageRedirect.route");
  var unknownRoute$1 = dart.privateName(route_middleware, "PageRedirect.unknownRoute");
  var settings$ = dart.privateName(route_middleware, "PageRedirect.settings");
  var isUnknown$ = dart.privateName(route_middleware, "PageRedirect.isUnknown");
  route_middleware.PageRedirect = class PageRedirect extends core.Object {
    get route() {
      return this[route$0];
    }
    set route(value) {
      this[route$0] = value;
    }
    get unknownRoute() {
      return this[unknownRoute$1];
    }
    set unknownRoute(value) {
      this[unknownRoute$1] = value;
    }
    get settings() {
      return this[settings$];
    }
    set settings(value) {
      this[settings$] = value;
    }
    get isUnknown() {
      return this[isUnknown$];
    }
    set isUnknown(value) {
      this[isUnknown$] = value;
    }
    page(T) {
      let t8;
      while (dart.test(this.needRecheck())) {
      }
      let _r = dart.nullCheck(dart.test(this.isUnknown) ? this.unknownRoute : this.route);
      return new (default_route.GetPageRoute$(T)).new({page: _r.page, parameter: _r.parameters, settings: dart.test(this.isUnknown) ? new navigator.RouteSettings.new({name: _r.name, arguments: dart.nullCheck(this.settings).arguments}) : this.settings, curve: _r.curve, opaque: _r.opaque, showCupertinoParallax: _r.showCupertinoParallax, gestureWidth: _r.gestureWidth, customTransition: _r.customTransition, binding: _r.binding, bindings: _r.bindings, transitionDuration: (t8 = _r.transitionDuration, t8 == null ? extension_navigation['GetNavigation|get#defaultTransitionDuration'](get_main.Get) : t8), transition: _r.transition, popGesture: _r.popGesture, fullscreenDialog: _r.fullscreenDialog, middlewares: _r.middlewares});
    }
    getPageToRoute(T, rou, unk) {
      let t8;
      if (rou == null) dart.nullFailed(I[13], 226, 45, "rou");
      while (dart.test(this.needRecheck())) {
      }
      let _r = dart.nullCheck(dart.test(this.isUnknown) ? unk : rou);
      return new (default_route.GetPageRoute$(T)).new({page: _r.page, parameter: _r.parameters, alignment: _r.alignment, title: _r.title, maintainState: _r.maintainState, routeName: _r.name, settings: _r, curve: _r.curve, showCupertinoParallax: _r.showCupertinoParallax, gestureWidth: _r.gestureWidth, opaque: _r.opaque, customTransition: _r.customTransition, binding: _r.binding, bindings: _r.bindings, transitionDuration: (t8 = _r.transitionDuration, t8 == null ? extension_navigation['GetNavigation|get#defaultTransitionDuration'](get_main.Get) : t8), transition: _r.transition, popGesture: _r.popGesture, fullscreenDialog: _r.fullscreenDialog, middlewares: _r.middlewares});
    }
    needRecheck() {
      if (this.settings == null && this.route != null) {
        this.settings = this.route;
      }
      let match = extension_navigation['NavTwoExt|get#routeTree'](get_main.Get).matchRoute(dart.nullCheck(dart.nullCheck(this.settings).name));
      extension_navigation['GetNavigation|set#parameters'](get_main.Get, match.parameters);
      if (match.route == null) {
        this.isUnknown = true;
        return false;
      }
      let runner = new route_middleware.MiddlewareRunner.new(dart.nullCheck(match.route).middlewares);
      this.route = runner.runOnPageCalled(match.route);
      this.addPageParameter(dart.nullCheck(this.route));
      if (dart.nullCheck(match.route).middlewares == null || dart.test(dart.nullCheck(dart.nullCheck(match.route).middlewares)[$isEmpty])) {
        return false;
      }
      let newSettings = runner.runRedirect(dart.nullCheck(this.settings).name);
      if (newSettings == null) {
        return false;
      }
      this.settings = newSettings;
      return true;
    }
    addPageParameter(route) {
      if (route == null) dart.nullFailed(I[13], 284, 33, "route");
      if (route.parameters == null) return;
      let parameters = extension_navigation['GetNavigation|get#parameters'](get_main.Get);
      parameters[$addEntries](dart.nullCheck(route.parameters)[$entries]);
      extension_navigation['GetNavigation|set#parameters'](get_main.Get, parameters);
    }
  };
  (route_middleware.PageRedirect.new = function(opts) {
    let route = opts && 'route' in opts ? opts.route : null;
    let unknownRoute = opts && 'unknownRoute' in opts ? opts.unknownRoute : null;
    let isUnknown = opts && 'isUnknown' in opts ? opts.isUnknown : false;
    if (isUnknown == null) dart.nullFailed(I[13], 192, 10, "isUnknown");
    let settings = opts && 'settings' in opts ? opts.settings : null;
    this[route$0] = route;
    this[unknownRoute$1] = unknownRoute;
    this[isUnknown$] = isUnknown;
    this[settings$] = settings;
    ;
  }).prototype = route_middleware.PageRedirect.prototype;
  dart.addTypeTests(route_middleware.PageRedirect);
  dart.addTypeCaches(route_middleware.PageRedirect);
  dart.setMethodSignature(route_middleware.PageRedirect, () => ({
    __proto__: dart.getMethods(route_middleware.PageRedirect.__proto__),
    page: dart.gFnType(T => [default_route.GetPageRoute$(T), []], T => [dart.nullable(core.Object)]),
    getPageToRoute: dart.gFnType(T => [default_route.GetPageRoute$(T), [get_route.GetPage, dart.nullable(get_route.GetPage)]], T => [dart.nullable(core.Object)]),
    needRecheck: dart.fnType(core.bool, []),
    addPageParameter: dart.fnType(dart.void, [get_route.GetPage])
  }));
  dart.setLibraryUri(route_middleware.PageRedirect, I[12]);
  dart.setFieldSignature(route_middleware.PageRedirect, () => ({
    __proto__: dart.getFields(route_middleware.PageRedirect.__proto__),
    route: dart.fieldType(dart.nullable(get_route.GetPage)),
    unknownRoute: dart.fieldType(dart.nullable(get_route.GetPage)),
    settings: dart.fieldType(dart.nullable(navigator.RouteSettings)),
    isUnknown: dart.fieldType(core.bool)
  }));
  var _previousTitle = dart.privateName(get_transition_mixin, "_previousTitle");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _name$1 = dart.privateName(transitions_type, "_name");
  const _is_GetPageRouteTransitionMixin_default = Symbol('_is_GetPageRouteTransitionMixin_default');
  get_transition_mixin.GetPageRouteTransitionMixin$ = dart.generic(T => {
    class GetPageRouteTransitionMixin extends pages.PageRoute$(T) {
      static isPopGestureInProgress(route) {
        if (route == null) dart.nullFailed(I[14], 110, 57, "route");
        return dart.nullCheck(route.navigator).userGestureInProgress;
      }
      static _isPopGestureEnabled(T, route) {
        if (route == null) dart.nullFailed(I[14], 136, 52, "route");
        if (dart.test(route.isFirst)) return false;
        if (dart.test(route.willHandlePopInternally)) return false;
        if (dart.test(route.hasScopedWillPopCallback)) return false;
        if (dart.test(route.fullscreenDialog)) return false;
        if (dart.nullCheck(route.animation).status != animation.AnimationStatus.completed) return false;
        if (dart.nullCheck(route.secondaryAnimation).status != animation.AnimationStatus.dismissed) {
          return false;
        }
        if (dart.test(get_transition_mixin.GetPageRouteTransitionMixin.isPopGestureInProgress(route))) return false;
        return true;
      }
      static _startPopGesture(T, route) {
        if (route == null) dart.nullFailed(I[14], 180, 20, "route");
        if (!dart.test(get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route))) dart.assertFailed(null, I[14], 181, 12, "_isPopGestureEnabled(route)");
        return new (get_transition_mixin.CupertinoBackGestureController$(T)).new({navigator: dart.nullCheck(route.navigator), controller: dart.nullCheck(route.controller)});
      }
      static buildPageTransitions(T, rawRoute, context, animation, secondaryAnimation, child) {
        let t8, t8$, t8$0, t8$1, t8$2, t8$3, t8$4, t8$5, t8$6, t8$7, t8$8, t8$9, t8$10, t8$11, t8$12, t8$13, t8$14, t8$15, t8$16, t8$17, t8$18, t8$19, t8$20, t8$21, t8$22, t8$23, t8$24, t8$25, t8$26, t8$27, t8$28, t8$29, t8$30, t8$31, t8$32, t8$33, t8$34, t8$35, t8$36, t8$37, t8$38, t8$39, t8$40, t8$41, t8$42, t8$43, t8$44, t8$45, t8$46;
        if (rawRoute == null) dart.nullFailed(I[14], 204, 18, "rawRoute");
        if (context == null) dart.nullFailed(I[14], 205, 18, "context");
        if (animation == null) dart.nullFailed(I[14], 206, 23, "animation");
        if (secondaryAnimation == null) dart.nullFailed(I[14], 207, 23, "secondaryAnimation");
        if (child == null) dart.nullFailed(I[14], 208, 12, "child");
        let route = default_route.GetPageRoute$(T).as(rawRoute);
        let linearTransition = get_transition_mixin.GetPageRouteTransitionMixin.isPopGestureInProgress(route);
        let finalCurve = (t8 = route.curve, t8 == null ? extension_navigation['GetNavigation|get#defaultTransitionCurve'](get_main.Get) : t8);
        let hasCurve = route.curve != null;
        if (dart.test(route.fullscreenDialog) && route.transition == null) {
          return new route$.CupertinoFullscreenDialogTransition.new({primaryRouteAnimation: hasCurve ? new animations.CurvedAnimation.new({parent: animation, curve: finalCurve}) : animation, secondaryRouteAnimation: secondaryAnimation, child: child, linearTransition: linearTransition, $creationLocationd_0dea112b090073317d4: C[175] || CT.C175});
        } else {
          if (route.customTransition != null) {
            return dart.nullCheck(route.customTransition).buildTransition(context, finalCurve, route.alignment, animation, secondaryAnimation, dart.test((t8$ = route.popGesture, t8$ == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t8$)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t8$1 = (t8$0 = route.gestureWidth, t8$0 == null ? null : t8$0(context)), t8$1 == null ? 20 : t8$1), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[181] || CT.C181}) : child);
          }
          let iosAnimation = animation;
          animation = new animations.CurvedAnimation.new({parent: animation, curve: finalCurve});
          switch (t8$46 = route.transition, t8$46 == null ? extension_navigation['GetNavigation|get#defaultTransition'](get_main.Get) : t8$46) {
            case C[193] || CT.C193:
            {
              return new default_transitions.SlideLeftTransition.new().buildTransitions(context, route.curve, route.alignment, animation, secondaryAnimation, dart.test((t8$2 = route.popGesture, t8$2 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t8$2)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t8$4 = (t8$3 = route.gestureWidth, t8$3 == null ? null : t8$3(context)), t8$4 == null ? 20 : t8$4), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[187] || CT.C187}) : child);
            }
            case C[200] || CT.C200:
            {
              return new default_transitions.SlideDownTransition.new().buildTransitions(context, route.curve, route.alignment, animation, secondaryAnimation, dart.test((t8$5 = route.popGesture, t8$5 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t8$5)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t8$7 = (t8$6 = route.gestureWidth, t8$6 == null ? null : t8$6(context)), t8$7 == null ? 20 : t8$7), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[194] || CT.C194}) : child);
            }
            case C[207] || CT.C207:
            {
              return new default_transitions.SlideTopTransition.new().buildTransitions(context, route.curve, route.alignment, animation, secondaryAnimation, dart.test((t8$8 = route.popGesture, t8$8 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t8$8)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t8$10 = (t8$9 = route.gestureWidth, t8$9 == null ? null : t8$9(context)), t8$10 == null ? 20 : t8$10), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[201] || CT.C201}) : child);
            }
            case C[214] || CT.C214:
            {
              return dart.test((t8$11 = route.popGesture, t8$11 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t8$11)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t8$13 = (t8$12 = route.gestureWidth, t8$12 == null ? null : t8$12(context)), t8$13 == null ? 20 : t8$13), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[208] || CT.C208}) : child;
            }
            case C[221] || CT.C221:
            {
              return new default_transitions.SlideRightTransition.new().buildTransitions(context, route.curve, route.alignment, animation, secondaryAnimation, dart.test((t8$14 = route.popGesture, t8$14 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t8$14)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t8$16 = (t8$15 = route.gestureWidth, t8$15 == null ? null : t8$15(context)), t8$16 == null ? 20 : t8$16), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[215] || CT.C215}) : child);
            }
            case C[228] || CT.C228:
            {
              return new default_transitions.ZoomInTransition.new().buildTransitions(context, route.curve, route.alignment, animation, secondaryAnimation, dart.test((t8$17 = route.popGesture, t8$17 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t8$17)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t8$19 = (t8$18 = route.gestureWidth, t8$18 == null ? null : t8$18(context)), t8$19 == null ? 20 : t8$19), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[222] || CT.C222}) : child);
            }
            case C[235] || CT.C235:
            {
              return new default_transitions.FadeInTransition.new().buildTransitions(context, route.curve, route.alignment, animation, secondaryAnimation, dart.test((t8$20 = route.popGesture, t8$20 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t8$20)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t8$22 = (t8$21 = route.gestureWidth, t8$21 == null ? null : t8$21(context)), t8$22 == null ? 20 : t8$22), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[229] || CT.C229}) : child);
            }
            case C[242] || CT.C242:
            {
              return new default_transitions.RightToLeftFadeTransition.new().buildTransitions(context, route.curve, route.alignment, animation, secondaryAnimation, dart.test((t8$23 = route.popGesture, t8$23 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t8$23)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t8$25 = (t8$24 = route.gestureWidth, t8$24 == null ? null : t8$24(context)), t8$25 == null ? 20 : t8$25), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[236] || CT.C236}) : child);
            }
            case C[249] || CT.C249:
            {
              return new default_transitions.LeftToRightFadeTransition.new().buildTransitions(context, route.curve, route.alignment, animation, secondaryAnimation, dart.test((t8$26 = route.popGesture, t8$26 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t8$26)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t8$28 = (t8$27 = route.gestureWidth, t8$27 == null ? null : t8$27(context)), t8$28 == null ? 20 : t8$28), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[243] || CT.C243}) : child);
            }
            case C[262] || CT.C262:
            {
              return new route$.CupertinoPageTransition.new({primaryRouteAnimation: animation, secondaryRouteAnimation: secondaryAnimation, linearTransition: linearTransition, child: new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t8$30 = (t8$29 = route.gestureWidth, t8$29 == null ? null : t8$29(context)), t8$30 == null ? 20 : t8$30), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[250] || CT.C250}), $creationLocationd_0dea112b090073317d4: C[256] || CT.C256});
            }
            case C[269] || CT.C269:
            {
              return new default_transitions.SizeTransitions.new().buildTransitions(context, dart.nullCheck(route.curve), route.alignment, animation, secondaryAnimation, dart.test((t8$31 = route.popGesture, t8$31 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t8$31)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t8$33 = (t8$32 = route.gestureWidth, t8$32 == null ? null : t8$32(context)), t8$33 == null ? 20 : t8$33), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[263] || CT.C263}) : child);
            }
            case C[276] || CT.C276:
            {
              return new page_transitions_theme.FadeUpwardsPageTransitionsBuilder.new().buildTransitions(T, route, context, animation, secondaryAnimation, dart.test((t8$34 = route.popGesture, t8$34 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t8$34)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t8$36 = (t8$35 = route.gestureWidth, t8$35 == null ? null : t8$35(context)), t8$36 == null ? 20 : t8$36), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[270] || CT.C270}) : child);
            }
            case C[283] || CT.C283:
            {
              return new page_transitions_theme.ZoomPageTransitionsBuilder.new().buildTransitions(T, route, context, animation, secondaryAnimation, dart.test((t8$37 = route.popGesture, t8$37 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t8$37)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t8$39 = (t8$38 = route.gestureWidth, t8$38 == null ? null : t8$38(context)), t8$39 == null ? 20 : t8$39), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[277] || CT.C277}) : child);
            }
            case C[290] || CT.C290:
            {
              return new page_transitions_theme.PageTransitionsTheme.new().buildTransitions(T, route, context, iosAnimation, secondaryAnimation, dart.test((t8$40 = route.popGesture, t8$40 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t8$40)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t8$42 = (t8$41 = route.gestureWidth, t8$41 == null ? null : t8$41(context)), t8$42 == null ? 20 : t8$42), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[284] || CT.C284}) : child);
            }
            default:
            {
              if (extension_navigation['GetNavigation|get#customTransition'](get_main.Get) != null) {
                return dart.nullCheck(extension_navigation['GetNavigation|get#customTransition'](get_main.Get)).buildTransition(context, route.curve, route.alignment, animation, secondaryAnimation, child);
              }
              return new page_transitions_theme.PageTransitionsTheme.new().buildTransitions(T, route, context, iosAnimation, secondaryAnimation, dart.test((t8$43 = route.popGesture, t8$43 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t8$43)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t8$45 = (t8$44 = route.gestureWidth, t8$44 == null ? null : t8$44(context)), t8$45 == null ? 20 : t8$45), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[291] || CT.C291}) : child);
            }
          }
        }
      }
    }
    GetPageRouteTransitionMixin[dart.mixinOn] = PageRoute => class GetPageRouteTransitionMixin extends PageRoute {
      get previousTitle() {
        if (!(this[_previousTitle] != null)) dart.assertFailed("Cannot read the previousTitle for a route that has not yet been installed", I[14], 59, 7, "_previousTitle != null");
        return dart.nullCheck(this[_previousTitle]);
      }
      didChangePrevious(previousRoute) {
        let previousTitleString = route$.CupertinoRouteTransitionMixin.is(previousRoute) ? previousRoute.title : null;
        if (this[_previousTitle] == null) {
          this[_previousTitle] = new (T$.ValueNotifierOfStringN()).new(previousTitleString);
        } else {
          dart.nullCheck(this[_previousTitle]).value = previousTitleString;
        }
        super.didChangePrevious(previousRoute);
      }
      get transitionDuration() {
        return C[169] || CT.C169;
      }
      get barrierColor() {
        return null;
      }
      get barrierLabel() {
        return null;
      }
      canTransitionTo(nextRoute) {
        if (nextRoute == null) dart.nullFailed(I[14], 92, 49, "nextRoute");
        return get_transition_mixin.GetPageRouteTransitionMixin.is(nextRoute) && !dart.test(nextRoute.fullscreenDialog) && dart.test(nextRoute.showCupertinoParallax);
      }
      get popGestureInProgress() {
        return get_transition_mixin.GetPageRouteTransitionMixin.isPopGestureInProgress(this);
      }
      get popGestureEnabled() {
        return get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, this);
      }
      buildPage(context, animation, secondaryAnimation) {
        if (context == null) dart.nullFailed(I[14], 165, 33, "context");
        if (animation == null) dart.nullFailed(I[14], 165, 60, "animation");
        if (secondaryAnimation == null) dart.nullFailed(I[14], 166, 25, "secondaryAnimation");
        let child = this.buildContent(context);
        let result = new basic.Semantics.new({scopesRoute: true, explicitChildNodes: true, child: child, $creationLocationd_0dea112b090073317d4: C[170] || CT.C170});
        return result;
      }
      buildTransitions(context, animation, secondaryAnimation, child) {
        if (context == null) dart.nullFailed(I[14], 489, 40, "context");
        if (animation == null) dart.nullFailed(I[14], 489, 67, "animation");
        if (secondaryAnimation == null) dart.nullFailed(I[14], 490, 25, "secondaryAnimation");
        if (child == null) dart.nullFailed(I[14], 490, 52, "child");
        return get_transition_mixin.GetPageRouteTransitionMixin.buildPageTransitions(T, this, context, animation, secondaryAnimation, child);
      }
    };
    (GetPageRouteTransitionMixin[dart.mixinNew] = function() {
      this[_previousTitle] = null;
    }).prototype = GetPageRouteTransitionMixin.prototype;
    dart.addTypeTests(GetPageRouteTransitionMixin);
    GetPageRouteTransitionMixin.prototype[_is_GetPageRouteTransitionMixin_default] = true;
    dart.addTypeCaches(GetPageRouteTransitionMixin);
    GetPageRouteTransitionMixin[dart.implements] = () => [pages.PageRoute$(T)];
    dart.setMethodSignature(GetPageRouteTransitionMixin, () => ({
      __proto__: dart.getMethods(GetPageRouteTransitionMixin.__proto__),
      buildPage: dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double)])
    }));
    dart.setGetterSignature(GetPageRouteTransitionMixin, () => ({
      __proto__: dart.getGetters(GetPageRouteTransitionMixin.__proto__),
      previousTitle: change_notifier.ValueListenable$(dart.nullable(core.String)),
      transitionDuration: core.Duration,
      barrierColor: dart.nullable(ui.Color),
      barrierLabel: dart.nullable(core.String),
      popGestureInProgress: core.bool,
      popGestureEnabled: core.bool
    }));
    dart.setLibraryUri(GetPageRouteTransitionMixin, I[15]);
    dart.setFieldSignature(GetPageRouteTransitionMixin, () => ({
      __proto__: dart.getFields(GetPageRouteTransitionMixin.__proto__),
      [_previousTitle]: dart.fieldType(dart.nullable(change_notifier.ValueNotifier$(dart.nullable(core.String))))
    }));
    return GetPageRouteTransitionMixin;
  });
  get_transition_mixin.GetPageRouteTransitionMixin = get_transition_mixin.GetPageRouteTransitionMixin$();
  dart.addTypeTests(get_transition_mixin.GetPageRouteTransitionMixin, _is_GetPageRouteTransitionMixin_default);
  var child$ = dart.privateName(get_transition_mixin, "CupertinoBackGestureDetector.child");
  var gestureWidth$ = dart.privateName(get_transition_mixin, "CupertinoBackGestureDetector.gestureWidth");
  var enabledCallback$ = dart.privateName(get_transition_mixin, "CupertinoBackGestureDetector.enabledCallback");
  var onStartPopGesture$ = dart.privateName(get_transition_mixin, "CupertinoBackGestureDetector.onStartPopGesture");
  const _is_CupertinoBackGestureDetector_default = Symbol('_is_CupertinoBackGestureDetector_default');
  get_transition_mixin.CupertinoBackGestureDetector$ = dart.generic(T => {
    var CupertinoBackGestureDetectorStateOfT = () => (CupertinoBackGestureDetectorStateOfT = dart.constFn(get_transition_mixin.CupertinoBackGestureDetectorState$(T)))();
    class CupertinoBackGestureDetector extends framework.StatefulWidget {
      get child() {
        return this[child$];
      }
      set child(value) {
        super.child = value;
      }
      get gestureWidth() {
        return this[gestureWidth$];
      }
      set gestureWidth(value) {
        super.gestureWidth = value;
      }
      get enabledCallback() {
        return this[enabledCallback$];
      }
      set enabledCallback(value) {
        super.enabledCallback = value;
      }
      get onStartPopGesture() {
        return this[onStartPopGesture$];
      }
      set onStartPopGesture(value) {
        super.onStartPopGesture = value;
      }
      createState() {
        return new (CupertinoBackGestureDetectorStateOfT()).new();
      }
    }
    (CupertinoBackGestureDetector.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let enabledCallback = opts && 'enabledCallback' in opts ? opts.enabledCallback : null;
      if (enabledCallback == null) dart.nullFailed(I[14], 499, 19, "enabledCallback");
      let onStartPopGesture = opts && 'onStartPopGesture' in opts ? opts.onStartPopGesture : null;
      if (onStartPopGesture == null) dart.nullFailed(I[14], 500, 19, "onStartPopGesture");
      let child = opts && 'child' in opts ? opts.child : null;
      if (child == null) dart.nullFailed(I[14], 501, 19, "child");
      let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
      if (gestureWidth == null) dart.nullFailed(I[14], 502, 19, "gestureWidth");
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[enabledCallback$] = enabledCallback;
      this[onStartPopGesture$] = onStartPopGesture;
      this[child$] = child;
      this[gestureWidth$] = gestureWidth;
      CupertinoBackGestureDetector.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = CupertinoBackGestureDetector.prototype;
    dart.addTypeTests(CupertinoBackGestureDetector);
    CupertinoBackGestureDetector.prototype[_is_CupertinoBackGestureDetector_default] = true;
    dart.addTypeCaches(CupertinoBackGestureDetector);
    dart.setMethodSignature(CupertinoBackGestureDetector, () => ({
      __proto__: dart.getMethods(CupertinoBackGestureDetector.__proto__),
      createState: dart.fnType(get_transition_mixin.CupertinoBackGestureDetectorState$(T), [])
    }));
    dart.setLibraryUri(CupertinoBackGestureDetector, I[15]);
    dart.setFieldSignature(CupertinoBackGestureDetector, () => ({
      __proto__: dart.getFields(CupertinoBackGestureDetector.__proto__),
      child: dart.finalFieldType(framework.Widget),
      gestureWidth: dart.finalFieldType(core.double),
      enabledCallback: dart.finalFieldType(dart.fnType(core.bool, [])),
      onStartPopGesture: dart.finalFieldType(dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), []))
    }));
    return CupertinoBackGestureDetector;
  });
  get_transition_mixin.CupertinoBackGestureDetector = get_transition_mixin.CupertinoBackGestureDetector$();
  dart.addTypeTests(get_transition_mixin.CupertinoBackGestureDetector, _is_CupertinoBackGestureDetector_default);
  var _backGestureController = dart.privateName(get_transition_mixin, "_backGestureController");
  var __CupertinoBackGestureDetectorState__recognizer = dart.privateName(get_transition_mixin, "_#CupertinoBackGestureDetectorState#_recognizer");
  var __CupertinoBackGestureDetectorState__recognizer_isSet = dart.privateName(get_transition_mixin, "_#CupertinoBackGestureDetectorState#_recognizer#isSet");
  var _recognizer = dart.privateName(get_transition_mixin, "_recognizer");
  var _handleDragStart = dart.privateName(get_transition_mixin, "_handleDragStart");
  var _handleDragUpdate = dart.privateName(get_transition_mixin, "_handleDragUpdate");
  var _handleDragEnd = dart.privateName(get_transition_mixin, "_handleDragEnd");
  var _handleDragCancel = dart.privateName(get_transition_mixin, "_handleDragCancel");
  var _convertToLogical = dart.privateName(get_transition_mixin, "_convertToLogical");
  var _handlePointerDown = dart.privateName(get_transition_mixin, "_handlePointerDown");
  var _name$2 = dart.privateName(ui, "_name");
  const _is_CupertinoBackGestureDetectorState_default = Symbol('_is_CupertinoBackGestureDetectorState_default');
  get_transition_mixin.CupertinoBackGestureDetectorState$ = dart.generic(T => {
    class CupertinoBackGestureDetectorState extends framework.State$(get_transition_mixin.CupertinoBackGestureDetector$(T)) {
      get [_recognizer]() {
        let t8;
        return dart.test(this[__CupertinoBackGestureDetectorState__recognizer_isSet]) ? (t8 = this[__CupertinoBackGestureDetectorState__recognizer], t8) : dart.throw(new _internal.LateError.fieldNI("_recognizer"));
      }
      set [_recognizer](t8) {
        if (t8 == null) dart.nullFailed(I[14], 521, 40, "null");
        this[__CupertinoBackGestureDetectorState__recognizer_isSet] = true;
        this[__CupertinoBackGestureDetectorState__recognizer] = t8;
      }
      initState() {
        let t9;
        super.initState();
        this[_recognizer] = (t9 = new monodrag.HorizontalDragGestureRecognizer.new({debugOwner: this}), (() => {
          t9.onStart = dart.bind(this, _handleDragStart);
          t9.onUpdate = dart.bind(this, _handleDragUpdate);
          t9.onEnd = dart.bind(this, _handleDragEnd);
          t9.onCancel = dart.bind(this, _handleDragCancel);
          return t9;
        })());
      }
      dispose() {
        this[_recognizer].dispose();
        super.dispose();
      }
      [_handleDragStart](details) {
        if (details == null) dart.nullFailed(I[14], 539, 42, "details");
        if (!dart.test(this.mounted)) dart.assertFailed(null, I[14], 540, 12, "mounted");
        if (!(this[_backGestureController] == null)) dart.assertFailed(null, I[14], 541, 12, "_backGestureController == null");
        this[_backGestureController] = this.widget.onStartPopGesture();
      }
      [_handleDragUpdate](details) {
        if (details == null) dart.nullFailed(I[14], 545, 44, "details");
        if (!dart.test(this.mounted)) dart.assertFailed(null, I[14], 546, 12, "mounted");
        if (!(this[_backGestureController] != null)) dart.assertFailed(null, I[14], 547, 12, "_backGestureController != null");
        dart.nullCheck(this[_backGestureController]).dragUpdate(this[_convertToLogical](dart.nullCheck(details.primaryDelta) / dart.notNull(dart.nullCheck(this.context.size).width)));
      }
      [_handleDragEnd](details) {
        if (details == null) dart.nullFailed(I[14], 552, 38, "details");
        if (!dart.test(this.mounted)) dart.assertFailed(null, I[14], 553, 12, "mounted");
        if (!(this[_backGestureController] != null)) dart.assertFailed(null, I[14], 554, 12, "_backGestureController != null");
        dart.nullCheck(this[_backGestureController]).dragEnd(this[_convertToLogical](dart.notNull(details.velocity.pixelsPerSecond.dx) / dart.notNull(dart.nullCheck(this.context.size).width)));
        this[_backGestureController] = null;
      }
      [_handleDragCancel]() {
        let t9;
        if (!dart.test(this.mounted)) dart.assertFailed(null, I[14], 561, 12, "mounted");
        t9 = this[_backGestureController];
        t9 == null ? null : t9.dragEnd(0.0);
        this[_backGestureController] = null;
      }
      [_handlePointerDown](event) {
        if (event == null) dart.nullFailed(I[14], 569, 44, "event");
        if (dart.test(this.widget.enabledCallback())) this[_recognizer].addPointer(event);
      }
      [_convertToLogical](value) {
        if (value == null) dart.nullFailed(I[14], 573, 35, "value");
        switch (basic.Directionality.of(this.context)) {
          case C[297] || CT.C297:
          {
            return -dart.notNull(value);
          }
          case C[298] || CT.C298:
          {
            return value;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      }
      build(context) {
        if (context == null) dart.nullFailed(I[14], 583, 29, "context");
        if (!dart.test(debug.debugCheckHasDirectionality(context))) dart.assertFailed(null, I[14], 584, 12, "debugCheckHasDirectionality(context)");
        let dragAreaWidth = basic.Directionality.of(context) == ui.TextDirection.ltr ? media_query.MediaQuery.of(context).padding.left : media_query.MediaQuery.of(context).padding.right;
        dragAreaWidth = math.max(core.double, dragAreaWidth, this.widget.gestureWidth);
        return new basic.Stack.new({fit: stack.StackFit.passthrough, children: T$.JSArrayOfWidget().of([this.widget.child, new basic.PositionedDirectional.new({start: 0.0, width: dragAreaWidth, top: 0.0, bottom: 0.0, child: new basic.Listener.new({onPointerDown: dart.bind(this, _handlePointerDown), behavior: proxy_box.HitTestBehavior.translucent, $creationLocationd_0dea112b090073317d4: C[299] || CT.C299}), $creationLocationd_0dea112b090073317d4: C[303] || CT.C303})]), $creationLocationd_0dea112b090073317d4: C[310] || CT.C310});
      }
    }
    (CupertinoBackGestureDetectorState.new = function() {
      this[_backGestureController] = null;
      this[__CupertinoBackGestureDetectorState__recognizer] = null;
      this[__CupertinoBackGestureDetectorState__recognizer_isSet] = false;
      CupertinoBackGestureDetectorState.__proto__.new.call(this);
      ;
    }).prototype = CupertinoBackGestureDetectorState.prototype;
    dart.addTypeTests(CupertinoBackGestureDetectorState);
    CupertinoBackGestureDetectorState.prototype[_is_CupertinoBackGestureDetectorState_default] = true;
    dart.addTypeCaches(CupertinoBackGestureDetectorState);
    dart.setMethodSignature(CupertinoBackGestureDetectorState, () => ({
      __proto__: dart.getMethods(CupertinoBackGestureDetectorState.__proto__),
      [_handleDragStart]: dart.fnType(dart.void, [drag_details.DragStartDetails]),
      [_handleDragUpdate]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
      [_handleDragEnd]: dart.fnType(dart.void, [drag_details.DragEndDetails]),
      [_handleDragCancel]: dart.fnType(dart.void, []),
      [_handlePointerDown]: dart.fnType(dart.void, [events.PointerDownEvent]),
      [_convertToLogical]: dart.fnType(core.double, [core.double]),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setGetterSignature(CupertinoBackGestureDetectorState, () => ({
      __proto__: dart.getGetters(CupertinoBackGestureDetectorState.__proto__),
      [_recognizer]: monodrag.HorizontalDragGestureRecognizer
    }));
    dart.setSetterSignature(CupertinoBackGestureDetectorState, () => ({
      __proto__: dart.getSetters(CupertinoBackGestureDetectorState.__proto__),
      [_recognizer]: monodrag.HorizontalDragGestureRecognizer
    }));
    dart.setLibraryUri(CupertinoBackGestureDetectorState, I[15]);
    dart.setFieldSignature(CupertinoBackGestureDetectorState, () => ({
      __proto__: dart.getFields(CupertinoBackGestureDetectorState.__proto__),
      [_backGestureController]: dart.fieldType(dart.nullable(get_transition_mixin.CupertinoBackGestureController$(T))),
      [__CupertinoBackGestureDetectorState__recognizer]: dart.fieldType(dart.nullable(monodrag.HorizontalDragGestureRecognizer)),
      [__CupertinoBackGestureDetectorState__recognizer_isSet]: dart.fieldType(core.bool)
    }));
    return CupertinoBackGestureDetectorState;
  });
  get_transition_mixin.CupertinoBackGestureDetectorState = get_transition_mixin.CupertinoBackGestureDetectorState$();
  dart.addTypeTests(get_transition_mixin.CupertinoBackGestureDetectorState, _is_CupertinoBackGestureDetectorState_default);
  var controller$ = dart.privateName(get_transition_mixin, "CupertinoBackGestureController.controller");
  var navigator$ = dart.privateName(get_transition_mixin, "CupertinoBackGestureController.navigator");
  var Cubic_d = dart.privateName(curves, "Cubic.d");
  var Cubic_c = dart.privateName(curves, "Cubic.c");
  var Cubic_b = dart.privateName(curves, "Cubic.b");
  var Cubic_a = dart.privateName(curves, "Cubic.a");
  const _is_CupertinoBackGestureController_default = Symbol('_is_CupertinoBackGestureController_default');
  get_transition_mixin.CupertinoBackGestureController$ = dart.generic(T => {
    class CupertinoBackGestureController extends core.Object {
      get controller() {
        return this[controller$];
      }
      set controller(value) {
        super.controller = value;
      }
      get navigator() {
        return this[navigator$];
      }
      set navigator(value) {
        super.navigator = value;
      }
      dragUpdate(delta) {
        let t9;
        if (delta == null) dart.nullFailed(I[14], 626, 26, "delta");
        t9 = this.controller;
        t9.value = dart.notNull(t9.value) - dart.notNull(delta);
      }
      dragEnd(velocity) {
        if (velocity == null) dart.nullFailed(I[14], 632, 23, "velocity");
        let animationCurve = C[314] || CT.C314;
        let animateForward = null;
        if (velocity[$abs]() >= 1) {
          animateForward = dart.notNull(velocity) <= 0;
        } else {
          animateForward = dart.notNull(this.controller.value) > 0.5;
        }
        if (dart.test(animateForward)) {
          let droppedPageForwardAnimationTime = math.min(core.int, dart.nullCheck(ui.lerpDouble(800, 0, this.controller.value))[$floor](), 300);
          this.controller.animateTo(1.0, {duration: new core.Duration.new({milliseconds: droppedPageForwardAnimationTime}), curve: animationCurve});
        } else {
          this.navigator.pop(T$.ObjectN());
          if (dart.test(this.controller.isAnimating)) {
            let droppedPageBackAnimationTime = dart.nullCheck(ui.lerpDouble(0, 800, this.controller.value))[$floor]();
            this.controller.animateBack(0.0, {duration: new core.Duration.new({milliseconds: droppedPageBackAnimationTime}), curve: animationCurve});
          }
        }
        if (dart.test(this.controller.isAnimating)) {
          let animationStatusCallback = null;
          let animationStatusCallback$35isSet = false;
          function animationStatusCallback$35get() {
            return animationStatusCallback$35isSet ? animationStatusCallback : dart.throw(new _internal.LateError.localNI("animationStatusCallback"));
          }
          dart.fn(animationStatusCallback$35get, T$.VoidToFn());
          function animationStatusCallback$35set(t12) {
            if (t12 == null) dart.nullFailed(I[14], 685, 36, "null");
            animationStatusCallback$35isSet = true;
            return animationStatusCallback = t12;
          }
          dart.fn(animationStatusCallback$35set, T$.FnTodynamic());
          animationStatusCallback$35set(dart.fn(status => {
            if (status == null) dart.nullFailed(I[14], 686, 34, "status");
            this.navigator.didStopUserGesture();
            this.controller.removeStatusListener(animationStatusCallback$35get());
          }, T$.AnimationStatusTovoid()));
          this.controller.addStatusListener(animationStatusCallback$35get());
        } else {
          this.navigator.didStopUserGesture();
        }
      }
    }
    (CupertinoBackGestureController.new = function(opts) {
      let navigator = opts && 'navigator' in opts ? opts.navigator : null;
      if (navigator == null) dart.nullFailed(I[14], 615, 19, "navigator");
      let controller = opts && 'controller' in opts ? opts.controller : null;
      if (controller == null) dart.nullFailed(I[14], 616, 19, "controller");
      this[navigator$] = navigator;
      this[controller$] = controller;
      this.navigator.didStartUserGesture();
    }).prototype = CupertinoBackGestureController.prototype;
    dart.addTypeTests(CupertinoBackGestureController);
    CupertinoBackGestureController.prototype[_is_CupertinoBackGestureController_default] = true;
    dart.addTypeCaches(CupertinoBackGestureController);
    dart.setMethodSignature(CupertinoBackGestureController, () => ({
      __proto__: dart.getMethods(CupertinoBackGestureController.__proto__),
      dragUpdate: dart.fnType(dart.void, [core.double]),
      dragEnd: dart.fnType(dart.void, [core.double])
    }));
    dart.setLibraryUri(CupertinoBackGestureController, I[15]);
    dart.setFieldSignature(CupertinoBackGestureController, () => ({
      __proto__: dart.getFields(CupertinoBackGestureController.__proto__),
      controller: dart.finalFieldType(animation_controller.AnimationController),
      navigator: dart.finalFieldType(navigator.NavigatorState)
    }));
    return CupertinoBackGestureController;
  });
  get_transition_mixin.CupertinoBackGestureController = get_transition_mixin.CupertinoBackGestureController$();
  dart.addTypeTests(get_transition_mixin.CupertinoBackGestureController, _is_CupertinoBackGestureController_default);
  dart.defineLazy(get_transition_mixin, {
    /*get_transition_mixin._kBackGestureWidth*/get _kBackGestureWidth() {
      return 20;
    },
    /*get_transition_mixin._kMinFlingVelocity*/get _kMinFlingVelocity() {
      return 1;
    },
    /*get_transition_mixin._kMaxDroppedSwipePageForwardAnimationTime*/get _kMaxDroppedSwipePageForwardAnimationTime() {
      return 800;
    },
    /*get_transition_mixin._kMaxPageBackAnimationTime*/get _kMaxPageBackAnimationTime() {
      return 300;
    }
  }, false);
  const _is_PageRouteReportMixin_default = Symbol('_is_PageRouteReportMixin_default');
  default_route.PageRouteReportMixin$ = dart.generic(T => {
    class PageRouteReportMixin extends navigator.Route$(T) {}
    PageRouteReportMixin[dart.mixinOn] = Route => class PageRouteReportMixin extends Route {
      install() {
        super.install();
        router_report.RouterReportManager.reportCurrentRoute(this);
      }
      dispose() {
        super.dispose();
        router_report.RouterReportManager.reportRouteDispose(this);
      }
    };
    dart.addTypeTests(PageRouteReportMixin);
    PageRouteReportMixin.prototype[_is_PageRouteReportMixin_default] = true;
    dart.addTypeCaches(PageRouteReportMixin);
    PageRouteReportMixin[dart.implements] = () => [navigator.Route$(T)];
    dart.setLibraryUri(PageRouteReportMixin, I[16]);
    return PageRouteReportMixin;
  });
  default_route.PageRouteReportMixin = default_route.PageRouteReportMixin$();
  dart.addTypeTests(default_route.PageRouteReportMixin, _is_PageRouteReportMixin_default);
  var transitionDuration$1 = dart.privateName(default_route, "GetPageRoute.transitionDuration");
  var page$ = dart.privateName(default_route, "GetPageRoute.page");
  var routeName$ = dart.privateName(default_route, "GetPageRoute.routeName");
  var customTransition$1 = dart.privateName(default_route, "GetPageRoute.customTransition");
  var binding$0 = dart.privateName(default_route, "GetPageRoute.binding");
  var parameter$ = dart.privateName(default_route, "GetPageRoute.parameter");
  var bindings$ = dart.privateName(default_route, "GetPageRoute.bindings");
  var showCupertinoParallax$ = dart.privateName(default_route, "GetPageRoute.showCupertinoParallax");
  var opaque$ = dart.privateName(default_route, "GetPageRoute.opaque");
  var popGesture$1 = dart.privateName(default_route, "GetPageRoute.popGesture");
  var barrierDismissible$ = dart.privateName(default_route, "GetPageRoute.barrierDismissible");
  var transition$ = dart.privateName(default_route, "GetPageRoute.transition");
  var curve$ = dart.privateName(default_route, "GetPageRoute.curve");
  var alignment$ = dart.privateName(default_route, "GetPageRoute.alignment");
  var middlewares$ = dart.privateName(default_route, "GetPageRoute.middlewares");
  var barrierColor$ = dart.privateName(default_route, "GetPageRoute.barrierColor");
  var barrierLabel$ = dart.privateName(default_route, "GetPageRoute.barrierLabel");
  var maintainState$ = dart.privateName(default_route, "GetPageRoute.maintainState");
  var title$1 = dart.privateName(default_route, "GetPageRoute.title");
  var gestureWidth$0 = dart.privateName(default_route, "GetPageRoute.gestureWidth");
  var _child = dart.privateName(default_route, "_child");
  var _getChild = dart.privateName(default_route, "_getChild");
  const _is_GetPageRoute_default = Symbol('_is_GetPageRoute_default');
  default_route.GetPageRoute$ = dart.generic(T => {
    const PageRoute_GetPageRouteTransitionMixin$36 = class PageRoute_GetPageRouteTransitionMixin extends pages.PageRoute$(T) {};
    (PageRoute_GetPageRouteTransitionMixin$36.new = function(opts) {
      get_transition_mixin.GetPageRouteTransitionMixin$(T)[dart.mixinNew].call(this);
      PageRoute_GetPageRouteTransitionMixin$36.__proto__.new.call(this, opts);
    }).prototype = PageRoute_GetPageRouteTransitionMixin$36.prototype;
    dart.applyMixin(PageRoute_GetPageRouteTransitionMixin$36, get_transition_mixin.GetPageRouteTransitionMixin$(T));
    const PageRoute_PageRouteReportMixin$36 = class PageRoute_PageRouteReportMixin extends PageRoute_GetPageRouteTransitionMixin$36 {};
    (PageRoute_PageRouteReportMixin$36.new = function(opts) {
      PageRoute_PageRouteReportMixin$36.__proto__.new.call(this, opts);
    }).prototype = PageRoute_PageRouteReportMixin$36.prototype;
    dart.applyMixin(PageRoute_PageRouteReportMixin$36, default_route.PageRouteReportMixin$(T));
    class GetPageRoute extends PageRoute_PageRouteReportMixin$36 {
      get transitionDuration() {
        return this[transitionDuration$1];
      }
      set transitionDuration(value) {
        super.transitionDuration = value;
      }
      get page() {
        return this[page$];
      }
      set page(value) {
        super.page = value;
      }
      get routeName() {
        return this[routeName$];
      }
      set routeName(value) {
        super.routeName = value;
      }
      get customTransition() {
        return this[customTransition$1];
      }
      set customTransition(value) {
        super.customTransition = value;
      }
      get binding() {
        return this[binding$0];
      }
      set binding(value) {
        super.binding = value;
      }
      get parameter() {
        return this[parameter$];
      }
      set parameter(value) {
        super.parameter = value;
      }
      get bindings() {
        return this[bindings$];
      }
      set bindings(value) {
        super.bindings = value;
      }
      get showCupertinoParallax() {
        return this[showCupertinoParallax$];
      }
      set showCupertinoParallax(value) {
        super.showCupertinoParallax = value;
      }
      get opaque() {
        return this[opaque$];
      }
      set opaque(value) {
        super.opaque = value;
      }
      get popGesture() {
        return this[popGesture$1];
      }
      set popGesture(value) {
        super.popGesture = value;
      }
      get barrierDismissible() {
        return this[barrierDismissible$];
      }
      set barrierDismissible(value) {
        super.barrierDismissible = value;
      }
      get transition() {
        return this[transition$];
      }
      set transition(value) {
        super.transition = value;
      }
      get curve() {
        return this[curve$];
      }
      set curve(value) {
        super.curve = value;
      }
      get alignment() {
        return this[alignment$];
      }
      set alignment(value) {
        super.alignment = value;
      }
      get middlewares() {
        return this[middlewares$];
      }
      set middlewares(value) {
        super.middlewares = value;
      }
      get barrierColor() {
        return this[barrierColor$];
      }
      set barrierColor(value) {
        super.barrierColor = value;
      }
      get barrierLabel() {
        return this[barrierLabel$];
      }
      set barrierLabel(value) {
        super.barrierLabel = value;
      }
      get maintainState() {
        return this[maintainState$];
      }
      set maintainState(value) {
        super.maintainState = value;
      }
      get title() {
        return this[title$1];
      }
      set title(value) {
        super.title = value;
      }
      get gestureWidth() {
        return this[gestureWidth$0];
      }
      set gestureWidth(value) {
        super.gestureWidth = value;
      }
      dispose() {
        super.dispose();
        let middlewareRunner = new route_middleware.MiddlewareRunner.new(this.middlewares);
        middlewareRunner.runOnPageDispose();
      }
      [_getChild]() {
        if (this[_child] != null) return dart.nullCheck(this[_child]);
        let middlewareRunner = new route_middleware.MiddlewareRunner.new(this.middlewares);
        let localbindings = (() => {
          let t14 = T$.JSArrayOfBindings().of([]);
          if (this.bindings != null) t14[$addAll](dart.nullCheck(this.bindings));
          if (this.binding != null) t14[$addAll](T$.JSArrayOfBindings().of([dart.nullCheck(this.binding)]));
          return t14;
        })();
        let bindingsToBind = middlewareRunner.runOnBindingsStart(localbindings);
        if (bindingsToBind != null) {
          for (let binding of bindingsToBind) {
            binding.dependencies();
          }
        }
        let pageToBuild = dart.nullCheck(middlewareRunner.runOnPageBuildStart(this.page));
        this[_child] = middlewareRunner.runOnPageBuilt(pageToBuild());
        return dart.nullCheck(this[_child]);
      }
      buildContent(context) {
        if (context == null) dart.nullFailed(I[17], 118, 36, "context");
        return this[_getChild]();
      }
      get debugLabel() {
        return dart.str(super.debugLabel) + "(" + dart.str(this.settings.name) + ")";
      }
    }
    (GetPageRoute.new = function(opts) {
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : C[315] || CT.C315;
      if (transitionDuration == null) dart.nullFailed(I[17], 32, 10, "transitionDuration");
      let opaque = opts && 'opaque' in opts ? opts.opaque : true;
      if (opaque == null) dart.nullFailed(I[17], 33, 10, "opaque");
      let parameter = opts && 'parameter' in opts ? opts.parameter : null;
      let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
      let curve = opts && 'curve' in opts ? opts.curve : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let transition = opts && 'transition' in opts ? opts.transition : null;
      let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
      let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
      let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : false;
      if (barrierDismissible == null) dart.nullFailed(I[17], 41, 10, "barrierDismissible");
      let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : null;
      let binding = opts && 'binding' in opts ? opts.binding : null;
      let bindings = opts && 'bindings' in opts ? opts.bindings : null;
      let routeName = opts && 'routeName' in opts ? opts.routeName : null;
      let page = opts && 'page' in opts ? opts.page : null;
      let title = opts && 'title' in opts ? opts.title : null;
      let showCupertinoParallax = opts && 'showCupertinoParallax' in opts ? opts.showCupertinoParallax : true;
      if (showCupertinoParallax == null) dart.nullFailed(I[17], 48, 10, "showCupertinoParallax");
      let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
      let maintainState = opts && 'maintainState' in opts ? opts.maintainState : true;
      if (maintainState == null) dart.nullFailed(I[17], 50, 10, "maintainState");
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      if (fullscreenDialog == null) dart.nullFailed(I[17], 51, 10, "fullscreenDialog");
      let middlewares = opts && 'middlewares' in opts ? opts.middlewares : null;
      this[_child] = null;
      this[transitionDuration$1] = transitionDuration;
      this[opaque$] = opaque;
      this[parameter$] = parameter;
      this[gestureWidth$0] = gestureWidth;
      this[curve$] = curve;
      this[alignment$] = alignment;
      this[transition$] = transition;
      this[popGesture$1] = popGesture;
      this[customTransition$1] = customTransition;
      this[barrierDismissible$] = barrierDismissible;
      this[barrierColor$] = barrierColor;
      this[binding$0] = binding;
      this[bindings$] = bindings;
      this[routeName$] = routeName;
      this[page$] = page;
      this[title$1] = title;
      this[showCupertinoParallax$] = showCupertinoParallax;
      this[barrierLabel$] = barrierLabel;
      this[maintainState$] = maintainState;
      this[middlewares$] = middlewares;
      GetPageRoute.__proto__.new.call(this, {settings: settings, fullscreenDialog: fullscreenDialog});
      ;
    }).prototype = GetPageRoute.prototype;
    dart.addTypeTests(GetPageRoute);
    GetPageRoute.prototype[_is_GetPageRoute_default] = true;
    dart.addTypeCaches(GetPageRoute);
    dart.setMethodSignature(GetPageRoute, () => ({
      __proto__: dart.getMethods(GetPageRoute.__proto__),
      [_getChild]: dart.fnType(framework.Widget, []),
      buildContent: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(GetPageRoute, I[16]);
    dart.setFieldSignature(GetPageRoute, () => ({
      __proto__: dart.getFields(GetPageRoute.__proto__),
      transitionDuration: dart.finalFieldType(core.Duration),
      page: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, []))),
      routeName: dart.finalFieldType(dart.nullable(core.String)),
      customTransition: dart.finalFieldType(dart.nullable(custom_transition.CustomTransition)),
      binding: dart.finalFieldType(dart.nullable(bindings_interface.Bindings)),
      parameter: dart.finalFieldType(dart.nullable(core.Map$(core.String, core.String))),
      bindings: dart.finalFieldType(dart.nullable(core.List$(bindings_interface.Bindings))),
      showCupertinoParallax: dart.finalFieldType(core.bool),
      opaque: dart.finalFieldType(core.bool),
      popGesture: dart.finalFieldType(dart.nullable(core.bool)),
      barrierDismissible: dart.finalFieldType(core.bool),
      transition: dart.finalFieldType(dart.nullable(transitions_type.Transition)),
      curve: dart.finalFieldType(dart.nullable(curves.Curve)),
      alignment: dart.finalFieldType(dart.nullable(alignment.Alignment)),
      middlewares: dart.finalFieldType(dart.nullable(core.List$(route_middleware.GetMiddleware))),
      barrierColor: dart.finalFieldType(dart.nullable(ui.Color)),
      barrierLabel: dart.finalFieldType(dart.nullable(core.String)),
      maintainState: dart.finalFieldType(core.bool),
      [_child]: dart.fieldType(dart.nullable(framework.Widget)),
      title: dart.finalFieldType(dart.nullable(core.String)),
      gestureWidth: dart.finalFieldType(dart.nullable(dart.fnType(core.double, [framework.BuildContext])))
    }));
    return GetPageRoute;
  });
  default_route.GetPageRoute = default_route.GetPageRoute$();
  dart.addTypeTests(default_route.GetPageRoute, _is_GetPageRoute_default);
  var snackbarStatus$ = dart.privateName(snack, "GetBar.snackbarStatus");
  var title$2 = dart.privateName(snack, "GetBar.title");
  var message$ = dart.privateName(snack, "GetBar.message");
  var titleText$ = dart.privateName(snack, "GetBar.titleText");
  var messageText$ = dart.privateName(snack, "GetBar.messageText");
  var backgroundColor$ = dart.privateName(snack, "GetBar.backgroundColor");
  var leftBarIndicatorColor$ = dart.privateName(snack, "GetBar.leftBarIndicatorColor");
  var boxShadows$ = dart.privateName(snack, "GetBar.boxShadows");
  var backgroundGradient$ = dart.privateName(snack, "GetBar.backgroundGradient");
  var icon$ = dart.privateName(snack, "GetBar.icon");
  var shouldIconPulse$ = dart.privateName(snack, "GetBar.shouldIconPulse");
  var mainButton$ = dart.privateName(snack, "GetBar.mainButton");
  var onTap$ = dart.privateName(snack, "GetBar.onTap");
  var duration$ = dart.privateName(snack, "GetBar.duration");
  var showProgressIndicator$ = dart.privateName(snack, "GetBar.showProgressIndicator");
  var progressIndicatorController$ = dart.privateName(snack, "GetBar.progressIndicatorController");
  var progressIndicatorBackgroundColor$ = dart.privateName(snack, "GetBar.progressIndicatorBackgroundColor");
  var progressIndicatorValueColor$ = dart.privateName(snack, "GetBar.progressIndicatorValueColor");
  var isDismissible$ = dart.privateName(snack, "GetBar.isDismissible");
  var maxWidth$ = dart.privateName(snack, "GetBar.maxWidth");
  var margin$ = dart.privateName(snack, "GetBar.margin");
  var padding$ = dart.privateName(snack, "GetBar.padding");
  var borderRadius$ = dart.privateName(snack, "GetBar.borderRadius");
  var borderColor$ = dart.privateName(snack, "GetBar.borderColor");
  var borderWidth$ = dart.privateName(snack, "GetBar.borderWidth");
  var snackPosition$ = dart.privateName(snack, "GetBar.snackPosition");
  var dismissDirection$ = dart.privateName(snack, "GetBar.dismissDirection");
  var snackStyle$ = dart.privateName(snack, "GetBar.snackStyle");
  var forwardAnimationCurve$ = dart.privateName(snack, "GetBar.forwardAnimationCurve");
  var reverseAnimationCurve$ = dart.privateName(snack, "GetBar.reverseAnimationCurve");
  var animationDuration$ = dart.privateName(snack, "GetBar.animationDuration");
  var barBlur$ = dart.privateName(snack, "GetBar.barBlur");
  var overlayBlur$ = dart.privateName(snack, "GetBar.overlayBlur");
  var overlayColor$ = dart.privateName(snack, "GetBar.overlayColor");
  var userInputForm$ = dart.privateName(snack, "GetBar.userInputForm");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var Color_value = dart.privateName(ui, "Color.value");
  var _name$3 = dart.privateName(snack, "_name");
  const _is_GetBar_default = Symbol('_is_GetBar_default');
  snack.GetBar$ = dart.generic(T => {
    var _GetBarStateOfT = () => (_GetBarStateOfT = dart.constFn(snack._GetBarState$(T)))();
    class GetBar extends framework.StatefulWidget {
      get snackbarStatus() {
        return this[snackbarStatus$];
      }
      set snackbarStatus(value) {
        super.snackbarStatus = value;
      }
      get title() {
        return this[title$2];
      }
      set title(value) {
        super.title = value;
      }
      get message() {
        return this[message$];
      }
      set message(value) {
        super.message = value;
      }
      get titleText() {
        return this[titleText$];
      }
      set titleText(value) {
        super.titleText = value;
      }
      get messageText() {
        return this[messageText$];
      }
      set messageText(value) {
        super.messageText = value;
      }
      get backgroundColor() {
        return this[backgroundColor$];
      }
      set backgroundColor(value) {
        super.backgroundColor = value;
      }
      get leftBarIndicatorColor() {
        return this[leftBarIndicatorColor$];
      }
      set leftBarIndicatorColor(value) {
        super.leftBarIndicatorColor = value;
      }
      get boxShadows() {
        return this[boxShadows$];
      }
      set boxShadows(value) {
        super.boxShadows = value;
      }
      get backgroundGradient() {
        return this[backgroundGradient$];
      }
      set backgroundGradient(value) {
        super.backgroundGradient = value;
      }
      get icon() {
        return this[icon$];
      }
      set icon(value) {
        super.icon = value;
      }
      get shouldIconPulse() {
        return this[shouldIconPulse$];
      }
      set shouldIconPulse(value) {
        super.shouldIconPulse = value;
      }
      get mainButton() {
        return this[mainButton$];
      }
      set mainButton(value) {
        super.mainButton = value;
      }
      get onTap() {
        return this[onTap$];
      }
      set onTap(value) {
        super.onTap = value;
      }
      get duration() {
        return this[duration$];
      }
      set duration(value) {
        super.duration = value;
      }
      get showProgressIndicator() {
        return this[showProgressIndicator$];
      }
      set showProgressIndicator(value) {
        super.showProgressIndicator = value;
      }
      get progressIndicatorController() {
        return this[progressIndicatorController$];
      }
      set progressIndicatorController(value) {
        super.progressIndicatorController = value;
      }
      get progressIndicatorBackgroundColor() {
        return this[progressIndicatorBackgroundColor$];
      }
      set progressIndicatorBackgroundColor(value) {
        super.progressIndicatorBackgroundColor = value;
      }
      get progressIndicatorValueColor() {
        return this[progressIndicatorValueColor$];
      }
      set progressIndicatorValueColor(value) {
        super.progressIndicatorValueColor = value;
      }
      get isDismissible() {
        return this[isDismissible$];
      }
      set isDismissible(value) {
        super.isDismissible = value;
      }
      get maxWidth() {
        return this[maxWidth$];
      }
      set maxWidth(value) {
        super.maxWidth = value;
      }
      get margin() {
        return this[margin$];
      }
      set margin(value) {
        super.margin = value;
      }
      get padding() {
        return this[padding$];
      }
      set padding(value) {
        super.padding = value;
      }
      get borderRadius() {
        return this[borderRadius$];
      }
      set borderRadius(value) {
        super.borderRadius = value;
      }
      get borderColor() {
        return this[borderColor$];
      }
      set borderColor(value) {
        super.borderColor = value;
      }
      get borderWidth() {
        return this[borderWidth$];
      }
      set borderWidth(value) {
        super.borderWidth = value;
      }
      get snackPosition() {
        return this[snackPosition$];
      }
      set snackPosition(value) {
        super.snackPosition = value;
      }
      get dismissDirection() {
        return this[dismissDirection$];
      }
      set dismissDirection(value) {
        super.dismissDirection = value;
      }
      get snackStyle() {
        return this[snackStyle$];
      }
      set snackStyle(value) {
        super.snackStyle = value;
      }
      get forwardAnimationCurve() {
        return this[forwardAnimationCurve$];
      }
      set forwardAnimationCurve(value) {
        super.forwardAnimationCurve = value;
      }
      get reverseAnimationCurve() {
        return this[reverseAnimationCurve$];
      }
      set reverseAnimationCurve(value) {
        super.reverseAnimationCurve = value;
      }
      get animationDuration() {
        return this[animationDuration$];
      }
      set animationDuration(value) {
        super.animationDuration = value;
      }
      get barBlur() {
        return this[barBlur$];
      }
      set barBlur(value) {
        super.barBlur = value;
      }
      get overlayBlur() {
        return this[overlayBlur$];
      }
      set overlayBlur(value) {
        super.overlayBlur = value;
      }
      get overlayColor() {
        return this[overlayColor$];
      }
      set overlayColor(value) {
        super.overlayColor = value;
      }
      get userInputForm() {
        return this[userInputForm$];
      }
      set userInputForm(value) {
        super.userInputForm = value;
      }
      show(T) {
        return async.async(dart.nullable(T), (function* show() {
          return extension_navigation['ExtensionSnackbar|showSnackbar'](T, get_main.Get, this);
        }).bind(this));
      }
      createState() {
        return new (_GetBarStateOfT()).new();
      }
    }
    (GetBar.new = function(opts) {
      let t15;
      let key = opts && 'key' in opts ? opts.key : null;
      let title = opts && 'title' in opts ? opts.title : null;
      let message = opts && 'message' in opts ? opts.message : null;
      let titleText = opts && 'titleText' in opts ? opts.titleText : null;
      let messageText = opts && 'messageText' in opts ? opts.messageText : null;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let shouldIconPulse = opts && 'shouldIconPulse' in opts ? opts.shouldIconPulse : true;
      if (shouldIconPulse == null) dart.nullFailed(I[18], 19, 10, "shouldIconPulse");
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let margin = opts && 'margin' in opts ? opts.margin : C[316] || CT.C316;
      if (margin == null) dart.nullFailed(I[18], 21, 10, "margin");
      let padding = opts && 'padding' in opts ? opts.padding : C[317] || CT.C317;
      if (padding == null) dart.nullFailed(I[18], 22, 10, "padding");
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : 0;
      if (borderRadius == null) dart.nullFailed(I[18], 23, 10, "borderRadius");
      let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
      let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : 1;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : C[318] || CT.C318;
      if (backgroundColor == null) dart.nullFailed(I[18], 26, 10, "backgroundColor");
      let leftBarIndicatorColor = opts && 'leftBarIndicatorColor' in opts ? opts.leftBarIndicatorColor : null;
      let boxShadows = opts && 'boxShadows' in opts ? opts.boxShadows : null;
      let backgroundGradient = opts && 'backgroundGradient' in opts ? opts.backgroundGradient : null;
      let mainButton = opts && 'mainButton' in opts ? opts.mainButton : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
      if (isDismissible == null) dart.nullFailed(I[18], 33, 10, "isDismissible");
      let dismissDirection = opts && 'dismissDirection' in opts ? opts.dismissDirection : C[319] || CT.C319;
      if (dismissDirection == null) dart.nullFailed(I[18], 34, 10, "dismissDirection");
      let showProgressIndicator = opts && 'showProgressIndicator' in opts ? opts.showProgressIndicator : false;
      if (showProgressIndicator == null) dart.nullFailed(I[18], 35, 10, "showProgressIndicator");
      let progressIndicatorController = opts && 'progressIndicatorController' in opts ? opts.progressIndicatorController : null;
      let progressIndicatorBackgroundColor = opts && 'progressIndicatorBackgroundColor' in opts ? opts.progressIndicatorBackgroundColor : null;
      let progressIndicatorValueColor = opts && 'progressIndicatorValueColor' in opts ? opts.progressIndicatorValueColor : null;
      let snackPosition = opts && 'snackPosition' in opts ? opts.snackPosition : C[320] || CT.C320;
      if (snackPosition == null) dart.nullFailed(I[18], 39, 10, "snackPosition");
      let snackStyle = opts && 'snackStyle' in opts ? opts.snackStyle : C[321] || CT.C321;
      if (snackStyle == null) dart.nullFailed(I[18], 40, 10, "snackStyle");
      let forwardAnimationCurve = opts && 'forwardAnimationCurve' in opts ? opts.forwardAnimationCurve : C[322] || CT.C322;
      if (forwardAnimationCurve == null) dart.nullFailed(I[18], 41, 10, "forwardAnimationCurve");
      let reverseAnimationCurve = opts && 'reverseAnimationCurve' in opts ? opts.reverseAnimationCurve : C[322] || CT.C322;
      if (reverseAnimationCurve == null) dart.nullFailed(I[18], 42, 10, "reverseAnimationCurve");
      let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : C[323] || CT.C323;
      if (animationDuration == null) dart.nullFailed(I[18], 43, 10, "animationDuration");
      let barBlur = opts && 'barBlur' in opts ? opts.barBlur : 0;
      let overlayBlur = opts && 'overlayBlur' in opts ? opts.overlayBlur : 0;
      if (overlayBlur == null) dart.nullFailed(I[18], 45, 10, "overlayBlur");
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : C[324] || CT.C324;
      let userInputForm = opts && 'userInputForm' in opts ? opts.userInputForm : null;
      let snackbarStatus = opts && 'snackbarStatus' in opts ? opts.snackbarStatus : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[title$2] = title;
      this[message$] = message;
      this[titleText$] = titleText;
      this[messageText$] = messageText;
      this[icon$] = icon;
      this[shouldIconPulse$] = shouldIconPulse;
      this[maxWidth$] = maxWidth;
      this[margin$] = margin;
      this[padding$] = padding;
      this[borderRadius$] = borderRadius;
      this[borderColor$] = borderColor;
      this[borderWidth$] = borderWidth;
      this[backgroundColor$] = backgroundColor;
      this[leftBarIndicatorColor$] = leftBarIndicatorColor;
      this[boxShadows$] = boxShadows;
      this[backgroundGradient$] = backgroundGradient;
      this[mainButton$] = mainButton;
      this[onTap$] = onTap;
      this[duration$] = duration;
      this[isDismissible$] = isDismissible;
      this[dismissDirection$] = dismissDirection;
      this[showProgressIndicator$] = showProgressIndicator;
      this[progressIndicatorController$] = progressIndicatorController;
      this[progressIndicatorBackgroundColor$] = progressIndicatorBackgroundColor;
      this[progressIndicatorValueColor$] = progressIndicatorValueColor;
      this[snackPosition$] = snackPosition;
      this[snackStyle$] = snackStyle;
      this[forwardAnimationCurve$] = forwardAnimationCurve;
      this[reverseAnimationCurve$] = reverseAnimationCurve;
      this[animationDuration$] = animationDuration;
      this[barBlur$] = barBlur;
      this[overlayBlur$] = overlayBlur;
      this[overlayColor$] = overlayColor;
      this[userInputForm$] = userInputForm;
      this[snackbarStatus$] = (t15 = snackbarStatus, t15 == null ? dart.fn(status => {
      }, T$.SnackbarStatusNTovoid()) : t15);
      GetBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = GetBar.prototype;
    dart.addTypeTests(GetBar);
    GetBar.prototype[_is_GetBar_default] = true;
    dart.addTypeCaches(GetBar);
    dart.setMethodSignature(GetBar, () => ({
      __proto__: dart.getMethods(GetBar.__proto__),
      show: dart.gFnType(T => [dart.nullable(async.Future$(dart.nullable(T))), []], T => [dart.nullable(core.Object)]),
      createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
    }));
    dart.setLibraryUri(GetBar, I[19]);
    dart.setFieldSignature(GetBar, () => ({
      __proto__: dart.getFields(GetBar.__proto__),
      snackbarStatus: dart.finalFieldType(dart.fnType(dart.void, [dart.nullable(snack.SnackbarStatus)])),
      title: dart.finalFieldType(dart.nullable(core.String)),
      message: dart.finalFieldType(dart.nullable(core.String)),
      titleText: dart.finalFieldType(dart.nullable(framework.Widget)),
      messageText: dart.finalFieldType(dart.nullable(framework.Widget)),
      backgroundColor: dart.finalFieldType(ui.Color),
      leftBarIndicatorColor: dart.finalFieldType(dart.nullable(ui.Color)),
      boxShadows: dart.finalFieldType(dart.nullable(core.List$(box_shadow.BoxShadow))),
      backgroundGradient: dart.finalFieldType(dart.nullable(gradient.Gradient)),
      icon: dart.finalFieldType(dart.nullable(framework.Widget)),
      shouldIconPulse: dart.finalFieldType(core.bool),
      mainButton: dart.finalFieldType(dart.nullable(framework.Widget)),
      onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [snack.GetBar$(core.Object)]))),
      duration: dart.finalFieldType(dart.nullable(core.Duration)),
      showProgressIndicator: dart.finalFieldType(core.bool),
      progressIndicatorController: dart.finalFieldType(dart.nullable(animation_controller.AnimationController)),
      progressIndicatorBackgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
      progressIndicatorValueColor: dart.finalFieldType(dart.nullable(animation.Animation$(ui.Color))),
      isDismissible: dart.finalFieldType(core.bool),
      maxWidth: dart.finalFieldType(dart.nullable(core.double)),
      margin: dart.finalFieldType(edge_insets.EdgeInsets),
      padding: dart.finalFieldType(edge_insets.EdgeInsets),
      borderRadius: dart.finalFieldType(core.double),
      borderColor: dart.finalFieldType(dart.nullable(ui.Color)),
      borderWidth: dart.finalFieldType(dart.nullable(core.double)),
      snackPosition: dart.finalFieldType(snack.SnackPosition),
      dismissDirection: dart.finalFieldType(snack.SnackDismissDirection),
      snackStyle: dart.finalFieldType(snack.SnackStyle),
      forwardAnimationCurve: dart.finalFieldType(curves.Curve),
      reverseAnimationCurve: dart.finalFieldType(curves.Curve),
      animationDuration: dart.finalFieldType(core.Duration),
      barBlur: dart.finalFieldType(dart.nullable(core.double)),
      overlayBlur: dart.finalFieldType(core.double),
      overlayColor: dart.finalFieldType(dart.nullable(ui.Color)),
      userInputForm: dart.finalFieldType(dart.nullable(form.Form))
    }));
    return GetBar;
  });
  snack.GetBar = snack.GetBar$();
  dart.addTypeTests(snack.GetBar, _is_GetBar_default);
  var _fadeController = dart.privateName(snack, "_fadeController");
  var ___GetBarState__fadeAnimation = dart.privateName(snack, "_#_GetBarState#_fadeAnimation");
  var ___GetBarState__fadeAnimation_isSet = dart.privateName(snack, "_#_GetBarState#_fadeAnimation#isSet");
  var _emptyWidget = dart.privateName(snack, "_emptyWidget");
  var _initialOpacity = dart.privateName(snack, "_initialOpacity");
  var _finalOpacity = dart.privateName(snack, "_finalOpacity");
  var _pulseAnimationDuration = dart.privateName(snack, "_pulseAnimationDuration");
  var ___GetBarState__isTitlePresent = dart.privateName(snack, "_#_GetBarState#_isTitlePresent");
  var ___GetBarState__isTitlePresent_isSet = dart.privateName(snack, "_#_GetBarState#_isTitlePresent#isSet");
  var ___GetBarState__messageTopMargin = dart.privateName(snack, "_#_GetBarState#_messageTopMargin");
  var ___GetBarState__messageTopMargin_isSet = dart.privateName(snack, "_#_GetBarState#_messageTopMargin#isSet");
  var _focusNode = dart.privateName(snack, "_focusNode");
  var ___GetBarState__focusAttachment = dart.privateName(snack, "_#_GetBarState#_focusAttachment");
  var ___GetBarState__focusAttachment_isSet = dart.privateName(snack, "_#_GetBarState#_focusAttachment#isSet");
  var _boxHeightCompleter = dart.privateName(snack, "_boxHeightCompleter");
  var ___GetBarState__progressListener = dart.privateName(snack, "_#_GetBarState#_progressListener");
  var ___GetBarState__progressListener_isSet = dart.privateName(snack, "_#_GetBarState#_progressListener#isSet");
  var ___GetBarState__progressAnimation = dart.privateName(snack, "_#_GetBarState#_progressAnimation");
  var ___GetBarState__progressAnimation_isSet = dart.privateName(snack, "_#_GetBarState#_progressAnimation#isSet");
  var _fadeAnimation = dart.privateName(snack, "_fadeAnimation");
  var _isTitlePresent = dart.privateName(snack, "_isTitlePresent");
  var _messageTopMargin = dart.privateName(snack, "_messageTopMargin");
  var _focusAttachment = dart.privateName(snack, "_focusAttachment");
  var _configureLeftBarFuture = dart.privateName(snack, "_configureLeftBarFuture");
  var _configureProgressIndicatorAnimation = dart.privateName(snack, "_configureProgressIndicatorAnimation");
  var _configurePulseAnimation = dart.privateName(snack, "_configurePulseAnimation");
  var _progressListener = dart.privateName(snack, "_progressListener");
  var _progressAnimation = dart.privateName(snack, "_progressAnimation");
  var _getSnack = dart.privateName(snack, "_getSnack");
  var _generateInputSnack = dart.privateName(snack, "_generateInputSnack");
  var _generateSnack = dart.privateName(snack, "_generateSnack");
  var _getAppropriateRowLayout = dart.privateName(snack, "_getAppropriateRowLayout");
  var _buildLeftBarIndicator = dart.privateName(snack, "_buildLeftBarIndicator");
  var _getTitleText = dart.privateName(snack, "_getTitleText");
  var _getDefaultNotificationText = dart.privateName(snack, "_getDefaultNotificationText");
  var _getIcon = dart.privateName(snack, "_getIcon");
  var _getMainActionButton = dart.privateName(snack, "_getMainActionButton");
  const _is__GetBarState_default = Symbol('_is__GetBarState_default');
  snack._GetBarState$ = dart.generic(K => {
    const State_TickerProviderStateMixin$36 = class State_TickerProviderStateMixin extends framework.State$(snack.GetBar$(core.Object)) {};
    (State_TickerProviderStateMixin$36.new = function() {
      ticker_provider.TickerProviderStateMixin$(snack.GetBar$(core.Object))[dart.mixinNew].call(this);
      State_TickerProviderStateMixin$36.__proto__.new.call(this);
    }).prototype = State_TickerProviderStateMixin$36.prototype;
    dart.applyMixin(State_TickerProviderStateMixin$36, ticker_provider.TickerProviderStateMixin$(snack.GetBar$(core.Object)));
    class _GetBarState extends State_TickerProviderStateMixin$36 {
      get [_fadeAnimation]() {
        let t15;
        return dart.test(this[___GetBarState__fadeAnimation_isSet]) ? (t15 = this[___GetBarState__fadeAnimation], t15) : dart.throw(new _internal.LateError.fieldNI("_fadeAnimation"));
      }
      set [_fadeAnimation](t15) {
        if (t15 == null) dart.nullFailed(I[18], 212, 26, "null");
        this[___GetBarState__fadeAnimation_isSet] = true;
        this[___GetBarState__fadeAnimation] = t15;
      }
      get [_isTitlePresent]() {
        let t16;
        return dart.test(this[___GetBarState__isTitlePresent_isSet]) ? (t16 = this[___GetBarState__isTitlePresent], t16) : dart.throw(new _internal.LateError.fieldNI("_isTitlePresent"));
      }
      set [_isTitlePresent](t16) {
        if (t16 == null) dart.nullFailed(I[18], 220, 13, "null");
        this[___GetBarState__isTitlePresent_isSet] = true;
        this[___GetBarState__isTitlePresent] = t16;
      }
      get [_messageTopMargin]() {
        let t17;
        return dart.test(this[___GetBarState__messageTopMargin_isSet]) ? (t17 = this[___GetBarState__messageTopMargin], t17) : dart.throw(new _internal.LateError.fieldNI("_messageTopMargin"));
      }
      set [_messageTopMargin](t17) {
        if (t17 == null) dart.nullFailed(I[18], 221, 15, "null");
        this[___GetBarState__messageTopMargin_isSet] = true;
        this[___GetBarState__messageTopMargin] = t17;
      }
      get [_focusAttachment]() {
        let t18;
        return dart.test(this[___GetBarState__focusAttachment_isSet]) ? (t18 = this[___GetBarState__focusAttachment], t18) : dart.throw(new _internal.LateError.fieldNI("_focusAttachment"));
      }
      set [_focusAttachment](t18) {
        if (t18 == null) dart.nullFailed(I[18], 224, 24, "null");
        this[___GetBarState__focusAttachment_isSet] = true;
        this[___GetBarState__focusAttachment] = t18;
      }
      initState() {
        let t19;
        super.initState();
        if (!(this.widget.userInputForm != null || this.widget.message != null && dart.nullCheck(this.widget.message)[$isNotEmpty] || this.widget.messageText != null)) dart.assertFailed("A message is mandatory if you are not using userInputForm. \nSet either a message or messageText", I[18], 231, 9, "widget.userInputForm != null ||\n            ((widget.message != null && widget.message!.isNotEmpty) ||\n                widget.messageText != null)");
        this[_isTitlePresent] = this.widget.title != null || this.widget.titleText != null;
        this[_messageTopMargin] = dart.test(this[_isTitlePresent]) ? 6.0 : this.widget.padding.top;
        this[_configureLeftBarFuture]();
        this[_configureProgressIndicatorAnimation]();
        if (this.widget.icon != null && dart.test(this.widget.shouldIconPulse)) {
          this[_configurePulseAnimation]();
          t19 = this[_fadeController];
          t19 == null ? null : t19.forward();
        }
        this[_focusNode] = new focus_manager.FocusScopeNode.new();
        this[_focusAttachment] = dart.nullCheck(this[_focusNode]).attach(this.context);
      }
      dispose() {
        let t19, t19$, t19$0;
        t19 = this[_fadeController];
        t19 == null ? null : t19.dispose();
        t19$ = this.widget.progressIndicatorController;
        t19$ == null ? null : t19$.removeListener(this[_progressListener]);
        t19$0 = this.widget.progressIndicatorController;
        t19$0 == null ? null : t19$0.dispose();
        this[_focusAttachment].detach();
        dart.nullCheck(this[_focusNode]).dispose();
        super.dispose();
      }
      [_configureLeftBarFuture]() {
        dart.nullCheck(binding$.SchedulerBinding.instance).addPostFrameCallback(dart.fn(_ => {
          if (_ == null) dart.nullFailed(I[18], 269, 8, "_");
          let keyContext = this.backgroundBoxKey.currentContext;
          if (keyContext != null) {
            let box = box$.RenderBox.as(keyContext.findRenderObject());
            this[_boxHeightCompleter].complete(box.size);
          }
        }, T$.DurationTovoid()));
      }
      [_configurePulseAnimation]() {
        this[_fadeController] = new animation_controller.AnimationController.new({vsync: this, duration: this[_pulseAnimationDuration]});
        this[_fadeAnimation] = new (T$.TweenOfdouble()).new({begin: this[_initialOpacity], end: this[_finalOpacity]}).animate(new animations.CurvedAnimation.new({parent: dart.nullCheck(this[_fadeController]), curve: curves.Curves.linear}));
        dart.nullCheck(this[_fadeController]).addStatusListener(dart.fn(status => {
          if (status == null) dart.nullFailed(I[18], 290, 41, "status");
          if (status == animation.AnimationStatus.completed) {
            dart.nullCheck(this[_fadeController]).reverse();
          }
          if (status == animation.AnimationStatus.dismissed) {
            dart.nullCheck(this[_fadeController]).forward();
          }
        }, T$.AnimationStatusTovoid()));
        dart.nullCheck(this[_fadeController]).forward();
      }
      get [_progressListener]() {
        let t19;
        return dart.test(this[___GetBarState__progressListener_isSet]) ? (t19 = this[___GetBarState__progressListener], t19) : dart.throw(new _internal.LateError.fieldNI("_progressListener"));
      }
      set [_progressListener](t19) {
        if (t19 == null) dart.nullFailed(I[18], 302, 21, "null");
        this[___GetBarState__progressListener_isSet] = true;
        this[___GetBarState__progressListener] = t19;
      }
      [_configureProgressIndicatorAnimation]() {
        if (dart.test(this.widget.showProgressIndicator) && this.widget.progressIndicatorController != null) {
          this[_progressListener] = dart.fn(() => {
            this.setState(dart.fn(() => {
            }, T$.VoidTovoid()));
          }, T$.VoidTovoid());
          dart.nullCheck(this.widget.progressIndicatorController).addListener(this[_progressListener]);
          this[_progressAnimation] = new animations.CurvedAnimation.new({curve: curves.Curves.linear, parent: dart.nullCheck(this.widget.progressIndicatorController)});
        }
      }
      build(context) {
        if (context == null) dart.nullFailed(I[18], 318, 29, "context");
        return new basic.Align.new({heightFactor: 1.0, child: new material.Material.new({color: this.widget.snackStyle == snack.SnackStyle.FLOATING ? colors.Colors.transparent : this.widget.backgroundColor, child: new safe_area.SafeArea.new({minimum: this.widget.snackPosition == snack.SnackPosition.BOTTOM ? new edge_insets.EdgeInsets.only({bottom: media_query.MediaQuery.of(context).viewInsets.bottom}) : new edge_insets.EdgeInsets.only({top: media_query.MediaQuery.of(context).padding.top}), bottom: this.widget.snackPosition == snack.SnackPosition.BOTTOM, top: this.widget.snackPosition == snack.SnackPosition.TOP, left: false, right: false, child: this[_getSnack](), $creationLocationd_0dea112b090073317d4: C[329] || CT.C329}), $creationLocationd_0dea112b090073317d4: C[337] || CT.C337}), $creationLocationd_0dea112b090073317d4: C[341] || CT.C341});
      }
      [_getSnack]() {
        let snack = null;
        if (this.widget.userInputForm != null) {
          snack = this[_generateInputSnack]();
        } else {
          snack = this[_generateSnack]();
        }
        return new basic.Stack.new({children: T$.JSArrayOfWidget().of([new (T$.FutureBuilderOfSize()).new({future: this[_boxHeightCompleter].future, builder: dart.fn((context, snapshot) => {
                if (context == null) dart.nullFailed(I[18], 358, 21, "context");
                if (snapshot == null) dart.nullFailed(I[18], 358, 30, "snapshot");
                if (dart.test(snapshot.hasData)) {
                  if (this.widget.barBlur === 0) {
                    return this[_emptyWidget];
                  }
                  return new basic.ClipRRect.new({borderRadius: new border_radius.BorderRadius.circular(this.widget.borderRadius), child: new basic.BackdropFilter.new({filter: ui.ImageFilter.blur({sigmaX: dart.nullCheck(this.widget.barBlur), sigmaY: dart.nullCheck(this.widget.barBlur)}), child: new container.Container.new({height: dart.nullCheck(snapshot.data).height, width: dart.nullCheck(snapshot.data).width, decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.transparent, borderRadius: new border_radius.BorderRadius.circular(this.widget.borderRadius)}), $creationLocationd_0dea112b090073317d4: C[345] || CT.C345}), $creationLocationd_0dea112b090073317d4: C[350] || CT.C350}), $creationLocationd_0dea112b090073317d4: C[354] || CT.C354});
                } else {
                  return this[_emptyWidget];
                }
              }, T$.BuildContextAndAsyncSnapshotOfSizeToWidget()), $creationLocationd_0dea112b090073317d4: C[358] || CT.C358}), snack]), $creationLocationd_0dea112b090073317d4: C[362] || CT.C362});
      }
      [_generateInputSnack]() {
        return new container.Container.new({key: this.backgroundBoxKey, constraints: this.widget.maxWidth != null ? new box$.BoxConstraints.new({maxWidth: dart.nullCheck(this.widget.maxWidth)}) : null, decoration: new box_decoration.BoxDecoration.new({color: this.widget.backgroundColor, gradient: this.widget.backgroundGradient, boxShadow: this.widget.boxShadows, borderRadius: new border_radius.BorderRadius.circular(this.widget.borderRadius), border: this.widget.borderColor != null ? box_border.Border.all({color: dart.nullCheck(this.widget.borderColor), width: dart.nullCheck(this.widget.borderWidth)}) : null}), child: new basic.Padding.new({padding: C[365] || CT.C365, child: new focus_scope.FocusScope.new({child: dart.nullCheck(this.widget.userInputForm), node: this[_focusNode], autofocus: true, $creationLocationd_0dea112b090073317d4: C[366] || CT.C366}), $creationLocationd_0dea112b090073317d4: C[371] || CT.C371}), $creationLocationd_0dea112b090073317d4: C[375] || CT.C375});
      }
      get [_progressAnimation]() {
        let t20;
        return dart.test(this[___GetBarState__progressAnimation_isSet]) ? (t20 = this[___GetBarState__progressAnimation], t20) : dart.throw(new _internal.LateError.fieldNI("_progressAnimation"));
      }
      set [_progressAnimation](t20) {
        if (t20 == null) dart.nullFailed(I[18], 415, 24, "null");
        this[___GetBarState__progressAnimation_isSet] = true;
        this[___GetBarState__progressAnimation] = t20;
      }
      [_generateSnack]() {
        return new container.Container.new({key: this.backgroundBoxKey, constraints: this.widget.maxWidth != null ? new box$.BoxConstraints.new({maxWidth: dart.nullCheck(this.widget.maxWidth)}) : null, decoration: new box_decoration.BoxDecoration.new({color: this.widget.backgroundColor, gradient: this.widget.backgroundGradient, boxShadow: this.widget.boxShadows, borderRadius: new border_radius.BorderRadius.circular(this.widget.borderRadius), border: this.widget.borderColor != null ? box_border.Border.all({color: dart.nullCheck(this.widget.borderColor), width: dart.nullCheck(this.widget.borderWidth)}) : null}), child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([dart.test(this.widget.showProgressIndicator) ? new progress_indicator.LinearProgressIndicator.new({value: this.widget.progressIndicatorController != null ? this[_progressAnimation].value : null, backgroundColor: this.widget.progressIndicatorBackgroundColor, valueColor: this.widget.progressIndicatorValueColor, $creationLocationd_0dea112b090073317d4: C[381] || CT.C381}) : this[_emptyWidget], new basic.Row.new({mainAxisSize: flex.MainAxisSize.max, children: this[_getAppropriateRowLayout](), $creationLocationd_0dea112b090073317d4: C[386] || CT.C386})]), $creationLocationd_0dea112b090073317d4: C[390] || CT.C390}), $creationLocationd_0dea112b090073317d4: C[394] || CT.C394});
      }
      [_getAppropriateRowLayout]() {
        let t21, t21$, t21$0, t21$1;
        let buttonRightPadding = null;
        let iconPadding = 0.0;
        if (dart.notNull(this.widget.padding.right) - 12 < 0) {
          buttonRightPadding = 4.0;
        } else {
          buttonRightPadding = dart.notNull(this.widget.padding.right) - 12;
        }
        if (dart.notNull(this.widget.padding.left) > 16.0) {
          iconPadding = this.widget.padding.left;
        }
        if (this.widget.icon == null && this.widget.mainButton == null) {
          return T$.JSArrayOfWidget().of([this[_buildLeftBarIndicator](), new basic.Expanded.new({flex: 1, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.stretch, mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([dart.test(this[_isTitlePresent]) ? new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({top: this.widget.padding.top, left: this.widget.padding.left, right: this.widget.padding.right}), child: this[_getTitleText](), $creationLocationd_0dea112b090073317d4: C[400] || CT.C400}) : this[_emptyWidget], new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({top: this[_messageTopMargin], left: this.widget.padding.left, right: this.widget.padding.right, bottom: this.widget.padding.bottom}), child: (t21 = this.widget.messageText, t21 == null ? this[_getDefaultNotificationText]() : t21), $creationLocationd_0dea112b090073317d4: C[404] || CT.C404})]), $creationLocationd_0dea112b090073317d4: C[408] || CT.C408}), $creationLocationd_0dea112b090073317d4: C[413] || CT.C413})]);
        } else if (this.widget.icon != null && this.widget.mainButton == null) {
          return T$.JSArrayOfWidget().of([this[_buildLeftBarIndicator](), new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.tightFor({width: 42.0 + dart.notNull(iconPadding)}), child: this[_getIcon](), $creationLocationd_0dea112b090073317d4: C[417] || CT.C417}), new basic.Expanded.new({flex: 1, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.stretch, mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([dart.test(this[_isTitlePresent]) ? new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({top: this.widget.padding.top, left: 4.0, right: this.widget.padding.left}), child: this[_getTitleText](), $creationLocationd_0dea112b090073317d4: C[421] || CT.C421}) : this[_emptyWidget], new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({top: this[_messageTopMargin], left: 4.0, right: this.widget.padding.right, bottom: this.widget.padding.bottom}), child: (t21$ = this.widget.messageText, t21$ == null ? this[_getDefaultNotificationText]() : t21$), $creationLocationd_0dea112b090073317d4: C[425] || CT.C425})]), $creationLocationd_0dea112b090073317d4: C[429] || CT.C429}), $creationLocationd_0dea112b090073317d4: C[434] || CT.C434})]);
        } else if (this.widget.icon == null && this.widget.mainButton != null) {
          return T$.JSArrayOfWidget().of([this[_buildLeftBarIndicator](), new basic.Expanded.new({flex: 1, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.stretch, mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([dart.test(this[_isTitlePresent]) ? new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({top: this.widget.padding.top, left: this.widget.padding.left, right: this.widget.padding.right}), child: this[_getTitleText](), $creationLocationd_0dea112b090073317d4: C[438] || CT.C438}) : this[_emptyWidget], new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({top: this[_messageTopMargin], left: this.widget.padding.left, right: 8.0, bottom: this.widget.padding.bottom}), child: (t21$0 = this.widget.messageText, t21$0 == null ? this[_getDefaultNotificationText]() : t21$0), $creationLocationd_0dea112b090073317d4: C[442] || CT.C442})]), $creationLocationd_0dea112b090073317d4: C[446] || CT.C446}), $creationLocationd_0dea112b090073317d4: C[451] || CT.C451}), new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({right: buttonRightPadding}), child: this[_getMainActionButton](), $creationLocationd_0dea112b090073317d4: C[455] || CT.C455})]);
        } else {
          return T$.JSArrayOfWidget().of([this[_buildLeftBarIndicator](), new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.tightFor({width: 42.0 + dart.notNull(iconPadding)}), child: this[_getIcon](), $creationLocationd_0dea112b090073317d4: C[459] || CT.C459}), new basic.Expanded.new({flex: 1, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.stretch, mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([dart.test(this[_isTitlePresent]) ? new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({top: this.widget.padding.top, left: 4.0, right: 8.0}), child: this[_getTitleText](), $creationLocationd_0dea112b090073317d4: C[463] || CT.C463}) : this[_emptyWidget], new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({top: this[_messageTopMargin], left: 4.0, right: 8.0, bottom: this.widget.padding.bottom}), child: (t21$1 = this.widget.messageText, t21$1 == null ? this[_getDefaultNotificationText]() : t21$1), $creationLocationd_0dea112b090073317d4: C[467] || CT.C467})]), $creationLocationd_0dea112b090073317d4: C[471] || CT.C471}), $creationLocationd_0dea112b090073317d4: C[476] || CT.C476}), new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({right: buttonRightPadding}), child: this[_getMainActionButton](), $creationLocationd_0dea112b090073317d4: C[480] || CT.C480})]);
        }
      }
      [_buildLeftBarIndicator]() {
        if (this.widget.leftBarIndicatorColor != null) {
          return new (T$.FutureBuilderOfSize()).new({future: this[_boxHeightCompleter].future, builder: dart.fn((buildContext, snapshot) => {
              if (buildContext == null) dart.nullFailed(I[18], 618, 19, "buildContext");
              if (snapshot == null) dart.nullFailed(I[18], 618, 33, "snapshot");
              if (dart.test(snapshot.hasData)) {
                return new container.Container.new({color: this.widget.leftBarIndicatorColor, width: 5.0, height: dart.nullCheck(snapshot.data).height, $creationLocationd_0dea112b090073317d4: C[484] || CT.C484});
              } else {
                return this[_emptyWidget];
              }
            }, T$.BuildContextAndAsyncSnapshotOfSizeToWidget()), $creationLocationd_0dea112b090073317d4: C[489] || CT.C489});
        } else {
          return this[_emptyWidget];
        }
      }
      [_getIcon]() {
        if (this.widget.icon != null && icon.Icon.is(this.widget.icon) && dart.test(this.widget.shouldIconPulse)) {
          return new transitions.FadeTransition.new({opacity: this[_fadeAnimation], child: this.widget.icon, $creationLocationd_0dea112b090073317d4: C[493] || CT.C493});
        } else if (this.widget.icon != null) {
          return this.widget.icon;
        } else {
          return this[_emptyWidget];
        }
      }
      [_getTitleText]() {
        let t22, t21;
        t21 = this.widget.titleText;
        return t21 == null ? new text.Text.new((t22 = this.widget.title, t22 == null ? "" : t22), {style: new text_style.TextStyle.new({fontSize: 16.0, color: colors.Colors.white, fontWeight: ui.FontWeight.bold}), $creationLocationd_0dea112b090073317d4: C[497] || CT.C497}) : t21;
      }
      [_getDefaultNotificationText]() {
        let t21;
        return new text.Text.new((t21 = this.widget.message, t21 == null ? "" : t21), {style: new text_style.TextStyle.new({fontSize: 14.0, color: colors.Colors.white}), $creationLocationd_0dea112b090073317d4: C[501] || CT.C501});
      }
      [_getMainActionButton]() {
        return this.widget.mainButton;
      }
    }
    (_GetBarState.new = function() {
      this.currentStatus = null;
      this[_fadeController] = null;
      this[___GetBarState__fadeAnimation] = null;
      this[___GetBarState__fadeAnimation_isSet] = false;
      this[_emptyWidget] = new basic.SizedBox.new({width: 0.0, height: 0.0, $creationLocationd_0dea112b090073317d4: C[325] || CT.C325});
      this[_initialOpacity] = 1.0;
      this[_finalOpacity] = 0.4;
      this[_pulseAnimationDuration] = new core.Duration.new({seconds: 1});
      this[___GetBarState__isTitlePresent] = null;
      this[___GetBarState__isTitlePresent_isSet] = false;
      this[___GetBarState__messageTopMargin] = null;
      this[___GetBarState__messageTopMargin_isSet] = false;
      this[_focusNode] = null;
      this[___GetBarState__focusAttachment] = null;
      this[___GetBarState__focusAttachment_isSet] = false;
      this[_boxHeightCompleter] = T$.CompleterOfSize().new();
      this[___GetBarState__progressListener] = null;
      this[___GetBarState__progressListener_isSet] = false;
      this[___GetBarState__progressAnimation] = null;
      this[___GetBarState__progressAnimation_isSet] = false;
      this.backgroundBoxKey = T$.GlobalKeyOfStateOfStatefulWidget().new();
      _GetBarState.__proto__.new.call(this);
      ;
    }).prototype = _GetBarState.prototype;
    dart.addTypeTests(_GetBarState);
    _GetBarState.prototype[_is__GetBarState_default] = true;
    dart.addTypeCaches(_GetBarState);
    dart.setMethodSignature(_GetBarState, () => ({
      __proto__: dart.getMethods(_GetBarState.__proto__),
      [_configureLeftBarFuture]: dart.fnType(dart.void, []),
      [_configurePulseAnimation]: dart.fnType(dart.void, []),
      [_configureProgressIndicatorAnimation]: dart.fnType(dart.void, []),
      build: dart.fnType(framework.Widget, [framework.BuildContext]),
      [_getSnack]: dart.fnType(framework.Widget, []),
      [_generateInputSnack]: dart.fnType(framework.Widget, []),
      [_generateSnack]: dart.fnType(framework.Widget, []),
      [_getAppropriateRowLayout]: dart.fnType(core.List$(framework.Widget), []),
      [_buildLeftBarIndicator]: dart.fnType(framework.Widget, []),
      [_getIcon]: dart.fnType(dart.nullable(framework.Widget), []),
      [_getTitleText]: dart.fnType(framework.Widget, []),
      [_getDefaultNotificationText]: dart.fnType(text.Text, []),
      [_getMainActionButton]: dart.fnType(dart.nullable(framework.Widget), [])
    }));
    dart.setGetterSignature(_GetBarState, () => ({
      __proto__: dart.getGetters(_GetBarState.__proto__),
      [_fadeAnimation]: animation.Animation$(core.double),
      [_isTitlePresent]: core.bool,
      [_messageTopMargin]: core.double,
      [_focusAttachment]: focus_manager.FocusAttachment,
      [_progressListener]: dart.fnType(dart.void, []),
      [_progressAnimation]: animations.CurvedAnimation
    }));
    dart.setSetterSignature(_GetBarState, () => ({
      __proto__: dart.getSetters(_GetBarState.__proto__),
      [_fadeAnimation]: animation.Animation$(core.double),
      [_isTitlePresent]: core.bool,
      [_messageTopMargin]: core.double,
      [_focusAttachment]: focus_manager.FocusAttachment,
      [_progressListener]: dart.fnType(dart.void, []),
      [_progressAnimation]: animations.CurvedAnimation
    }));
    dart.setLibraryUri(_GetBarState, I[19]);
    dart.setFieldSignature(_GetBarState, () => ({
      __proto__: dart.getFields(_GetBarState.__proto__),
      currentStatus: dart.fieldType(dart.nullable(snack.SnackbarStatus)),
      [_fadeController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
      [___GetBarState__fadeAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
      [___GetBarState__fadeAnimation_isSet]: dart.fieldType(core.bool),
      [_emptyWidget]: dart.finalFieldType(framework.Widget),
      [_initialOpacity]: dart.finalFieldType(core.double),
      [_finalOpacity]: dart.finalFieldType(core.double),
      [_pulseAnimationDuration]: dart.finalFieldType(core.Duration),
      [___GetBarState__isTitlePresent]: dart.fieldType(dart.nullable(core.bool)),
      [___GetBarState__isTitlePresent_isSet]: dart.fieldType(core.bool),
      [___GetBarState__messageTopMargin]: dart.fieldType(dart.nullable(core.double)),
      [___GetBarState__messageTopMargin_isSet]: dart.fieldType(core.bool),
      [_focusNode]: dart.fieldType(dart.nullable(focus_manager.FocusScopeNode)),
      [___GetBarState__focusAttachment]: dart.fieldType(dart.nullable(focus_manager.FocusAttachment)),
      [___GetBarState__focusAttachment_isSet]: dart.fieldType(core.bool),
      [_boxHeightCompleter]: dart.finalFieldType(async.Completer$(ui.Size)),
      [___GetBarState__progressListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
      [___GetBarState__progressListener_isSet]: dart.fieldType(core.bool),
      [___GetBarState__progressAnimation]: dart.fieldType(dart.nullable(animations.CurvedAnimation)),
      [___GetBarState__progressAnimation_isSet]: dart.fieldType(core.bool),
      backgroundBoxKey: dart.fieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget)))
    }));
    return _GetBarState;
  });
  snack._GetBarState = snack._GetBarState$();
  dart.addTypeTests(snack._GetBarState, _is__GetBarState_default);
  snack.SnackPosition = class SnackPosition extends core.Object {
    toString() {
      return this[_name$3];
    }
  };
  (snack.SnackPosition.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[18], 670, 6, "index");
    if (_name == null) dart.nullFailed(I[18], 670, 6, "_name");
    this.index = index;
    this[_name$3] = _name;
    ;
  }).prototype = snack.SnackPosition.prototype;
  dart.addTypeTests(snack.SnackPosition);
  dart.addTypeCaches(snack.SnackPosition);
  dart.setLibraryUri(snack.SnackPosition, I[19]);
  dart.setFieldSignature(snack.SnackPosition, () => ({
    __proto__: dart.getFields(snack.SnackPosition.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$3]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(snack.SnackPosition, ['toString']);
  snack.SnackPosition.TOP = C[505] || CT.C505;
  snack.SnackPosition.BOTTOM = C[320] || CT.C320;
  snack.SnackPosition.values = C[506] || CT.C506;
  snack.SnackStyle = class SnackStyle extends core.Object {
    toString() {
      return this[_name$3];
    }
  };
  (snack.SnackStyle.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[18], 673, 6, "index");
    if (_name == null) dart.nullFailed(I[18], 673, 6, "_name");
    this.index = index;
    this[_name$3] = _name;
    ;
  }).prototype = snack.SnackStyle.prototype;
  dart.addTypeTests(snack.SnackStyle);
  dart.addTypeCaches(snack.SnackStyle);
  dart.setLibraryUri(snack.SnackStyle, I[19]);
  dart.setFieldSignature(snack.SnackStyle, () => ({
    __proto__: dart.getFields(snack.SnackStyle.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$3]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(snack.SnackStyle, ['toString']);
  snack.SnackStyle.FLOATING = C[321] || CT.C321;
  snack.SnackStyle.GROUNDED = C[507] || CT.C507;
  snack.SnackStyle.values = C[508] || CT.C508;
  snack.SnackDismissDirection = class SnackDismissDirection extends core.Object {
    toString() {
      return this[_name$3];
    }
  };
  (snack.SnackDismissDirection.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[18], 678, 6, "index");
    if (_name == null) dart.nullFailed(I[18], 678, 6, "_name");
    this.index = index;
    this[_name$3] = _name;
    ;
  }).prototype = snack.SnackDismissDirection.prototype;
  dart.addTypeTests(snack.SnackDismissDirection);
  dart.addTypeCaches(snack.SnackDismissDirection);
  dart.setLibraryUri(snack.SnackDismissDirection, I[19]);
  dart.setFieldSignature(snack.SnackDismissDirection, () => ({
    __proto__: dart.getFields(snack.SnackDismissDirection.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$3]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(snack.SnackDismissDirection, ['toString']);
  snack.SnackDismissDirection.HORIZONTAL = C[509] || CT.C509;
  snack.SnackDismissDirection.VERTICAL = C[319] || CT.C319;
  snack.SnackDismissDirection.values = C[510] || CT.C510;
  snack.SnackbarStatus = class SnackbarStatus extends core.Object {
    toString() {
      return this[_name$3];
    }
  };
  (snack.SnackbarStatus.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[18], 688, 6, "index");
    if (_name == null) dart.nullFailed(I[18], 688, 6, "_name");
    this.index = index;
    this[_name$3] = _name;
    ;
  }).prototype = snack.SnackbarStatus.prototype;
  dart.addTypeTests(snack.SnackbarStatus);
  dart.addTypeCaches(snack.SnackbarStatus);
  dart.setLibraryUri(snack.SnackbarStatus, I[19]);
  dart.setFieldSignature(snack.SnackbarStatus, () => ({
    __proto__: dart.getFields(snack.SnackbarStatus.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$3]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(snack.SnackbarStatus, ['toString']);
  snack.SnackbarStatus.OPEN = C[511] || CT.C511;
  snack.SnackbarStatus.CLOSED = C[512] || CT.C512;
  snack.SnackbarStatus.OPENING = C[513] || CT.C513;
  snack.SnackbarStatus.CLOSING = C[514] || CT.C514;
  snack.SnackbarStatus.values = C[515] || CT.C515;
  var snack$ = dart.privateName(snack_route, "SnackRoute.snack");
  var dismissibleKeyGen = dart.privateName(snack_route, "SnackRoute.dismissibleKeyGen");
  var currentStatus = dart.privateName(snack_route, "SnackRoute.currentStatus");
  var __SnackRoute__filterBlurAnimation = dart.privateName(snack_route, "_#SnackRoute#_filterBlurAnimation");
  var __SnackRoute__filterBlurAnimation_isSet = dart.privateName(snack_route, "_#SnackRoute#_filterBlurAnimation#isSet");
  var __SnackRoute__filterColorAnimation = dart.privateName(snack_route, "_#SnackRoute#_filterColorAnimation");
  var __SnackRoute__filterColorAnimation_isSet = dart.privateName(snack_route, "_#SnackRoute#_filterColorAnimation#isSet");
  var _builder = dart.privateName(snack_route, "_builder");
  var _transitionCompleter = dart.privateName(snack_route, "_transitionCompleter");
  var __SnackRoute__snackbarStatus = dart.privateName(snack_route, "_#SnackRoute#_snackbarStatus");
  var __SnackRoute__snackbarStatus_isSet = dart.privateName(snack_route, "_#SnackRoute#_snackbarStatus#isSet");
  var _initialAlignment = dart.privateName(snack_route, "_initialAlignment");
  var _endAlignment = dart.privateName(snack_route, "_endAlignment");
  var _wasDismissedBySwipe = dart.privateName(snack_route, "_wasDismissedBySwipe");
  var _onTappedDismiss = dart.privateName(snack_route, "_onTappedDismiss");
  var _timer = dart.privateName(snack_route, "_timer");
  var _animation = dart.privateName(snack_route, "_animation");
  var _controller = dart.privateName(snack_route, "_controller");
  var _result = dart.privateName(snack_route, "_result");
  var _configureAlignment = dart.privateName(snack_route, "_configureAlignment");
  var _snackbarStatus = dart.privateName(snack_route, "_snackbarStatus");
  var _filterBlurAnimation = dart.privateName(snack_route, "_filterBlurAnimation");
  var _filterColorAnimation = dart.privateName(snack_route, "_filterColorAnimation");
  var _getDismissibleSnack = dart.privateName(snack_route, "_getDismissibleSnack");
  var _getSnack$ = dart.privateName(snack_route, "_getSnack");
  var _getDismissDirection = dart.privateName(snack_route, "_getDismissDirection");
  var _cancelTimer = dart.privateName(snack_route, "_cancelTimer");
  var _name$4 = dart.privateName(animation, "_name");
  var _handleStatusChanged = dart.privateName(snack_route, "_handleStatusChanged");
  var _configureTimer = dart.privateName(snack_route, "_configureTimer");
  const _is_SnackRoute_default = Symbol('_is_SnackRoute_default');
  snack_route.SnackRoute$ = dart.generic(T => {
    var CompleterOfT = () => (CompleterOfT = dart.constFn(async.Completer$(T)))();
    var TN = () => (TN = dart.constFn(dart.nullable(T)))();
    class SnackRoute extends routes.OverlayRoute$(T) {
      get snack() {
        return this[snack$];
      }
      set snack(value) {
        this[snack$] = value;
      }
      get dismissibleKeyGen() {
        return this[dismissibleKeyGen];
      }
      set dismissibleKeyGen(value) {
        this[dismissibleKeyGen] = value;
      }
      get currentStatus() {
        return this[currentStatus];
      }
      set currentStatus(value) {
        this[currentStatus] = value;
      }
      get [_filterBlurAnimation]() {
        let t21;
        return dart.test(this[__SnackRoute__filterBlurAnimation_isSet]) ? (t21 = this[__SnackRoute__filterBlurAnimation], t21) : dart.throw(new _internal.LateError.fieldNI("_filterBlurAnimation"));
      }
      set [_filterBlurAnimation](t21) {
        if (t21 == null) dart.nullFailed(I[20], 9, 26, "null");
        this[__SnackRoute__filterBlurAnimation_isSet] = true;
        this[__SnackRoute__filterBlurAnimation] = t21;
      }
      get [_filterColorAnimation]() {
        let t22;
        return dart.test(this[__SnackRoute__filterColorAnimation_isSet]) ? (t22 = this[__SnackRoute__filterColorAnimation], t22) : dart.throw(new _internal.LateError.fieldNI("_filterColorAnimation"));
      }
      set [_filterColorAnimation](t22) {
        if (t22 == null) dart.nullFailed(I[20], 10, 26, "null");
        this[__SnackRoute__filterColorAnimation_isSet] = true;
        this[__SnackRoute__filterColorAnimation] = t22;
      }
      [_configureAlignment](snackPosition) {
        if (snackPosition == null) dart.nullFailed(I[20], 27, 37, "snackPosition");
        switch (this.snack.snackPosition) {
          case C[505] || CT.C505:
          {
            {
              this[_initialAlignment] = new alignment.Alignment.new(-1.0, -2.0);
              this[_endAlignment] = new alignment.Alignment.new(-1.0, -1.0);
              break;
            }
          }
          case C[320] || CT.C320:
          {
            {
              this[_initialAlignment] = new alignment.Alignment.new(-1.0, 2.0);
              this[_endAlignment] = new alignment.Alignment.new(-1.0, 1.0);
              break;
            }
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      }
      get [_snackbarStatus]() {
        let t23;
        return dart.test(this[__SnackRoute__snackbarStatus_isSet]) ? (t23 = this[__SnackRoute__snackbarStatus], t23) : dart.throw(new _internal.LateError.fieldNI("_snackbarStatus"));
      }
      set [_snackbarStatus](t23) {
        if (t23 == null) dart.nullFailed(I[20], 49, 31, "null");
        this[__SnackRoute__snackbarStatus_isSet] = true;
        this[__SnackRoute__snackbarStatus] = t23;
      }
      get opaque() {
        return false;
      }
      createOverlayEntries() {
        return (() => {
          let t24 = T$.JSArrayOfOverlayEntry().of([]);
          if (dart.notNull(this.snack.overlayBlur) > 0.0) t24[$addAll](T$.JSArrayOfOverlayEntry().of([new overlay.OverlayEntry.new({builder: dart.fn(context => {
                if (context == null) dart.nullFailed(I[20], 64, 21, "context");
                return new gesture_detector.GestureDetector.new({onTap: dart.fn(() => {
                    if (dart.test(this.snack.isDismissible) && !dart.test(this[_onTappedDismiss])) {
                      this[_onTappedDismiss] = true;
                      extension_navigation['GetNavigation|back'](dart.dynamic, get_main.Get);
                    }
                  }, T$.VoidTovoid()), child: new transitions.AnimatedBuilder.new({animation: this[_filterBlurAnimation], builder: dart.fn((context, child) => {
                      if (context == null) dart.nullFailed(I[20], 74, 27, "context");
                      return new basic.BackdropFilter.new({filter: ui.ImageFilter.blur({sigmaX: this[_filterBlurAnimation].value, sigmaY: this[_filterBlurAnimation].value}), child: new container.Container.new({constraints: new box$.BoxConstraints.expand(), color: this[_filterColorAnimation].value, $creationLocationd_0dea112b090073317d4: C[523] || CT.C523}), $creationLocationd_0dea112b090073317d4: C[527] || CT.C527});
                    }, T$.BuildContextAndWidgetNToBackdropFilter()), $creationLocationd_0dea112b090073317d4: C[531] || CT.C531}), $creationLocationd_0dea112b090073317d4: C[535] || CT.C535});
              }, T$.BuildContextToGestureDetector()), maintainState: false, opaque: this.opaque})]));
          t24[$add](new overlay.OverlayEntry.new({builder: dart.fn(context => {
              if (context == null) dart.nullFailed(I[20], 93, 19, "context");
              let annotatedChild = new basic.Semantics.new({child: new transitions.AlignTransition.new({alignment: dart.nullCheck(this[_animation]), child: dart.test(this.snack.isDismissible) ? this[_getDismissibleSnack](this[_builder]) : this[_getSnack$](), $creationLocationd_0dea112b090073317d4: C[539] || CT.C539}), focused: false, container: true, explicitChildNodes: true, $creationLocationd_0dea112b090073317d4: C[543] || CT.C543});
              return annotatedChild;
            }, T$.BuildContextToWidget()), maintainState: false, opaque: this.opaque}));
          return t24;
        })();
      }
      [_getDismissibleSnack](child) {
        return new dismissible.Dismissible.new({direction: this[_getDismissDirection](), resizeDuration: null, confirmDismiss: dart.fn(_ => {
            if (_ == null) dart.nullFailed(I[20], 119, 24, "_");
            if (this.currentStatus == snack.SnackbarStatus.OPENING || this.currentStatus == snack.SnackbarStatus.CLOSING) {
              return T$.FutureOfboolN().value(false);
            }
            return T$.FutureOfboolN().value(true);
          }, T$.DismissDirectionToFutureOfboolN()), key: new (T$.ValueKeyOfString()).new(this.dismissibleKeyGen), onDismissed: dart.fn(_ => {
            if (_ == null) dart.nullFailed(I[20], 127, 21, "_");
            this.dismissibleKeyGen = dart.notNull(this.dismissibleKeyGen) + "1";
            this[_cancelTimer]();
            this[_wasDismissedBySwipe] = true;
            if (dart.test(this.isCurrent)) {
              dart.nullCheck(extension_navigation.navigator).pop(T$.ObjectN());
            } else {
              dart.nullCheck(extension_navigation.navigator).removeRoute(this);
            }
          }, T$.DismissDirectionTovoid()), child: this[_getSnack$](), $creationLocationd_0dea112b090073317d4: C[549] || CT.C549});
      }
      [_getSnack$]() {
        return new container.Container.new({margin: this.snack.margin, child: this[_builder], $creationLocationd_0dea112b090073317d4: C[557] || CT.C557});
      }
      [_getDismissDirection]() {
        if (this.snack.dismissDirection == snack.SnackDismissDirection.HORIZONTAL) {
          return dismissible.DismissDirection.horizontal;
        } else {
          if (this.snack.snackPosition == snack.SnackPosition.TOP) {
            return dismissible.DismissDirection.up;
          }
          return dismissible.DismissDirection.down;
        }
      }
      get finishedWhenPopped() {
        return dart.nullCheck(this[_controller]).status == animation.AnimationStatus.dismissed;
      }
      createAnimationController() {
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot reuse a " + dart.str(this[$runtimeType]) + " after disposing it.", I[20], 177, 12, "!_transitionCompleter.isCompleted");
        if (!dart.test(this.snack.animationDuration['>='](core.Duration.zero))) dart.assertFailed(null, I[20], 179, 12, "snack.animationDuration >= Duration.zero");
        return new animation_controller.AnimationController.new({duration: this.snack.animationDuration, debugLabel: this.debugLabel, vsync: dart.nullCheck(extension_navigation.navigator)});
      }
      createAnimation() {
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot reuse a " + dart.str(this[$runtimeType]) + " after disposing it.", I[20], 191, 12, "!_transitionCompleter.isCompleted");
        if (!(this[_controller] != null)) dart.assertFailed(null, I[20], 193, 12, "_controller != null");
        return new tweens.AlignmentTween.new({begin: this[_initialAlignment], end: this[_endAlignment]}).animate(new animations.CurvedAnimation.new({parent: dart.nullCheck(this[_controller]), curve: this.snack.forwardAnimationCurve, reverseCurve: this.snack.reverseAnimationCurve}));
      }
      createBlurFilterAnimation() {
        return new (T$.TweenOfdouble()).new({begin: 0.0, end: this.snack.overlayBlur}).animate(new animations.CurvedAnimation.new({parent: dart.nullCheck(this[_controller]), curve: new curves.Interval.new(0.0, 0.35, {curve: curves.Curves.easeInOutCirc})}));
      }
      createColorFilterAnimation() {
        return new tween.ColorTween.new({begin: new ui.Color.new(0), end: this.snack.overlayColor}).animate(new animations.CurvedAnimation.new({parent: dart.nullCheck(this[_controller]), curve: new curves.Interval.new(0.0, 0.35, {curve: curves.Curves.easeInOutCirc})}));
      }
      [_handleStatusChanged](status) {
        let t25, t25$, t25$0, t25$1;
        if (status == null) dart.nullFailed(I[20], 233, 45, "status");
        switch (status) {
          case C[561] || CT.C561:
          {
            this.currentStatus = snack.SnackbarStatus.OPEN;
            t25 = this.currentStatus;
            this[_snackbarStatus](t25);
            if (dart.test(this.overlayEntries[$isNotEmpty])) this.overlayEntries[$first].opaque = this.opaque;
            break;
          }
          case C[562] || CT.C562:
          {
            this.currentStatus = snack.SnackbarStatus.OPENING;
            t25$ = this.currentStatus;
            this[_snackbarStatus](t25$);
            break;
          }
          case C[563] || CT.C563:
          {
            this.currentStatus = snack.SnackbarStatus.CLOSING;
            t25$0 = this.currentStatus;
            this[_snackbarStatus](t25$0);
            if (dart.test(this.overlayEntries[$isNotEmpty])) this.overlayEntries[$first].opaque = false;
            break;
          }
          case C[564] || CT.C564:
          {
            if (!!dart.test(this.overlayEntries[$first].opaque)) dart.assertFailed(null, I[20], 251, 16, "!overlayEntries.first.opaque");
            this.currentStatus = snack.SnackbarStatus.CLOSED;
            t25$1 = this.currentStatus;
            this[_snackbarStatus](t25$1);
            if (!dart.test(this.isCurrent)) {
              dart.nullCheck(extension_navigation.navigator).finalizeRoute(this);
            }
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        this.changedInternalState();
      }
      install() {
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot install a " + dart.str(this[$runtimeType]) + " after disposing it.", I[20], 270, 12, "!_transitionCompleter.isCompleted");
        this[_controller] = this.createAnimationController();
        if (!(this[_controller] != null)) dart.assertFailed(dart.str(this[$runtimeType]) + ".createAnimationController() returned null.", I[20], 273, 12, "_controller != null");
        this[_filterBlurAnimation] = this.createBlurFilterAnimation();
        this[_filterColorAnimation] = this.createColorFilterAnimation();
        this[_animation] = this.createAnimation();
        if (!(this[_animation] != null)) dart.assertFailed(dart.str(this[$runtimeType]) + ".createAnimation() returned null.", I[20], 278, 12, "_animation != null");
        super.install();
      }
      didPush() {
        super.didPush();
        if (!(this[_controller] != null)) dart.assertFailed(dart.str(this[$runtimeType]) + ".didPush called before calling install() or after calling dispose().", I[20], 286, 7, "_controller != null");
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot reuse a " + dart.str(this[$runtimeType]) + " after disposing it.", I[20], 291, 7, "!_transitionCompleter.isCompleted");
        dart.nullCheck(this[_animation]).addStatusListener(dart.bind(this, _handleStatusChanged));
        this[_configureTimer]();
        return dart.nullCheck(this[_controller]).forward();
      }
      didReplace(oldRoute) {
        if (!(this[_controller] != null)) dart.assertFailed(dart.str(this[$runtimeType]) + ".didReplace called before calling install() or after calling dispose().", I[20], 302, 7, "_controller != null");
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot reuse a " + dart.str(this[$runtimeType]) + " after disposing it.", I[20], 307, 7, "!_transitionCompleter.isCompleted");
        if (snack_route.SnackRoute.is(oldRoute)) {
          dart.nullCheck(this[_controller]).value = dart.nullCheck(oldRoute[_controller]).value;
        }
        dart.nullCheck(this[_animation]).addStatusListener(dart.bind(this, _handleStatusChanged));
        super.didReplace(oldRoute);
      }
      didPop(result) {
        TN().as(result);
        if (!(this[_controller] != null)) dart.assertFailed(dart.str(this[$runtimeType]) + ".didPop called before calling install() or after calling dispose().", I[20], 321, 7, "_controller != null");
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot reuse a " + dart.str(this[$runtimeType]) + " after disposing it.", I[20], 326, 7, "!_transitionCompleter.isCompleted");
        this[_result] = result;
        this[_cancelTimer]();
        if (dart.test(this[_wasDismissedBySwipe])) {
          async.Timer.new(new core.Duration.new({milliseconds: 200}), dart.fn(() => {
            dart.nullCheck(this[_controller]).reset();
          }, T$.VoidTovoid()));
          this[_wasDismissedBySwipe] = false;
        } else {
          dart.nullCheck(this[_controller]).reverse();
        }
        return super.didPop(result);
      }
      [_configureTimer]() {
        if (this.snack.duration != null) {
          if (this[_timer] != null && dart.test(dart.nullCheck(this[_timer]).isActive)) {
            dart.nullCheck(this[_timer]).cancel();
          }
          this[_timer] = async.Timer.new(dart.nullCheck(this.snack.duration), dart.fn(() => {
            if (dart.test(this.isCurrent)) {
              dart.nullCheck(extension_navigation.navigator).pop(T$.ObjectN());
            } else if (dart.test(this.isActive)) {
              dart.nullCheck(extension_navigation.navigator).removeRoute(this);
            }
          }, T$.VoidTovoid()));
        } else {
          if (this[_timer] != null) {
            dart.nullCheck(this[_timer]).cancel();
          }
        }
      }
      [_cancelTimer]() {
        if (this[_timer] != null && dart.test(dart.nullCheck(this[_timer]).isActive)) {
          dart.nullCheck(this[_timer]).cancel();
        }
      }
      canTransitionTo(nextRoute) {
        if (nextRoute == null) dart.nullFailed(I[20], 374, 44, "nextRoute");
        return true;
      }
      canTransitionFrom(previousRoute) {
        if (previousRoute == null) dart.nullFailed(I[20], 380, 46, "previousRoute");
        return true;
      }
      dispose() {
        let t25;
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot dispose a " + dart.str(this[$runtimeType]) + " twice.", I[20], 384, 12, "!_transitionCompleter.isCompleted");
        t25 = this[_controller];
        t25 == null ? null : t25.dispose();
        this[_transitionCompleter].complete(this[_result]);
        super.dispose();
      }
      get debugLabel() {
        return dart.str(this[$runtimeType]);
      }
    }
    (SnackRoute.new = function(opts) {
      let snack = opts && 'snack' in opts ? opts.snack : null;
      if (snack == null) dart.nullFailed(I[20], 13, 19, "snack");
      let settings = opts && 'settings' in opts ? opts.settings : null;
      this[__SnackRoute__filterBlurAnimation] = null;
      this[__SnackRoute__filterBlurAnimation_isSet] = false;
      this[__SnackRoute__filterColorAnimation] = null;
      this[__SnackRoute__filterColorAnimation_isSet] = false;
      this[_builder] = null;
      this[_transitionCompleter] = CompleterOfT().new();
      this[__SnackRoute__snackbarStatus] = null;
      this[__SnackRoute__snackbarStatus_isSet] = false;
      this[_initialAlignment] = null;
      this[_endAlignment] = null;
      this[_wasDismissedBySwipe] = false;
      this[_onTappedDismiss] = false;
      this[_timer] = null;
      this[dismissibleKeyGen] = "";
      this[_animation] = null;
      this[_controller] = null;
      this[_result] = null;
      this[currentStatus] = null;
      this[snack$] = snack;
      SnackRoute.__proto__.new.call(this, {settings: settings});
      this[_builder] = new basic.Builder.new({builder: dart.fn(_ => {
          if (_ == null) dart.nullFailed(I[20], 16, 34, "_");
          return new gesture_detector.GestureDetector.new({child: this.snack, onTap: this.snack.onTap != null ? dart.fn(() => dart.nullCheck(this.snack.onTap)(this.snack), T$.VoidTovoid()) : null, $creationLocationd_0dea112b090073317d4: C[516] || CT.C516});
        }, T$.BuildContextToGestureDetector()), $creationLocationd_0dea112b090073317d4: C[520] || CT.C520});
      this[_configureAlignment](this.snack.snackPosition);
      this[_snackbarStatus] = this.snack.snackbarStatus;
    }).prototype = SnackRoute.prototype;
    dart.addTypeTests(SnackRoute);
    SnackRoute.prototype[_is_SnackRoute_default] = true;
    dart.addTypeCaches(SnackRoute);
    dart.setMethodSignature(SnackRoute, () => ({
      __proto__: dart.getMethods(SnackRoute.__proto__),
      [_configureAlignment]: dart.fnType(dart.dynamic, [snack.SnackPosition]),
      createOverlayEntries: dart.fnType(core.Iterable$(overlay.OverlayEntry), []),
      [_getDismissibleSnack]: dart.fnType(framework.Widget, [dart.nullable(framework.Widget)]),
      [_getSnack$]: dart.fnType(framework.Widget, []),
      [_getDismissDirection]: dart.fnType(dismissible.DismissDirection, []),
      createAnimationController: dart.fnType(animation_controller.AnimationController, []),
      createAnimation: dart.fnType(animation.Animation$(alignment.Alignment), []),
      createBlurFilterAnimation: dart.fnType(animation.Animation$(core.double), []),
      createColorFilterAnimation: dart.fnType(animation.Animation$(dart.nullable(ui.Color)), []),
      [_handleStatusChanged]: dart.fnType(dart.void, [animation.AnimationStatus]),
      [_configureTimer]: dart.fnType(dart.void, []),
      [_cancelTimer]: dart.fnType(dart.void, []),
      canTransitionTo: dart.fnType(core.bool, [snack_route.SnackRoute]),
      canTransitionFrom: dart.fnType(core.bool, [snack_route.SnackRoute])
    }));
    dart.setGetterSignature(SnackRoute, () => ({
      __proto__: dart.getGetters(SnackRoute.__proto__),
      [_filterBlurAnimation]: animation.Animation$(core.double),
      [_filterColorAnimation]: animation.Animation$(dart.nullable(ui.Color)),
      [_snackbarStatus]: dart.fnType(dart.void, [dart.nullable(snack.SnackbarStatus)]),
      opaque: core.bool,
      debugLabel: core.String
    }));
    dart.setSetterSignature(SnackRoute, () => ({
      __proto__: dart.getSetters(SnackRoute.__proto__),
      [_filterBlurAnimation]: animation.Animation$(core.double),
      [_filterColorAnimation]: animation.Animation$(dart.nullable(ui.Color)),
      [_snackbarStatus]: dart.fnType(dart.void, [dart.nullable(snack.SnackbarStatus)])
    }));
    dart.setLibraryUri(SnackRoute, I[21]);
    dart.setFieldSignature(SnackRoute, () => ({
      __proto__: dart.getFields(SnackRoute.__proto__),
      [__SnackRoute__filterBlurAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
      [__SnackRoute__filterBlurAnimation_isSet]: dart.fieldType(core.bool),
      [__SnackRoute__filterColorAnimation]: dart.fieldType(dart.nullable(animation.Animation$(dart.nullable(ui.Color)))),
      [__SnackRoute__filterColorAnimation_isSet]: dart.fieldType(core.bool),
      snack: dart.fieldType(snack.GetBar$(core.Object)),
      [_builder]: dart.fieldType(dart.nullable(basic.Builder)),
      [_transitionCompleter]: dart.finalFieldType(async.Completer$(T)),
      [__SnackRoute__snackbarStatus]: dart.fieldType(dart.nullable(dart.fnType(dart.void, [dart.nullable(snack.SnackbarStatus)]))),
      [__SnackRoute__snackbarStatus_isSet]: dart.fieldType(core.bool),
      [_initialAlignment]: dart.fieldType(dart.nullable(alignment.Alignment)),
      [_endAlignment]: dart.fieldType(dart.nullable(alignment.Alignment)),
      [_wasDismissedBySwipe]: dart.fieldType(core.bool),
      [_onTappedDismiss]: dart.fieldType(core.bool),
      [_timer]: dart.fieldType(dart.nullable(async.Timer)),
      dismissibleKeyGen: dart.fieldType(core.String),
      [_animation]: dart.fieldType(dart.nullable(animation.Animation$(alignment.Alignment))),
      [_controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
      [_result]: dart.fieldType(dart.nullable(T)),
      currentStatus: dart.fieldType(dart.nullable(snack.SnackbarStatus))
    }));
    return SnackRoute;
  });
  snack_route.SnackRoute = snack_route.SnackRoute$();
  dart.addTypeTests(snack_route.SnackRoute, _is_SnackRoute_default);
  var current$ = dart.privateName(route_observer, "Routing.current");
  var previous$ = dart.privateName(route_observer, "Routing.previous");
  var args$ = dart.privateName(route_observer, "Routing.args");
  var removed$ = dart.privateName(route_observer, "Routing.removed");
  var route$1 = dart.privateName(route_observer, "Routing.route");
  var isBack$ = dart.privateName(route_observer, "Routing.isBack");
  var isSnackbar$ = dart.privateName(route_observer, "Routing.isSnackbar");
  var isBottomSheet$ = dart.privateName(route_observer, "Routing.isBottomSheet");
  var isDialog$ = dart.privateName(route_observer, "Routing.isDialog");
  route_observer.Routing = class Routing extends core.Object {
    get current() {
      return this[current$];
    }
    set current(value) {
      this[current$] = value;
    }
    get previous() {
      return this[previous$];
    }
    set previous(value) {
      this[previous$] = value;
    }
    get args() {
      return this[args$];
    }
    set args(value) {
      this[args$] = value;
    }
    get removed() {
      return this[removed$];
    }
    set removed(value) {
      this[removed$] = value;
    }
    get route() {
      return this[route$1];
    }
    set route(value) {
      this[route$1] = value;
    }
    get isBack() {
      return this[isBack$];
    }
    set isBack(value) {
      this[isBack$] = value;
    }
    get isSnackbar() {
      return this[isSnackbar$];
    }
    set isSnackbar(value) {
      this[isSnackbar$] = value;
    }
    get isBottomSheet() {
      return this[isBottomSheet$];
    }
    set isBottomSheet(value) {
      this[isBottomSheet$] = value;
    }
    get isDialog() {
      return this[isDialog$];
    }
    set isDialog(value) {
      this[isDialog$] = value;
    }
    update(fn) {
      if (fn == null) dart.nullFailed(I[22], 34, 20, "fn");
      fn(this);
    }
  };
  (route_observer.Routing.new = function(opts) {
    let current = opts && 'current' in opts ? opts.current : "";
    if (current == null) dart.nullFailed(I[22], 23, 10, "current");
    let previous = opts && 'previous' in opts ? opts.previous : "";
    if (previous == null) dart.nullFailed(I[22], 24, 10, "previous");
    let args = opts && 'args' in opts ? opts.args : null;
    let removed = opts && 'removed' in opts ? opts.removed : "";
    if (removed == null) dart.nullFailed(I[22], 26, 10, "removed");
    let route = opts && 'route' in opts ? opts.route : null;
    let isBack = opts && 'isBack' in opts ? opts.isBack : null;
    let isSnackbar = opts && 'isSnackbar' in opts ? opts.isSnackbar : null;
    let isBottomSheet = opts && 'isBottomSheet' in opts ? opts.isBottomSheet : null;
    let isDialog = opts && 'isDialog' in opts ? opts.isDialog : null;
    this[current$] = current;
    this[previous$] = previous;
    this[args$] = args;
    this[removed$] = removed;
    this[route$1] = route;
    this[isBack$] = isBack;
    this[isSnackbar$] = isSnackbar;
    this[isBottomSheet$] = isBottomSheet;
    this[isDialog$] = isDialog;
    ;
  }).prototype = route_observer.Routing.prototype;
  dart.addTypeTests(route_observer.Routing);
  dart.addTypeCaches(route_observer.Routing);
  dart.setMethodSignature(route_observer.Routing, () => ({
    __proto__: dart.getMethods(route_observer.Routing.__proto__),
    update: dart.fnType(dart.void, [dart.fnType(dart.void, [route_observer.Routing])])
  }));
  dart.setLibraryUri(route_observer.Routing, I[23]);
  dart.setFieldSignature(route_observer.Routing, () => ({
    __proto__: dart.getFields(route_observer.Routing.__proto__),
    current: dart.fieldType(core.String),
    previous: dart.fieldType(core.String),
    args: dart.fieldType(dart.dynamic),
    removed: dart.fieldType(core.String),
    route: dart.fieldType(dart.nullable(navigator.Route)),
    isBack: dart.fieldType(dart.nullable(core.bool)),
    isSnackbar: dart.fieldType(dart.nullable(core.bool)),
    isBottomSheet: dart.fieldType(dart.nullable(core.bool)),
    isDialog: dart.fieldType(dart.nullable(core.bool))
  }));
  route_observer._RouteData = class _RouteData extends core.Object {
    static ofRoute(route) {
      return new route_observer._RouteData.new({name: route_observer._extractRouteName(route), isGetPageRoute: default_route.GetPageRoute.is(route), isSnackbar: snack_route.SnackRoute.is(route), isDialog: dialog_route.GetDialogRoute.is(route), isBottomSheet: bottomsheet$.GetModalBottomSheetRoute.is(route)});
    }
  };
  (route_observer._RouteData.new = function(opts) {
    let name = opts && 'name' in opts ? opts.name : null;
    let isGetPageRoute = opts && 'isGetPageRoute' in opts ? opts.isGetPageRoute : null;
    if (isGetPageRoute == null) dart.nullFailed(I[22], 71, 19, "isGetPageRoute");
    let isSnackbar = opts && 'isSnackbar' in opts ? opts.isSnackbar : null;
    if (isSnackbar == null) dart.nullFailed(I[22], 72, 19, "isSnackbar");
    let isBottomSheet = opts && 'isBottomSheet' in opts ? opts.isBottomSheet : null;
    if (isBottomSheet == null) dart.nullFailed(I[22], 73, 19, "isBottomSheet");
    let isDialog = opts && 'isDialog' in opts ? opts.isDialog : null;
    if (isDialog == null) dart.nullFailed(I[22], 74, 19, "isDialog");
    this.name = name;
    this.isGetPageRoute = isGetPageRoute;
    this.isSnackbar = isSnackbar;
    this.isBottomSheet = isBottomSheet;
    this.isDialog = isDialog;
    ;
  }).prototype = route_observer._RouteData.prototype;
  dart.addTypeTests(route_observer._RouteData);
  dart.addTypeCaches(route_observer._RouteData);
  dart.setLibraryUri(route_observer._RouteData, I[23]);
  dart.setFieldSignature(route_observer._RouteData, () => ({
    __proto__: dart.getFields(route_observer._RouteData.__proto__),
    isGetPageRoute: dart.finalFieldType(core.bool),
    isSnackbar: dart.finalFieldType(core.bool),
    isBottomSheet: dart.finalFieldType(core.bool),
    isDialog: dart.finalFieldType(core.bool),
    name: dart.finalFieldType(dart.nullable(core.String))
  }));
  var routing$ = dart.privateName(route_observer, "GetObserver.routing");
  var _routeSend$ = dart.privateName(route_observer, "_routeSend");
  route_observer.GetObserver = class GetObserver extends navigator.NavigatorObserver {
    get routing() {
      return this[routing$];
    }
    set routing(value) {
      super.routing = value;
    }
    didPush(route, previousRoute) {
      let t26, t25, t26$, t25$, t26$0, t25$0, t25$1;
      if (route == null) dart.nullFailed(I[22], 96, 22, "route");
      super.didPush(route, previousRoute);
      let newRoute = route_observer._RouteData.ofRoute(route);
      if (dart.test(newRoute.isSnackbar)) {
        t25 = get_main.Get;
        t26 = "OPEN SNACKBAR";
        t25.log(t26);
      } else if (dart.test(newRoute.isBottomSheet) || dart.test(newRoute.isDialog)) {
        t25$ = get_main.Get;
        t26$ = "OPEN " + dart.str(newRoute.name);
        t25$.log(t26$);
      } else if (dart.test(newRoute.isGetPageRoute)) {
        t25$0 = get_main.Get;
        t26$0 = "GOING TO ROUTE " + dart.str(newRoute.name);
        t25$0.log(t26$0);
      }
      router_report.RouterReportManager.reportCurrentRoute(route);
      t25$1 = this[_routeSend$];
      t25$1 == null ? null : t25$1.update(dart.fn(value => {
        let t26, t26$, t26$0, t26$1, t26$2;
        if (value == null) dart.nullFailed(I[22], 110, 25, "value");
        if (pages.PageRoute.is(route)) {
          value.current = (t26 = newRoute.name, t26 == null ? "" : t26);
        }
        value.args = route.settings.arguments;
        value.route = route;
        value.isBack = false;
        value.removed = "";
        value.previous = (t26$ = route_observer._extractRouteName(previousRoute), t26$ == null ? "" : t26$);
        value.isSnackbar = dart.test(newRoute.isSnackbar) ? true : (t26$0 = value.isSnackbar, t26$0 == null ? false : t26$0);
        value.isBottomSheet = dart.test(newRoute.isBottomSheet) ? true : (t26$1 = value.isBottomSheet, t26$1 == null ? false : t26$1);
        value.isDialog = dart.test(newRoute.isDialog) ? true : (t26$2 = value.isDialog, t26$2 == null ? false : t26$2);
      }, T$.RoutingTovoid()));
      if (this.routing != null) {
        dart.nullCheck(this.routing)(this[_routeSend$]);
      }
    }
    didPop(route, previousRoute) {
      let t26, t25, t26$, t25$, t26$0, t25$0, t25$1, t25$2;
      if (route == null) dart.nullFailed(I[22], 133, 21, "route");
      super.didPop(route, previousRoute);
      let currentRoute = route_observer._RouteData.ofRoute(route);
      let newRoute = route_observer._RouteData.ofRoute(previousRoute);
      if (dart.test(currentRoute.isSnackbar)) {
        t25 = get_main.Get;
        t26 = "CLOSE SNACKBAR";
        t25.log(t26);
      } else if (dart.test(currentRoute.isBottomSheet) || dart.test(currentRoute.isDialog)) {
        t25$ = get_main.Get;
        t26$ = "CLOSE " + dart.str(currentRoute.name);
        t25$.log(t26$);
      } else if (dart.test(currentRoute.isGetPageRoute)) {
        t25$0 = get_main.Get;
        t26$0 = "CLOSE TO ROUTE " + dart.str(currentRoute.name);
        t25$0.log(t26$0);
      }
      if (previousRoute != null) {
        router_report.RouterReportManager.reportCurrentRoute(previousRoute);
      }
      t25$1 = this[_routeSend$];
      t25$1 == null ? null : t25$1.update(dart.fn(value => {
        let t26, t26$, t26$0;
        if (value == null) dart.nullFailed(I[22], 153, 25, "value");
        if (pages.PageRoute.is(previousRoute)) {
          value.current = (t26 = route_observer._extractRouteName(previousRoute), t26 == null ? "" : t26);
        }
        value.args = (t26$ = previousRoute, t26$ == null ? null : t26$.settings.arguments);
        value.route = previousRoute;
        value.isBack = true;
        value.removed = "";
        value.previous = (t26$0 = newRoute.name, t26$0 == null ? "" : t26$0);
        value.isSnackbar = newRoute.isSnackbar;
        value.isBottomSheet = newRoute.isBottomSheet;
        value.isDialog = newRoute.isDialog;
      }, T$.RoutingTovoid()));
      t25$2 = this.routing;
      t25$2 == null ? null : t25$2(this[_routeSend$]);
    }
    didReplace(opts) {
      let t26, t25, t26$, t25$, t25$0, t25$1;
      let newRoute = opts && 'newRoute' in opts ? opts.newRoute : null;
      let oldRoute = opts && 'oldRoute' in opts ? opts.oldRoute : null;
      super.didReplace({newRoute: newRoute, oldRoute: oldRoute});
      let newName = route_observer._extractRouteName(newRoute);
      let oldName = route_observer._extractRouteName(oldRoute);
      let currentRoute = route_observer._RouteData.ofRoute(oldRoute);
      t25 = get_main.Get;
      t26 = "REPLACE ROUTE " + dart.str(oldName);
      t25.log(t26);
      t25$ = get_main.Get;
      t26$ = "NEW ROUTE " + dart.str(newName);
      t25$.log(t26$);
      if (newRoute != null) {
        router_report.RouterReportManager.reportCurrentRoute(newRoute);
      }
      t25$0 = this[_routeSend$];
      t25$0 == null ? null : t25$0.update(dart.fn(value => {
        let t26, t26$;
        if (value == null) dart.nullFailed(I[22], 188, 25, "value");
        if (pages.PageRoute.is(newRoute)) {
          value.current = (t26 = newName, t26 == null ? "" : t26);
        }
        value.args = (t26$ = newRoute, t26$ == null ? null : t26$.settings.arguments);
        value.route = newRoute;
        value.isBack = false;
        value.removed = "";
        value.previous = dart.str(oldName);
        value.isSnackbar = dart.test(currentRoute.isSnackbar) ? false : value.isSnackbar;
        value.isBottomSheet = dart.test(currentRoute.isBottomSheet) ? false : value.isBottomSheet;
        value.isDialog = dart.test(currentRoute.isDialog) ? false : value.isDialog;
      }, T$.RoutingTovoid()));
      if (default_route.GetPageRoute.is(oldRoute)) {
        router_report.RouterReportManager.reportRouteWillDispose(oldRoute);
      }
      t25$1 = this.routing;
      t25$1 == null ? null : t25$1(this[_routeSend$]);
    }
    didRemove(route, previousRoute) {
      let t26, t25, t25$, t25$0;
      if (route == null) dart.nullFailed(I[22], 212, 24, "route");
      super.didRemove(route, previousRoute);
      let routeName = route_observer._extractRouteName(route);
      let currentRoute = route_observer._RouteData.ofRoute(route);
      t25 = get_main.Get;
      t26 = "REMOVING ROUTE " + dart.str(routeName);
      t25.log(t26);
      t25$ = this[_routeSend$];
      t25$ == null ? null : t25$.update(dart.fn(value => {
        let t26, t26$;
        if (value == null) dart.nullFailed(I[22], 219, 25, "value");
        value.route = previousRoute;
        value.isBack = false;
        value.removed = (t26 = routeName, t26 == null ? "" : t26);
        value.previous = (t26$ = routeName, t26$ == null ? "" : t26$);
        value.isSnackbar = dart.test(currentRoute.isSnackbar) ? false : value.isSnackbar;
        value.isBottomSheet = dart.test(currentRoute.isBottomSheet) ? false : value.isBottomSheet;
        value.isDialog = dart.test(currentRoute.isDialog) ? false : value.isDialog;
      }, T$.RoutingTovoid()));
      if (default_route.GetPageRoute.is(route)) {
        router_report.RouterReportManager.reportRouteWillDispose(route);
      }
      t25$0 = this.routing;
      t25$0 == null ? null : t25$0(this[_routeSend$]);
    }
  };
  (route_observer.GetObserver.new = function(routing = null, _routeSend = null) {
    this[routing$] = routing;
    this[_routeSend$] = _routeSend;
    route_observer.GetObserver.__proto__.new.call(this);
    ;
  }).prototype = route_observer.GetObserver.prototype;
  dart.addTypeTests(route_observer.GetObserver);
  dart.addTypeCaches(route_observer.GetObserver);
  dart.setLibraryUri(route_observer.GetObserver, I[23]);
  dart.setFieldSignature(route_observer.GetObserver, () => ({
    __proto__: dart.getFields(route_observer.GetObserver.__proto__),
    routing: dart.finalFieldType(dart.nullable(dart.fnType(dart.dynamic, [dart.nullable(route_observer.Routing)]))),
    [_routeSend$]: dart.finalFieldType(dart.nullable(route_observer.Routing))
  }));
  route_observer._extractRouteName = function _extractRouteName(route) {
    let t25;
    if ((t25 = route, t25 == null ? null : t25.settings.name) != null) {
      return dart.nullCheck(route).settings.name;
    }
    if (default_route.GetPageRoute.is(route)) {
      return route.routeName;
    }
    if (dialog_route.GetDialogRoute.is(route)) {
      return "DIALOG " + dart.str(dart.hashCode(route));
    }
    if (bottomsheet$.GetModalBottomSheetRoute.is(route)) {
      return "BOTTOMSHEET " + dart.str(dart.hashCode(route));
    }
    return null;
  };
  var initialValue$ = dart.privateName(simple_builder, "ValueBuilder.initialValue");
  var builder$2 = dart.privateName(simple_builder, "ValueBuilder.builder");
  var onDispose$1 = dart.privateName(simple_builder, "ValueBuilder.onDispose");
  var onUpdate$ = dart.privateName(simple_builder, "ValueBuilder.onUpdate");
  const _is_ValueBuilder_default = Symbol('_is_ValueBuilder_default');
  simple_builder.ValueBuilder$ = dart.generic(T => {
    var _ValueBuilderStateOfT = () => (_ValueBuilderStateOfT = dart.constFn(simple_builder._ValueBuilderState$(T)))();
    class ValueBuilder extends framework.StatefulWidget {
      get initialValue() {
        return this[initialValue$];
      }
      set initialValue(value) {
        super.initialValue = value;
      }
      get builder() {
        return this[builder$2];
      }
      set builder(value) {
        super.builder = value;
      }
      get onDispose() {
        return this[onDispose$1];
      }
      set onDispose(value) {
        super.onDispose = value;
      }
      get onUpdate() {
        return this[onUpdate$];
      }
      set onUpdate(value) {
        super.onUpdate = value;
      }
      createState() {
        return new (_ValueBuilderStateOfT()).new();
      }
    }
    (ValueBuilder.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let initialValue = opts && 'initialValue' in opts ? opts.initialValue : null;
      let onDispose = opts && 'onDispose' in opts ? opts.onDispose : null;
      let onUpdate = opts && 'onUpdate' in opts ? opts.onUpdate : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      if (builder == null) dart.nullFailed(I[24], 36, 19, "builder");
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[initialValue$] = initialValue;
      this[onDispose$1] = onDispose;
      this[onUpdate$] = onUpdate;
      this[builder$2] = builder;
      ValueBuilder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = ValueBuilder.prototype;
    dart.addTypeTests(ValueBuilder);
    ValueBuilder.prototype[_is_ValueBuilder_default] = true;
    dart.addTypeCaches(ValueBuilder);
    dart.setMethodSignature(ValueBuilder, () => ({
      __proto__: dart.getMethods(ValueBuilder.__proto__),
      createState: dart.fnType(simple_builder._ValueBuilderState$(T), [])
    }));
    dart.setLibraryUri(ValueBuilder, I[25]);
    dart.setFieldSignature(ValueBuilder, () => ({
      __proto__: dart.getFields(ValueBuilder.__proto__),
      initialValue: dart.finalFieldType(dart.nullable(T)),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [T, dart.fnType(dart.void, [T])])),
      onDispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
      onUpdate: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [T])))
    }));
    return ValueBuilder;
  });
  simple_builder.ValueBuilder = simple_builder.ValueBuilder$();
  dart.addTypeTests(simple_builder.ValueBuilder, _is_ValueBuilder_default);
  var value$ = dart.privateName(simple_builder, "_ValueBuilderState.value");
  const _is__ValueBuilderState_default = Symbol('_is__ValueBuilderState_default');
  simple_builder._ValueBuilderState$ = dart.generic(T => {
    var TN = () => (TN = dart.constFn(dart.nullable(T)))();
    var TNTovoid = () => (TNTovoid = dart.constFn(dart.fnType(dart.void, [TN()])))();
    var TNAndFnToWidget = () => (TNAndFnToWidget = dart.constFn(dart.fnType(framework.Widget, [TN(), TNTovoid()])))();
    var TNToNvoid = () => (TNToNvoid = dart.constFn(dart.nullable(TNTovoid())))();
    class _ValueBuilderState extends framework.State$(simple_builder.ValueBuilder$(dart.nullable(T))) {
      get value() {
        return this[value$];
      }
      set value(value) {
        this[value$] = TN().as(value);
      }
      initState() {
        super.initState();
        this.value = this.widget.initialValue;
      }
      build(context) {
        let t27, t26, t25;
        if (context == null) dart.nullFailed(I[24], 53, 29, "context");
        t25 = this.widget;
        t26 = this.value;
        t27 = dart.bind(this, 'updater');
        return TNAndFnToWidget().as(t25.builder)(t26, t27);
      }
      updater(newValue) {
        TN().as(newValue);
        if (TNToNvoid().as(this.widget.onUpdate) != null) {
          dart.nullCheck(TNToNvoid().as(this.widget.onUpdate))(newValue);
        }
        this.setState(dart.fn(() => {
          this.value = newValue;
        }, T$.VoidTovoid()));
      }
      dispose() {
        let t25, t25$, t25$0;
        super.dispose();
        t25 = this.widget.onDispose;
        t25 == null ? null : t25();
        if (change_notifier.ChangeNotifier.is(this.value)) {
          t25$ = T$.ChangeNotifierN().as(this.value);
          t25$ == null ? null : t25$.dispose();
        } else if (async.StreamController.is(this.value)) {
          t25$0 = T$.StreamControllerN().as(this.value);
          t25$0 == null ? null : t25$0.close();
        }
        this.value = null;
      }
    }
    (_ValueBuilderState.new = function() {
      this[value$] = null;
      _ValueBuilderState.__proto__.new.call(this);
      ;
    }).prototype = _ValueBuilderState.prototype;
    dart.addTypeTests(_ValueBuilderState);
    _ValueBuilderState.prototype[_is__ValueBuilderState_default] = true;
    dart.addTypeCaches(_ValueBuilderState);
    dart.setMethodSignature(_ValueBuilderState, () => ({
      __proto__: dart.getMethods(_ValueBuilderState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext]),
      updater: dart.fnType(dart.void, [dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(_ValueBuilderState, I[25]);
    dart.setFieldSignature(_ValueBuilderState, () => ({
      __proto__: dart.getFields(_ValueBuilderState.__proto__),
      value: dart.fieldType(dart.nullable(T))
    }));
    return _ValueBuilderState;
  });
  simple_builder._ValueBuilderState = simple_builder._ValueBuilderState$();
  dart.addTypeTests(simple_builder._ValueBuilderState, _is__ValueBuilderState_default);
  var builder$3 = dart.privateName(simple_builder, "SimpleBuilder.builder");
  simple_builder.SimpleBuilder = class SimpleBuilder extends framework.StatefulWidget {
    get builder() {
      return this[builder$3];
    }
    set builder(value) {
      super.builder = value;
    }
    createState() {
      return new simple_builder._SimpleBuilderState.new();
    }
  };
  (simple_builder.SimpleBuilder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    if (builder == null) dart.nullFailed(I[24], 81, 48, "builder");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[builder$3] = builder;
    simple_builder.SimpleBuilder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = simple_builder.SimpleBuilder.prototype;
  dart.addTypeTests(simple_builder.SimpleBuilder);
  dart.addTypeCaches(simple_builder.SimpleBuilder);
  dart.setMethodSignature(simple_builder.SimpleBuilder, () => ({
    __proto__: dart.getMethods(simple_builder.SimpleBuilder.__proto__),
    createState: dart.fnType(simple_builder._SimpleBuilderState, [])
  }));
  dart.setLibraryUri(simple_builder.SimpleBuilder, I[25]);
  dart.setFieldSignature(simple_builder.SimpleBuilder, () => ({
    __proto__: dart.getFields(simple_builder.SimpleBuilder.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext]))
  }));
  const _is_GetStateUpdaterMixin_default = Symbol('_is_GetStateUpdaterMixin_default');
  get_state.GetStateUpdaterMixin$ = dart.generic(T => {
    class GetStateUpdaterMixin extends framework.State$(T) {}
    GetStateUpdaterMixin[dart.mixinOn] = State => class GetStateUpdaterMixin extends State {
      getUpdate() {
        if (dart.test(this.mounted)) this.setState(dart.fn(() => {
        }, T$.VoidTovoid()));
      }
    };
    dart.addTypeTests(GetStateUpdaterMixin);
    GetStateUpdaterMixin.prototype[_is_GetStateUpdaterMixin_default] = true;
    dart.addTypeCaches(GetStateUpdaterMixin);
    GetStateUpdaterMixin[dart.implements] = () => [framework.State$(T)];
    dart.setMethodSignature(GetStateUpdaterMixin, () => ({
      __proto__: dart.getMethods(GetStateUpdaterMixin.__proto__),
      getUpdate: dart.fnType(dart.void, [])
    }));
    dart.setLibraryUri(GetStateUpdaterMixin, I[26]);
    return GetStateUpdaterMixin;
  });
  get_state.GetStateUpdaterMixin = get_state.GetStateUpdaterMixin$();
  dart.addTypeTests(get_state.GetStateUpdaterMixin, _is_GetStateUpdaterMixin_default);
  const State_GetStateUpdaterMixin$36 = class State_GetStateUpdaterMixin extends framework.State$(simple_builder.SimpleBuilder) {};
  (State_GetStateUpdaterMixin$36.new = function() {
    State_GetStateUpdaterMixin$36.__proto__.new.call(this);
  }).prototype = State_GetStateUpdaterMixin$36.prototype;
  dart.applyMixin(State_GetStateUpdaterMixin$36, get_state.GetStateUpdaterMixin$(simple_builder.SimpleBuilder));
  simple_builder._SimpleBuilderState = class _SimpleBuilderState extends State_GetStateUpdaterMixin$36 {
    dispose() {
      super.dispose();
      for (let disposer of this.disposers) {
        disposer();
      }
    }
    build(context) {
      if (context == null) dart.nullFailed(I[24], 100, 29, "context");
      return list_notifier.TaskManager.instance.exchange(this.disposers, dart.bind(this, 'getUpdate'), this.widget.builder, context);
    }
  };
  (simple_builder._SimpleBuilderState.new = function() {
    this.disposers = T$.JSArrayOfVoidTovoid().of([]);
    simple_builder._SimpleBuilderState.__proto__.new.call(this);
    ;
  }).prototype = simple_builder._SimpleBuilderState.prototype;
  dart.addTypeTests(simple_builder._SimpleBuilderState);
  dart.addTypeCaches(simple_builder._SimpleBuilderState);
  dart.setMethodSignature(simple_builder._SimpleBuilderState, () => ({
    __proto__: dart.getMethods(simple_builder._SimpleBuilderState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(simple_builder._SimpleBuilderState, I[25]);
  dart.setFieldSignature(simple_builder._SimpleBuilderState, () => ({
    __proto__: dart.getFields(simple_builder._SimpleBuilderState.__proto__),
    disposers: dart.finalFieldType(core.List$(dart.fnType(dart.void, [])))
  }));
  var builder$4 = dart.privateName(mixin_state, "MixinBuilder.builder");
  var global$ = dart.privateName(mixin_state, "MixinBuilder.global");
  var id$ = dart.privateName(mixin_state, "MixinBuilder.id");
  var autoRemove$ = dart.privateName(mixin_state, "MixinBuilder.autoRemove");
  var initState$ = dart.privateName(mixin_state, "MixinBuilder.initState");
  var dispose$ = dart.privateName(mixin_state, "MixinBuilder.dispose");
  var didChangeDependencies$ = dart.privateName(mixin_state, "MixinBuilder.didChangeDependencies");
  var didUpdateWidget$ = dart.privateName(mixin_state, "MixinBuilder.didUpdateWidget");
  var init$ = dart.privateName(mixin_state, "MixinBuilder.init");
  const _is_MixinBuilder_default = Symbol('_is_MixinBuilder_default');
  mixin_state.MixinBuilder$ = dart.generic(T => {
    var GetBuilderOfT = () => (GetBuilderOfT = dart.constFn(get_state.GetBuilder$(T)))();
    var TToObx = () => (TToObx = dart.constFn(dart.fnType(rx_obx_widget.Obx, [T])))();
    class MixinBuilder extends framework.StatelessWidget {
      get builder() {
        return this[builder$4];
      }
      set builder(value) {
        super.builder = value;
      }
      get global() {
        return this[global$];
      }
      set global(value) {
        super.global = value;
      }
      get id() {
        return this[id$];
      }
      set id(value) {
        super.id = value;
      }
      get autoRemove() {
        return this[autoRemove$];
      }
      set autoRemove(value) {
        super.autoRemove = value;
      }
      get initState() {
        return this[initState$];
      }
      set initState(value) {
        super.initState = value;
      }
      get dispose() {
        return this[dispose$];
      }
      set dispose(value) {
        super.dispose = value;
      }
      get didChangeDependencies() {
        return this[didChangeDependencies$];
      }
      set didChangeDependencies(value) {
        super.didChangeDependencies = value;
      }
      get didUpdateWidget() {
        return this[didUpdateWidget$];
      }
      set didUpdateWidget(value) {
        super.didUpdateWidget = value;
      }
      get init() {
        return this[init$];
      }
      set init(value) {
        super.init = value;
      }
      build(context) {
        if (context == null) dart.nullFailed(I[27], 29, 29, "context");
        return new (GetBuilderOfT()).new({init: this.init, global: this.global, autoRemove: this.autoRemove, initState: this.initState, dispose: this.dispose, id: this.id, didChangeDependencies: this.didChangeDependencies, didUpdateWidget: this.didUpdateWidget, builder: dart.fn(controller => {
            if (controller == null) dart.nullFailed(I[27], 39, 19, "controller");
            return new rx_obx_widget.Obx.new(dart.fn(() => this.builder(controller), T$.VoidToWidget()), {$creationLocationd_0dea112b090073317d4: C[565] || CT.C565});
          }, TToObx()), $creationLocationd_0dea112b090073317d4: C[568] || CT.C568});
      }
    }
    (MixinBuilder.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let init = opts && 'init' in opts ? opts.init : null;
      let global = opts && 'global' in opts ? opts.global : true;
      if (global == null) dart.nullFailed(I[27], 18, 10, "global");
      let builder = opts && 'builder' in opts ? opts.builder : null;
      if (builder == null) dart.nullFailed(I[27], 19, 19, "builder");
      let autoRemove = opts && 'autoRemove' in opts ? opts.autoRemove : true;
      if (autoRemove == null) dart.nullFailed(I[27], 20, 10, "autoRemove");
      let initState = opts && 'initState' in opts ? opts.initState : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let id = opts && 'id' in opts ? opts.id : null;
      let didChangeDependencies = opts && 'didChangeDependencies' in opts ? opts.didChangeDependencies : null;
      let didUpdateWidget = opts && 'didUpdateWidget' in opts ? opts.didUpdateWidget : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[init$] = init;
      this[global$] = global;
      this[builder$4] = builder;
      this[autoRemove$] = autoRemove;
      this[initState$] = initState;
      this[dispose$] = dispose;
      this[id$] = id;
      this[didChangeDependencies$] = didChangeDependencies;
      this[didUpdateWidget$] = didUpdateWidget;
      MixinBuilder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = MixinBuilder.prototype;
    dart.addTypeTests(MixinBuilder);
    MixinBuilder.prototype[_is_MixinBuilder_default] = true;
    dart.addTypeCaches(MixinBuilder);
    dart.setMethodSignature(MixinBuilder, () => ({
      __proto__: dart.getMethods(MixinBuilder.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(MixinBuilder, I[28]);
    dart.setFieldSignature(MixinBuilder, () => ({
      __proto__: dart.getFields(MixinBuilder.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [T])),
      global: dart.finalFieldType(core.bool),
      id: dart.finalFieldType(dart.nullable(core.String)),
      autoRemove: dart.finalFieldType(core.bool),
      initState: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [framework.State$(framework.StatefulWidget)]))),
      dispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [framework.State$(framework.StatefulWidget)]))),
      didChangeDependencies: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [framework.State$(framework.StatefulWidget)]))),
      didUpdateWidget: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [get_state.GetBuilder$(get_controllers.GetxController), framework.State$(framework.StatefulWidget)]))),
      init: dart.finalFieldType(dart.nullable(T))
    }));
    return MixinBuilder;
  });
  mixin_state.MixinBuilder = mixin_state.MixinBuilder$();
  dart.addTypeTests(mixin_state.MixinBuilder, _is_MixinBuilder_default);
  var builder$5 = dart.privateName(get_state, "GetBuilder.builder");
  var global$0 = dart.privateName(get_state, "GetBuilder.global");
  var id$0 = dart.privateName(get_state, "GetBuilder.id");
  var tag$ = dart.privateName(get_state, "GetBuilder.tag");
  var autoRemove$0 = dart.privateName(get_state, "GetBuilder.autoRemove");
  var assignId$ = dart.privateName(get_state, "GetBuilder.assignId");
  var filter$ = dart.privateName(get_state, "GetBuilder.filter");
  var initState$0 = dart.privateName(get_state, "GetBuilder.initState");
  var dispose$0 = dart.privateName(get_state, "GetBuilder.dispose");
  var didChangeDependencies$0 = dart.privateName(get_state, "GetBuilder.didChangeDependencies");
  var didUpdateWidget$0 = dart.privateName(get_state, "GetBuilder.didUpdateWidget");
  var init$0 = dart.privateName(get_state, "GetBuilder.init");
  const _is_GetBuilder_default = Symbol('_is_GetBuilder_default');
  get_state.GetBuilder$ = dart.generic(T => {
    var GetBuilderStateOfT = () => (GetBuilderStateOfT = dart.constFn(get_state.GetBuilderState$(T)))();
    class GetBuilder extends framework.StatefulWidget {
      get builder() {
        return this[builder$5];
      }
      set builder(value) {
        super.builder = value;
      }
      get global() {
        return this[global$0];
      }
      set global(value) {
        super.global = value;
      }
      get id() {
        return this[id$0];
      }
      set id(value) {
        super.id = value;
      }
      get tag() {
        return this[tag$];
      }
      set tag(value) {
        super.tag = value;
      }
      get autoRemove() {
        return this[autoRemove$0];
      }
      set autoRemove(value) {
        super.autoRemove = value;
      }
      get assignId() {
        return this[assignId$];
      }
      set assignId(value) {
        super.assignId = value;
      }
      get filter() {
        return this[filter$];
      }
      set filter(value) {
        super.filter = value;
      }
      get initState() {
        return this[initState$0];
      }
      set initState(value) {
        super.initState = value;
      }
      get dispose() {
        return this[dispose$0];
      }
      set dispose(value) {
        super.dispose = value;
      }
      get didChangeDependencies() {
        return this[didChangeDependencies$0];
      }
      set didChangeDependencies(value) {
        super.didChangeDependencies = value;
      }
      get didUpdateWidget() {
        return this[didUpdateWidget$0];
      }
      set didUpdateWidget(value) {
        super.didUpdateWidget = value;
      }
      get init() {
        return this[init$0];
      }
      set init(value) {
        super.init = value;
      }
      createState() {
        return new (GetBuilderStateOfT()).new();
      }
    }
    (GetBuilder.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let init = opts && 'init' in opts ? opts.init : null;
      let global = opts && 'global' in opts ? opts.global : true;
      if (global == null) dart.nullFailed(I[29], 72, 10, "global");
      let builder = opts && 'builder' in opts ? opts.builder : null;
      if (builder == null) dart.nullFailed(I[29], 73, 19, "builder");
      let autoRemove = opts && 'autoRemove' in opts ? opts.autoRemove : true;
      if (autoRemove == null) dart.nullFailed(I[29], 74, 10, "autoRemove");
      let assignId = opts && 'assignId' in opts ? opts.assignId : false;
      if (assignId == null) dart.nullFailed(I[29], 75, 10, "assignId");
      let initState = opts && 'initState' in opts ? opts.initState : null;
      let filter = opts && 'filter' in opts ? opts.filter : null;
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let id = opts && 'id' in opts ? opts.id : null;
      let didChangeDependencies = opts && 'didChangeDependencies' in opts ? opts.didChangeDependencies : null;
      let didUpdateWidget = opts && 'didUpdateWidget' in opts ? opts.didUpdateWidget : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[init$0] = init;
      this[global$0] = global;
      this[builder$5] = builder;
      this[autoRemove$0] = autoRemove;
      this[assignId$] = assignId;
      this[initState$0] = initState;
      this[filter$] = filter;
      this[tag$] = tag;
      this[dispose$0] = dispose;
      this[id$0] = id;
      this[didChangeDependencies$0] = didChangeDependencies;
      this[didUpdateWidget$0] = didUpdateWidget;
      GetBuilder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = GetBuilder.prototype;
    dart.addTypeTests(GetBuilder);
    GetBuilder.prototype[_is_GetBuilder_default] = true;
    dart.addTypeCaches(GetBuilder);
    dart.setMethodSignature(GetBuilder, () => ({
      __proto__: dart.getMethods(GetBuilder.__proto__),
      createState: dart.fnType(get_state.GetBuilderState$(T), [])
    }));
    dart.setLibraryUri(GetBuilder, I[26]);
    dart.setFieldSignature(GetBuilder, () => ({
      __proto__: dart.getFields(GetBuilder.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [T])),
      global: dart.finalFieldType(core.bool),
      id: dart.finalFieldType(dart.nullable(core.Object)),
      tag: dart.finalFieldType(dart.nullable(core.String)),
      autoRemove: dart.finalFieldType(core.bool),
      assignId: dart.finalFieldType(core.bool),
      filter: dart.finalFieldType(dart.nullable(dart.fnType(core.Object, [T]))),
      initState: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [get_state.GetBuilderState$(T)]))),
      dispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [get_state.GetBuilderState$(T)]))),
      didChangeDependencies: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [get_state.GetBuilderState$(T)]))),
      didUpdateWidget: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [get_state.GetBuilder$(get_controllers.GetxController), get_state.GetBuilderState$(T)]))),
      init: dart.finalFieldType(dart.nullable(T))
    }));
    return GetBuilder;
  });
  get_state.GetBuilder = get_state.GetBuilder$();
  dart.addTypeTests(get_state.GetBuilder, _is_GetBuilder_default);
  var controller = dart.privateName(get_state, "GetBuilderState.controller");
  var _isCreator = dart.privateName(get_state, "_isCreator");
  var _remove = dart.privateName(get_state, "_remove");
  var _filter = dart.privateName(get_state, "_filter");
  var _subscribeToController = dart.privateName(get_state, "_subscribeToController");
  var _filterUpdate = dart.privateName(get_state, "_filterUpdate");
  const _is_GetBuilderState_default = Symbol('_is_GetBuilderState_default');
  get_state.GetBuilderState$ = dart.generic(T => {
    var TN = () => (TN = dart.constFn(dart.nullable(T)))();
    var GetBuilderStateOfT = () => (GetBuilderStateOfT = dart.constFn(get_state.GetBuilderState$(T)))();
    var GetBuilderStateOfTTovoid = () => (GetBuilderStateOfTTovoid = dart.constFn(dart.fnType(dart.void, [GetBuilderStateOfT()])))();
    var GetBuilderStateOfTToNvoid = () => (GetBuilderStateOfTToNvoid = dart.constFn(dart.nullable(GetBuilderStateOfTTovoid())))();
    var TToObject = () => (TToObject = dart.constFn(dart.fnType(core.Object, [T])))();
    var TToNObject = () => (TToNObject = dart.constFn(dart.nullable(TToObject())))();
    var GetBuilderOfT = () => (GetBuilderOfT = dart.constFn(get_state.GetBuilder$(T)))();
    var GetBuilderOfGetxControllerAndGetBuilderStateOfTTovoid = () => (GetBuilderOfGetxControllerAndGetBuilderStateOfTTovoid = dart.constFn(dart.fnType(dart.void, [T$.GetBuilderOfGetxController(), GetBuilderStateOfT()])))();
    var GetBuilderOfGetxControllerAndGetBuilderStateOfTToNvoid = () => (GetBuilderOfGetxControllerAndGetBuilderStateOfTToNvoid = dart.constFn(dart.nullable(GetBuilderOfGetxControllerAndGetBuilderStateOfTTovoid())))();
    var TToWidget = () => (TToWidget = dart.constFn(dart.fnType(framework.Widget, [T])))();
    const State_GetStateUpdaterMixin$36 = class State_GetStateUpdaterMixin extends framework.State$(get_state.GetBuilder$(T)) {};
    (State_GetStateUpdaterMixin$36.new = function() {
      State_GetStateUpdaterMixin$36.__proto__.new.call(this);
    }).prototype = State_GetStateUpdaterMixin$36.prototype;
    dart.applyMixin(State_GetStateUpdaterMixin$36, get_state.GetStateUpdaterMixin$(get_state.GetBuilder$(T)));
    class GetBuilderState extends State_GetStateUpdaterMixin$36 {
      get controller() {
        return this[controller];
      }
      set controller(value) {
        this[controller] = TN().as(value);
      }
      initState() {
        let t25, t25$;
        super.initState();
        t25 = GetBuilderStateOfTToNvoid().as(this.widget.initState);
        t25 == null ? null : t25(this);
        let isRegistered = get_instance.GetInstance.new().isRegistered(T, {tag: this.widget.tag});
        if (dart.test(this.widget.global)) {
          if (dart.test(isRegistered)) {
            if (dart.test(get_instance.GetInstance.new().isPrepared(T, {tag: this.widget.tag}))) {
              this[_isCreator] = true;
            } else {
              this[_isCreator] = false;
            }
            this.controller = get_instance.GetInstance.new().find(T, {tag: this.widget.tag});
          } else {
            this.controller = this.widget.init;
            this[_isCreator] = true;
            get_instance.GetInstance.new().put(T, dart.nullCheck(this.controller), {tag: this.widget.tag});
          }
        } else {
          this.controller = this.widget.init;
          this[_isCreator] = true;
          t25$ = this.controller;
          t25$ == null ? null : t25$.onStart.call();
        }
        if (TToNObject().as(this.widget.filter) != null) {
          this[_filter] = dart.nullCheck(TToNObject().as(this.widget.filter))(dart.nullCheck(this.controller));
        }
        this[_subscribeToController]();
      }
      [_subscribeToController]() {
        let t25, t25$, t25$0;
        t25 = this[_remove];
        t25 == null ? null : t25();
        this[_remove] = this.widget.id == null ? (t25$ = this.controller, t25$ == null ? null : t25$.addListener(this[_filter] != null ? dart.bind(this, _filterUpdate) : dart.bind(this, 'getUpdate'))) : (t25$0 = this.controller, t25$0 == null ? null : t25$0.addListenerId(this.widget.id, this[_filter] != null ? dart.bind(this, _filterUpdate) : dart.bind(this, 'getUpdate')));
      }
      [_filterUpdate]() {
        let newFilter = dart.nullCheck(TToNObject().as(this.widget.filter))(dart.nullCheck(this.controller));
        if (!dart.equals(newFilter, this[_filter])) {
          this[_filter] = newFilter;
          this.getUpdate();
        }
      }
      dispose() {
        let t25, t25$;
        super.dispose();
        t25 = GetBuilderStateOfTToNvoid().as(this.widget.dispose);
        t25 == null ? null : t25(this);
        if (dart.nullCheck(this[_isCreator]) || dart.test(this.widget.assignId)) {
          if (dart.test(this.widget.autoRemove) && dart.test(get_instance.GetInstance.new().isRegistered(T, {tag: this.widget.tag}))) {
            get_instance.GetInstance.new().delete(T, {tag: this.widget.tag});
          }
        }
        t25$ = this[_remove];
        t25$ == null ? null : t25$();
        this.controller = null;
        this[_isCreator] = null;
        this[_remove] = null;
        this[_filter] = null;
      }
      didChangeDependencies() {
        let t25;
        super.didChangeDependencies();
        t25 = GetBuilderStateOfTToNvoid().as(this.widget.didChangeDependencies);
        t25 == null ? null : t25(this);
      }
      didUpdateWidget(oldWidget) {
        let t25;
        T$.GetBuilderOfGetxController().as(oldWidget);
        if (oldWidget == null) dart.nullFailed(I[29], 197, 35, "oldWidget");
        super.didUpdateWidget(GetBuilderOfT().as(oldWidget));
        if (!dart.equals(oldWidget.id, this.widget.id)) {
          this[_subscribeToController]();
        }
        t25 = GetBuilderOfGetxControllerAndGetBuilderStateOfTToNvoid().as(this.widget.didUpdateWidget);
        t25 == null ? null : t25(oldWidget, this);
      }
      build(context) {
        let t26, t25;
        if (context == null) dart.nullFailed(I[29], 207, 29, "context");
        t25 = this.widget;
        t26 = dart.nullCheck(this.controller);
        return TToWidget().as(t25.builder)(t26);
      }
    }
    (GetBuilderState.new = function() {
      this[controller] = null;
      this[_isCreator] = false;
      this[_remove] = null;
      this[_filter] = null;
      GetBuilderState.__proto__.new.call(this);
      ;
    }).prototype = GetBuilderState.prototype;
    dart.addTypeTests(GetBuilderState);
    GetBuilderState.prototype[_is_GetBuilderState_default] = true;
    dart.addTypeCaches(GetBuilderState);
    dart.setMethodSignature(GetBuilderState, () => ({
      __proto__: dart.getMethods(GetBuilderState.__proto__),
      [_subscribeToController]: dart.fnType(dart.void, []),
      [_filterUpdate]: dart.fnType(dart.void, []),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(GetBuilderState, I[26]);
    dart.setFieldSignature(GetBuilderState, () => ({
      __proto__: dart.getFields(GetBuilderState.__proto__),
      controller: dart.fieldType(dart.nullable(T)),
      [_isCreator]: dart.fieldType(dart.nullable(core.bool)),
      [_remove]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
      [_filter]: dart.fieldType(dart.nullable(core.Object))
    }));
    return GetBuilderState;
  });
  get_state.GetBuilderState = get_state.GetBuilderState$();
  dart.addTypeTests(get_state.GetBuilderState, _is_GetBuilderState_default);
  var tag = dart.privateName(get_view, "GetView.tag");
  const _is_GetView_default = Symbol('_is_GetView_default');
  get_view.GetView$ = dart.generic(T => {
    class GetView extends framework.StatelessWidget {
      get tag() {
        return this[tag];
      }
      set tag(value) {
        super.tag = value;
      }
      get controller() {
        return dart.nullCheck(get_instance.GetInstance.new().find(T, {tag: this.tag}));
      }
    }
    (GetView.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[tag] = null;
      GetView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = GetView.prototype;
    dart.addTypeTests(GetView);
    GetView.prototype[_is_GetView_default] = true;
    dart.addTypeCaches(GetView);
    dart.setGetterSignature(GetView, () => ({
      __proto__: dart.getGetters(GetView.__proto__),
      controller: T
    }));
    dart.setLibraryUri(GetView, I[30]);
    dart.setFieldSignature(GetView, () => ({
      __proto__: dart.getFields(GetView.__proto__),
      tag: dart.finalFieldType(dart.nullable(core.String))
    }));
    return GetView;
  });
  get_view.GetView = get_view.GetView$();
  dart.addTypeTests(get_view.GetView, _is_GetView_default);
  var tag$0 = dart.privateName(get_view, "GetWidget.tag");
  const _is_GetWidget_default = Symbol('_is_GetWidget_default');
  get_view.GetWidget$ = dart.generic(S => {
    var _GetCacheOfS = () => (_GetCacheOfS = dart.constFn(get_view._GetCache$(S)))();
    class GetWidget extends get_widget_cache.GetWidgetCache {
      get tag() {
        return this[tag$0];
      }
      set tag(value) {
        super.tag = value;
      }
      get controller() {
        return S.as(get_view.GetWidget._cache._get(this));
      }
      createWidgetCache() {
        return new (_GetCacheOfS()).new();
      }
    }
    (GetWidget.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[tag$0] = null;
      GetWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = GetWidget.prototype;
    dart.addTypeTests(GetWidget);
    GetWidget.prototype[_is_GetWidget_default] = true;
    dart.addTypeCaches(GetWidget);
    dart.setMethodSignature(GetWidget, () => ({
      __proto__: dart.getMethods(GetWidget.__proto__),
      createWidgetCache: dart.fnType(get_widget_cache.WidgetCache$(get_widget_cache.GetWidgetCache), [])
    }));
    dart.setGetterSignature(GetWidget, () => ({
      __proto__: dart.getGetters(GetWidget.__proto__),
      controller: S
    }));
    dart.setLibraryUri(GetWidget, I[30]);
    dart.setFieldSignature(GetWidget, () => ({
      __proto__: dart.getFields(GetWidget.__proto__),
      tag: dart.finalFieldType(dart.nullable(core.String))
    }));
    return GetWidget;
  });
  get_view.GetWidget = get_view.GetWidget$();
  dart.defineLazy(get_view.GetWidget, {
    /*get_view.GetWidget._cache*/get _cache() {
      return new (T$.ExpandoOfGetLifeCycleBase()).new();
    }
  }, false);
  dart.addTypeTests(get_view.GetWidget, _is_GetWidget_default);
  var _controller$ = dart.privateName(get_view, "_controller");
  var _isCreator$ = dart.privateName(get_view, "_isCreator");
  const _is__GetCache_default = Symbol('_is__GetCache_default');
  get_view._GetCache$ = dart.generic(S => {
    class _GetCache extends get_widget_cache.WidgetCache$(get_view.GetWidget$(S)) {
      onInit() {
        this.info = get_instance.GetInstance.new().getInstanceInfo(S, {tag: dart.nullCheck(this.widget).tag});
        this[_isCreator$] = dart.test(dart.nullCheck(this.info).isPrepared) && dart.test(dart.nullCheck(this.info).isCreate);
        if (dart.test(dart.nullCheck(this.info).isRegistered)) {
          this[_controller$] = extension_instance['Inst|find'](S, get_main.Get, {tag: dart.nullCheck(this.widget).tag});
        }
        get_view.GetWidget._cache._set(dart.nullCheck(this.widget), this[_controller$]);
        super.onInit();
      }
      onClose() {
        if (dart.test(this[_isCreator$])) {
          event_loop_extensions['LoopEventsExt|asap'](core.Null, get_main.Get, dart.fn(() => {
            let t26, t25, t26$, t25$;
            dart.nullCheck(dart.nullCheck(this.widget).controller).onDelete.call();
            t25 = get_main.Get;
            t26 = "\"" + dart.str(dart.runtimeType(dart.nullCheck(this.widget).controller)) + "\" onClose() called";
            t25.log(t26);
            t25$ = get_main.Get;
            t26$ = "\"" + dart.str(dart.runtimeType(dart.nullCheck(this.widget).controller)) + "\" deleted from memory";
            t25$.log(t26$);
            get_view.GetWidget._cache._set(dart.nullCheck(this.widget), null);
          }, T$.VoidToNull()));
        }
        this.info = null;
        super.onClose();
      }
      build(context) {
        if (context == null) dart.nullFailed(I[31], 102, 29, "context");
        return dart.nullCheck(this.widget).build(context);
      }
    }
    (_GetCache.new = function() {
      this[_controller$] = null;
      this[_isCreator$] = false;
      this.info = null;
      _GetCache.__proto__.new.call(this);
      ;
    }).prototype = _GetCache.prototype;
    dart.addTypeTests(_GetCache);
    _GetCache.prototype[_is__GetCache_default] = true;
    dart.addTypeCaches(_GetCache);
    dart.setMethodSignature(_GetCache, () => ({
      __proto__: dart.getMethods(_GetCache.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(_GetCache, I[30]);
    dart.setFieldSignature(_GetCache, () => ({
      __proto__: dart.getFields(_GetCache.__proto__),
      [_controller$]: dart.fieldType(dart.nullable(S)),
      [_isCreator$]: dart.fieldType(core.bool),
      info: dart.fieldType(dart.nullable(get_instance.InstanceInfo))
    }));
    return _GetCache;
  });
  get_view._GetCache = get_view._GetCache$();
  dart.addTypeTests(get_view._GetCache, _is__GetCache_default);
  get_responsive.GetResponsiveMixin = class GetResponsiveMixin extends framework.Widget {};
  get_responsive.GetResponsiveMixin[dart.mixinOn] = Widget => class GetResponsiveMixin extends Widget {
    build(context) {
      let t25, t25$, t25$0, t25$1, t25$2, t25$3, t25$4, t25$5;
      if (context == null) dart.nullFailed(I[32], 11, 29, "context");
      this.screen.context = context;
      let widget = null;
      if (dart.test(this.alwaysUseBuilder)) {
        widget = this.builder();
        if (widget != null) return widget;
      }
      if (dart.test(this.screen.isDesktop)) {
        widget = (t25 = this.desktop(), t25 == null ? widget : t25);
        if (widget != null) return widget;
      }
      if (dart.test(this.screen.isTablet)) {
        widget = (t25$ = this.tablet(), t25$ == null ? this.desktop() : t25$);
        if (widget != null) return widget;
      }
      if (dart.test(this.screen.isPhone)) {
        widget = (t25$1 = (t25$0 = this.phone(), t25$0 == null ? this.tablet() : t25$0), t25$1 == null ? this.desktop() : t25$1);
        if (widget != null) return widget;
      }
      t25$5 = (t25$4 = (t25$3 = (t25$2 = this.watch(), t25$2 == null ? this.phone() : t25$2), t25$3 == null ? this.tablet() : t25$3), t25$4 == null ? this.desktop() : t25$4);
      return t25$5 == null ? dart.nullCheck(this.builder()) : t25$5;
    }
    builder() {
      return null;
    }
    desktop() {
      return null;
    }
    phone() {
      return null;
    }
    tablet() {
      return null;
    }
    watch() {
      return null;
    }
  };
  dart.addTypeTests(get_responsive.GetResponsiveMixin);
  dart.addTypeCaches(get_responsive.GetResponsiveMixin);
  get_responsive.GetResponsiveMixin[dart.implements] = () => [framework.Widget];
  dart.setMethodSignature(get_responsive.GetResponsiveMixin, () => ({
    __proto__: dart.getMethods(get_responsive.GetResponsiveMixin.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    builder: dart.fnType(dart.nullable(framework.Widget), []),
    desktop: dart.fnType(dart.nullable(framework.Widget), []),
    phone: dart.fnType(dart.nullable(framework.Widget), []),
    tablet: dart.fnType(dart.nullable(framework.Widget), []),
    watch: dart.fnType(dart.nullable(framework.Widget), [])
  }));
  dart.setLibraryUri(get_responsive.GetResponsiveMixin, I[33]);
  var alwaysUseBuilder$ = dart.privateName(get_responsive, "GetResponsiveView.alwaysUseBuilder");
  var screen = dart.privateName(get_responsive, "GetResponsiveView.screen");
  var ResponsiveScreenSettings_watchChangePoint = dart.privateName(get_responsive, "ResponsiveScreenSettings.watchChangePoint");
  var ResponsiveScreenSettings_tabletChangePoint = dart.privateName(get_responsive, "ResponsiveScreenSettings.tabletChangePoint");
  var ResponsiveScreenSettings_desktopChangePoint = dart.privateName(get_responsive, "ResponsiveScreenSettings.desktopChangePoint");
  const _is_GetResponsiveView_default = Symbol('_is_GetResponsiveView_default');
  get_responsive.GetResponsiveView$ = dart.generic(T => {
    const GetView_GetResponsiveMixin$36 = class GetView_GetResponsiveMixin extends get_view.GetView$(T) {};
    (GetView_GetResponsiveMixin$36.new = function(opts) {
      GetView_GetResponsiveMixin$36.__proto__.new.call(this, opts);
    }).prototype = GetView_GetResponsiveMixin$36.prototype;
    dart.applyMixin(GetView_GetResponsiveMixin$36, get_responsive.GetResponsiveMixin);
    class GetResponsiveView extends GetView_GetResponsiveMixin$36 {
      get alwaysUseBuilder() {
        return this[alwaysUseBuilder$];
      }
      set alwaysUseBuilder(value) {
        super.alwaysUseBuilder = value;
      }
      get screen() {
        return this[screen];
      }
      set screen(value) {
        super.screen = value;
      }
    }
    (GetResponsiveView.new = function(opts) {
      let alwaysUseBuilder = opts && 'alwaysUseBuilder' in opts ? opts.alwaysUseBuilder : false;
      if (alwaysUseBuilder == null) dart.nullFailed(I[32], 64, 10, "alwaysUseBuilder");
      let settings = opts && 'settings' in opts ? opts.settings : C[579] || CT.C579;
      if (settings == null) dart.nullFailed(I[32], 65, 30, "settings");
      let key = opts && 'key' in opts ? opts.key : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[alwaysUseBuilder$] = alwaysUseBuilder;
      this[screen] = new get_responsive.ResponsiveScreen.new(settings);
      GetResponsiveView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = GetResponsiveView.prototype;
    dart.addTypeTests(GetResponsiveView);
    GetResponsiveView.prototype[_is_GetResponsiveView_default] = true;
    dart.addTypeCaches(GetResponsiveView);
    dart.setLibraryUri(GetResponsiveView, I[33]);
    dart.setFieldSignature(GetResponsiveView, () => ({
      __proto__: dart.getFields(GetResponsiveView.__proto__),
      alwaysUseBuilder: dart.finalFieldType(core.bool),
      screen: dart.finalFieldType(get_responsive.ResponsiveScreen)
    }));
    return GetResponsiveView;
  });
  get_responsive.GetResponsiveView = get_responsive.GetResponsiveView$();
  dart.addTypeTests(get_responsive.GetResponsiveView, _is_GetResponsiveView_default);
  var alwaysUseBuilder$0 = dart.privateName(get_responsive, "GetResponsiveWidget.alwaysUseBuilder");
  var screen$ = dart.privateName(get_responsive, "GetResponsiveWidget.screen");
  const _is_GetResponsiveWidget_default = Symbol('_is_GetResponsiveWidget_default');
  get_responsive.GetResponsiveWidget$ = dart.generic(T => {
    const GetWidget_GetResponsiveMixin$36 = class GetWidget_GetResponsiveMixin extends get_view.GetWidget$(T) {};
    (GetWidget_GetResponsiveMixin$36.new = function(opts) {
      GetWidget_GetResponsiveMixin$36.__proto__.new.call(this, opts);
    }).prototype = GetWidget_GetResponsiveMixin$36.prototype;
    dart.applyMixin(GetWidget_GetResponsiveMixin$36, get_responsive.GetResponsiveMixin);
    class GetResponsiveWidget extends GetWidget_GetResponsiveMixin$36 {
      get alwaysUseBuilder() {
        return this[alwaysUseBuilder$0];
      }
      set alwaysUseBuilder(value) {
        super.alwaysUseBuilder = value;
      }
      get screen() {
        return this[screen$];
      }
      set screen(value) {
        super.screen = value;
      }
    }
    (GetResponsiveWidget.new = function(opts) {
      let alwaysUseBuilder = opts && 'alwaysUseBuilder' in opts ? opts.alwaysUseBuilder : false;
      if (alwaysUseBuilder == null) dart.nullFailed(I[32], 80, 10, "alwaysUseBuilder");
      let settings = opts && 'settings' in opts ? opts.settings : C[579] || CT.C579;
      if (settings == null) dart.nullFailed(I[32], 81, 30, "settings");
      let key = opts && 'key' in opts ? opts.key : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[alwaysUseBuilder$0] = alwaysUseBuilder;
      this[screen$] = new get_responsive.ResponsiveScreen.new(settings);
      GetResponsiveWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = GetResponsiveWidget.prototype;
    dart.addTypeTests(GetResponsiveWidget);
    GetResponsiveWidget.prototype[_is_GetResponsiveWidget_default] = true;
    dart.addTypeCaches(GetResponsiveWidget);
    dart.setLibraryUri(GetResponsiveWidget, I[33]);
    dart.setFieldSignature(GetResponsiveWidget, () => ({
      __proto__: dart.getFields(GetResponsiveWidget.__proto__),
      alwaysUseBuilder: dart.finalFieldType(core.bool),
      screen: dart.finalFieldType(get_responsive.ResponsiveScreen)
    }));
    return GetResponsiveWidget;
  });
  get_responsive.GetResponsiveWidget = get_responsive.GetResponsiveWidget$();
  dart.addTypeTests(get_responsive.GetResponsiveWidget, _is_GetResponsiveWidget_default);
  const desktopChangePoint$ = ResponsiveScreenSettings_desktopChangePoint;
  const tabletChangePoint$ = ResponsiveScreenSettings_tabletChangePoint;
  const watchChangePoint$ = ResponsiveScreenSettings_watchChangePoint;
  get_responsive.ResponsiveScreenSettings = class ResponsiveScreenSettings extends core.Object {
    get desktopChangePoint() {
      return this[desktopChangePoint$];
    }
    set desktopChangePoint(value) {
      super.desktopChangePoint = value;
    }
    get tabletChangePoint() {
      return this[tabletChangePoint$];
    }
    set tabletChangePoint(value) {
      super.tabletChangePoint = value;
    }
    get watchChangePoint() {
      return this[watchChangePoint$];
    }
    set watchChangePoint(value) {
      super.watchChangePoint = value;
    }
  };
  (get_responsive.ResponsiveScreenSettings.new = function(opts) {
    let desktopChangePoint = opts && 'desktopChangePoint' in opts ? opts.desktopChangePoint : 1200;
    if (desktopChangePoint == null) dart.nullFailed(I[32], 105, 13, "desktopChangePoint");
    let tabletChangePoint = opts && 'tabletChangePoint' in opts ? opts.tabletChangePoint : 600;
    if (tabletChangePoint == null) dart.nullFailed(I[32], 106, 12, "tabletChangePoint");
    let watchChangePoint = opts && 'watchChangePoint' in opts ? opts.watchChangePoint : 300;
    if (watchChangePoint == null) dart.nullFailed(I[32], 107, 12, "watchChangePoint");
    this[desktopChangePoint$] = desktopChangePoint;
    this[tabletChangePoint$] = tabletChangePoint;
    this[watchChangePoint$] = watchChangePoint;
    ;
  }).prototype = get_responsive.ResponsiveScreenSettings.prototype;
  dart.addTypeTests(get_responsive.ResponsiveScreenSettings);
  dart.addTypeCaches(get_responsive.ResponsiveScreenSettings);
  dart.setLibraryUri(get_responsive.ResponsiveScreenSettings, I[33]);
  dart.setFieldSignature(get_responsive.ResponsiveScreenSettings, () => ({
    __proto__: dart.getFields(get_responsive.ResponsiveScreenSettings.__proto__),
    desktopChangePoint: dart.finalFieldType(core.double),
    tabletChangePoint: dart.finalFieldType(core.double),
    watchChangePoint: dart.finalFieldType(core.double)
  }));
  var settings$0 = dart.privateName(get_responsive, "ResponsiveScreen.settings");
  var __ResponsiveScreen_context = dart.privateName(get_responsive, "_#ResponsiveScreen#context");
  var __ResponsiveScreen_context_isSet = dart.privateName(get_responsive, "_#ResponsiveScreen#context#isSet");
  var __ResponsiveScreen__isPaltformDesktop = dart.privateName(get_responsive, "_#ResponsiveScreen#_isPaltformDesktop");
  var __ResponsiveScreen__isPaltformDesktop_isSet = dart.privateName(get_responsive, "_#ResponsiveScreen#_isPaltformDesktop#isSet");
  var _isPaltformDesktop = dart.privateName(get_responsive, "_isPaltformDesktop");
  var _getdeviceWidth = dart.privateName(get_responsive, "_getdeviceWidth");
  get_responsive.ResponsiveScreen = class ResponsiveScreen extends core.Object {
    get settings() {
      return this[settings$0];
    }
    set settings(value) {
      super.settings = value;
    }
    get context() {
      let t25;
      return dart.test(this[__ResponsiveScreen_context_isSet]) ? (t25 = this[__ResponsiveScreen_context], t25) : dart.throw(new _internal.LateError.fieldNI("context"));
    }
    set context(t25) {
      if (t25 == null) dart.nullFailed(I[32], 111, 21, "null");
      this[__ResponsiveScreen_context_isSet] = true;
      this[__ResponsiveScreen_context] = t25;
    }
    get [_isPaltformDesktop]() {
      let t26;
      return dart.test(this[__ResponsiveScreen__isPaltformDesktop_isSet]) ? (t26 = this[__ResponsiveScreen__isPaltformDesktop], t26) : dart.throw(new _internal.LateError.fieldNI("_isPaltformDesktop"));
    }
    set [_isPaltformDesktop](t26) {
      if (t26 == null) dart.nullFailed(I[32], 114, 13, "null");
      this[__ResponsiveScreen__isPaltformDesktop_isSet] = true;
      this[__ResponsiveScreen__isPaltformDesktop] = t26;
    }
    get height() {
      return context_extensions['ContextExtensionss|get#height'](this.context);
    }
    get width() {
      return context_extensions['ContextExtensionss|get#width'](this.context);
    }
    get isDesktop() {
      return this.screenType == get_responsive.ScreenType.Desktop;
    }
    get isTablet() {
      return this.screenType == get_responsive.ScreenType.Tablet;
    }
    get isPhone() {
      return this.screenType == get_responsive.ScreenType.Phone;
    }
    get isWatch() {
      return this.screenType == get_responsive.ScreenType.Watch;
    }
    get [_getdeviceWidth]() {
      if (dart.test(this[_isPaltformDesktop])) {
        return this.width;
      }
      return context_extensions['ContextExtensionss|get#mediaQueryShortestSide'](this.context);
    }
    get screenType() {
      let deviceWidth = this[_getdeviceWidth];
      if (dart.notNull(deviceWidth) >= dart.notNull(this.settings.desktopChangePoint)) return get_responsive.ScreenType.Desktop;
      if (dart.notNull(deviceWidth) >= dart.notNull(this.settings.tabletChangePoint)) return get_responsive.ScreenType.Tablet;
      if (dart.notNull(deviceWidth) < dart.notNull(this.settings.watchChangePoint)) return get_responsive.ScreenType.Watch;
      return get_responsive.ScreenType.Phone;
    }
    responsiveValue(T, opts) {
      let mobile = opts && 'mobile' in opts ? opts.mobile : null;
      let tablet = opts && 'tablet' in opts ? opts.tablet : null;
      let desktop = opts && 'desktop' in opts ? opts.desktop : null;
      let watch = opts && 'watch' in opts ? opts.watch : null;
      if (dart.test(this.isDesktop) && desktop != null) return desktop;
      if (dart.test(this.isTablet) && tablet != null) return tablet;
      if (dart.test(this.isPhone) && mobile != null) return mobile;
      return watch;
    }
  };
  (get_responsive.ResponsiveScreen.new = function(settings) {
    if (settings == null) dart.nullFailed(I[32], 115, 25, "settings");
    this[__ResponsiveScreen_context] = null;
    this[__ResponsiveScreen_context_isSet] = false;
    this[__ResponsiveScreen__isPaltformDesktop] = null;
    this[__ResponsiveScreen__isPaltformDesktop_isSet] = false;
    this[settings$0] = settings;
    this[_isPaltformDesktop] = platform.GetPlatform.isDesktop;
  }).prototype = get_responsive.ResponsiveScreen.prototype;
  dart.addTypeTests(get_responsive.ResponsiveScreen);
  dart.addTypeCaches(get_responsive.ResponsiveScreen);
  dart.setMethodSignature(get_responsive.ResponsiveScreen, () => ({
    __proto__: dart.getMethods(get_responsive.ResponsiveScreen.__proto__),
    responsiveValue: dart.gFnType(T => [dart.nullable(T), [], {desktop: dart.nullable(T), mobile: dart.nullable(T), tablet: dart.nullable(T), watch: dart.nullable(T)}, {}], T => [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(get_responsive.ResponsiveScreen, () => ({
    __proto__: dart.getGetters(get_responsive.ResponsiveScreen.__proto__),
    context: framework.BuildContext,
    [_isPaltformDesktop]: core.bool,
    height: core.double,
    width: core.double,
    isDesktop: core.bool,
    isTablet: core.bool,
    isPhone: core.bool,
    isWatch: core.bool,
    [_getdeviceWidth]: core.double,
    screenType: get_responsive.ScreenType
  }));
  dart.setSetterSignature(get_responsive.ResponsiveScreen, () => ({
    __proto__: dart.getSetters(get_responsive.ResponsiveScreen.__proto__),
    context: framework.BuildContext,
    [_isPaltformDesktop]: core.bool
  }));
  dart.setLibraryUri(get_responsive.ResponsiveScreen, I[33]);
  dart.setFieldSignature(get_responsive.ResponsiveScreen, () => ({
    __proto__: dart.getFields(get_responsive.ResponsiveScreen.__proto__),
    [__ResponsiveScreen_context]: dart.fieldType(dart.nullable(framework.BuildContext)),
    [__ResponsiveScreen_context_isSet]: dart.fieldType(core.bool),
    settings: dart.finalFieldType(get_responsive.ResponsiveScreenSettings),
    [__ResponsiveScreen__isPaltformDesktop]: dart.fieldType(dart.nullable(core.bool)),
    [__ResponsiveScreen__isPaltformDesktop_isSet]: dart.fieldType(core.bool)
  }));
  var _name$5 = dart.privateName(get_responsive, "_name");
  get_responsive.ScreenType = class ScreenType extends core.Object {
    toString() {
      return this[_name$5];
    }
  };
  (get_responsive.ScreenType.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[32], 168, 6, "index");
    if (_name == null) dart.nullFailed(I[32], 168, 6, "_name");
    this.index = index;
    this[_name$5] = _name;
    ;
  }).prototype = get_responsive.ScreenType.prototype;
  dart.addTypeTests(get_responsive.ScreenType);
  dart.addTypeCaches(get_responsive.ScreenType);
  dart.setLibraryUri(get_responsive.ScreenType, I[33]);
  dart.setFieldSignature(get_responsive.ScreenType, () => ({
    __proto__: dart.getFields(get_responsive.ScreenType.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$5]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(get_responsive.ScreenType, ['toString']);
  get_responsive.ScreenType.Watch = C[580] || CT.C580;
  get_responsive.ScreenType.Phone = C[581] || CT.C581;
  get_responsive.ScreenType.Tablet = C[582] || CT.C582;
  get_responsive.ScreenType.Desktop = C[583] || CT.C583;
  get_responsive.ScreenType.values = C[584] || CT.C584;
  const DisposableInterface_ListenableMixin$36 = class DisposableInterface_ListenableMixin extends rx_disposable.DisposableInterface {};
  (DisposableInterface_ListenableMixin$36.new = function() {
    DisposableInterface_ListenableMixin$36.__proto__.new.call(this);
  }).prototype = DisposableInterface_ListenableMixin$36.prototype;
  dart.applyMixin(DisposableInterface_ListenableMixin$36, list_notifier.ListenableMixin);
  const DisposableInterface_ListNotifierMixin$36 = class DisposableInterface_ListNotifierMixin extends DisposableInterface_ListenableMixin$36 {};
  (DisposableInterface_ListNotifierMixin$36.new = function() {
    list_notifier.ListNotifierMixin[dart.mixinNew].call(this);
    DisposableInterface_ListNotifierMixin$36.__proto__.new.call(this);
  }).prototype = DisposableInterface_ListNotifierMixin$36.prototype;
  dart.applyMixin(DisposableInterface_ListNotifierMixin$36, list_notifier.ListNotifierMixin);
  get_controllers.GetxController = class GetxController extends DisposableInterface_ListNotifierMixin$36 {
    update(ids = null, condition = true) {
      if (condition == null) dart.nullFailed(I[34], 17, 40, "condition");
      if (!dart.test(condition)) {
        return;
      }
      if (ids == null) {
        this.refresh();
      } else {
        for (let id of ids) {
          this.refreshGroup(id);
        }
      }
    }
  };
  (get_controllers.GetxController.new = function() {
    get_controllers.GetxController.__proto__.new.call(this);
    ;
  }).prototype = get_controllers.GetxController.prototype;
  dart.addTypeTests(get_controllers.GetxController);
  dart.addTypeCaches(get_controllers.GetxController);
  dart.setMethodSignature(get_controllers.GetxController, () => ({
    __proto__: dart.getMethods(get_controllers.GetxController.__proto__),
    update: dart.fnType(dart.void, [], [dart.nullable(core.List$(core.Object)), core.bool])
  }));
  dart.setLibraryUri(get_controllers.GetxController, I[35]);
  var scroll = dart.privateName(get_controllers, "ScrollMixin.scroll");
  var _canFetchBottom = dart.privateName(get_controllers, "_canFetchBottom");
  var _canFetchTop = dart.privateName(get_controllers, "_canFetchTop");
  var _listener = dart.privateName(get_controllers, "_listener");
  var _checkIfCanLoadMore = dart.privateName(get_controllers, "_checkIfCanLoadMore");
  get_controllers.ScrollMixin = class ScrollMixin extends lifecycle.GetLifeCycleBase {};
  get_controllers.ScrollMixin[dart.mixinOn] = GetLifeCycleBase => class ScrollMixin extends GetLifeCycleBase {
    get scroll() {
      return this[scroll];
    }
    set scroll(value) {
      super.scroll = value;
    }
    onInit() {
      super.onInit();
      this.scroll.addListener(dart.bind(this, _listener));
    }
    [_listener]() {
      if (dart.test(this.scroll.position.atEdge)) {
        this[_checkIfCanLoadMore]();
      }
    }
    [_checkIfCanLoadMore]() {
      return async.async(dart.void, (function* _checkIfCanLoadMore() {
        if (this.scroll.position.pixels === 0) {
          if (!dart.test(this[_canFetchTop])) return;
          this[_canFetchTop] = false;
          yield this.onTopScroll();
          this[_canFetchTop] = true;
        } else {
          if (!dart.test(this[_canFetchBottom])) return;
          this[_canFetchBottom] = false;
          yield this.onEndScroll();
          this[_canFetchBottom] = true;
        }
      }).bind(this));
    }
    onClose() {
      this.scroll.removeListener(dart.bind(this, _listener));
      super.onClose();
    }
  };
  (get_controllers.ScrollMixin[dart.mixinNew] = function() {
    this[scroll] = new scroll_controller.ScrollController.new();
    this[_canFetchBottom] = true;
    this[_canFetchTop] = true;
  }).prototype = get_controllers.ScrollMixin.prototype;
  dart.addTypeTests(get_controllers.ScrollMixin);
  dart.addTypeCaches(get_controllers.ScrollMixin);
  get_controllers.ScrollMixin[dart.implements] = () => [lifecycle.GetLifeCycleBase];
  dart.setMethodSignature(get_controllers.ScrollMixin, () => ({
    __proto__: dart.getMethods(get_controllers.ScrollMixin.__proto__),
    [_listener]: dart.fnType(dart.void, []),
    [_checkIfCanLoadMore]: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setLibraryUri(get_controllers.ScrollMixin, I[35]);
  dart.setFieldSignature(get_controllers.ScrollMixin, () => ({
    __proto__: dart.getFields(get_controllers.ScrollMixin.__proto__),
    scroll: dart.finalFieldType(scroll_controller.ScrollController),
    [_canFetchBottom]: dart.fieldType(core.bool),
    [_canFetchTop]: dart.fieldType(core.bool)
  }));
  get_controllers.RxController = class RxController extends rx_disposable.DisposableInterface {};
  (get_controllers.RxController.new = function() {
    get_controllers.RxController.__proto__.new.call(this);
    ;
  }).prototype = get_controllers.RxController.prototype;
  dart.addTypeTests(get_controllers.RxController);
  dart.addTypeCaches(get_controllers.RxController);
  dart.setLibraryUri(get_controllers.RxController, I[35]);
  const GetxController_WidgetsBindingObserver$36 = class GetxController_WidgetsBindingObserver extends get_controllers.GetxController {};
  (GetxController_WidgetsBindingObserver$36.new = function() {
    GetxController_WidgetsBindingObserver$36.__proto__.new.call(this);
  }).prototype = GetxController_WidgetsBindingObserver$36.prototype;
  dart.applyMixin(GetxController_WidgetsBindingObserver$36, binding.WidgetsBindingObserver);
  get_controllers.FullLifeCycleController = class FullLifeCycleController extends GetxController_WidgetsBindingObserver$36 {};
  (get_controllers.FullLifeCycleController.new = function() {
    get_controllers.FullLifeCycleController.__proto__.new.call(this);
    ;
  }).prototype = get_controllers.FullLifeCycleController.prototype;
  dart.addTypeTests(get_controllers.FullLifeCycleController);
  dart.addTypeCaches(get_controllers.FullLifeCycleController);
  dart.setLibraryUri(get_controllers.FullLifeCycleController, I[35]);
  get_controllers.FullLifeCycle = class FullLifeCycle extends get_controllers.FullLifeCycleController {};
  get_controllers.FullLifeCycle[dart.mixinOn] = FullLifeCycleController => class FullLifeCycle extends FullLifeCycleController {
    onInit() {
      super.onInit();
      dart.nullCheck(binding.WidgetsBinding.instance).addObserver(this);
    }
    onClose() {
      dart.nullCheck(binding.WidgetsBinding.instance).removeObserver(this);
      super.onClose();
    }
    didChangeAppLifecycleState(state) {
      if (state == null) dart.nullFailed(I[34], 102, 53, "state");
      switch (state) {
        case C[585] || CT.C585:
        {
          this.onResumed();
          break;
        }
        case C[586] || CT.C586:
        {
          this.onInactive();
          break;
        }
        case C[587] || CT.C587:
        {
          this.onPaused();
          break;
        }
        case C[588] || CT.C588:
        {
          this.onDetached();
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
  };
  dart.addTypeTests(get_controllers.FullLifeCycle);
  dart.addTypeCaches(get_controllers.FullLifeCycle);
  get_controllers.FullLifeCycle[dart.implements] = () => [get_controllers.FullLifeCycleController];
  dart.setLibraryUri(get_controllers.FullLifeCycle, I[35]);
  var _value = dart.privateName(rx_notifier, "StateMixin._value");
  var _status = dart.privateName(rx_notifier, "StateMixin._status");
  var _value$ = dart.privateName(rx_notifier, "_value");
  var _status$ = dart.privateName(rx_notifier, "_status");
  var _isNullOrEmpty = dart.privateName(rx_notifier, "_isNullOrEmpty");
  var _fillEmptyStatus = dart.privateName(rx_notifier, "_fillEmptyStatus");
  const _is_StateMixin_default = Symbol('_is_StateMixin_default');
  rx_notifier.StateMixin$ = dart.generic(T => {
    var TN = () => (TN = dart.constFn(dart.nullable(T)))();
    var FutureOfT = () => (FutureOfT = dart.constFn(async.Future$(T)))();
    var VoidToFutureOfT = () => (VoidToFutureOfT = dart.constFn(dart.fnType(FutureOfT(), [])))();
    var VoidToFn = () => (VoidToFn = dart.constFn(dart.fnType(VoidToFutureOfT(), [])))();
    var TToNull = () => (TToNull = dart.constFn(dart.fnType(core.Null, [T])))();
    class StateMixin extends list_notifier.ListNotifierMixin {}
    StateMixin[dart.mixinOn] = ListNotifierMixin => class StateMixin extends ListNotifierMixin {
      get [_value$]() {
        return this[_value];
      }
      set [_value$](value) {
        this[_value] = value;
      }
      get [_status$]() {
        return this[_status];
      }
      set [_status$](value) {
        this[_status] = value;
      }
      [_isNullOrEmpty](val) {
        if (val == null) return true;
        let result = false;
        if (core.Iterable.is(val)) {
          result = val[$isEmpty];
        } else if (typeof val == 'string') {
          result = val[$isEmpty];
        } else if (core.Map.is(val)) {
          result = val[$isEmpty];
        }
        return result;
      }
      [_fillEmptyStatus]() {
        this[_status$] = dart.test(this[_isNullOrEmpty](this[_value$])) ? rx_notifier.RxStatus.loading() : rx_notifier.RxStatus.success();
      }
      get status() {
        let t27;
        this.notifyChildrens();
        t27 = this[_status$];
        return t27 == null ? this[_status$] = this[_status$] = rx_notifier.RxStatus.loading() : t27;
      }
      get state() {
        return this.value;
      }
      get value() {
        this.notifyChildrens();
        return this[_value$];
      }
      set value(newValue) {
        TN().as(newValue);
        if (dart.equals(this[_value$], newValue)) return;
        this[_value$] = newValue;
        this.refresh();
      }
      change(newState, opts) {
        TN().as(newState);
        let status = opts && 'status' in opts ? opts.status : null;
        let _canUpdate = false;
        if (status != null) {
          this[_status$] = status;
          _canUpdate = true;
        }
        if (!dart.equals(newState, this[_value$])) {
          this[_value$] = newState;
          _canUpdate = true;
        }
        if (_canUpdate) {
          this.refresh();
        }
      }
      append(body, opts) {
        VoidToFn().as(body);
        if (body == null) dart.nullFailed(I[36], 66, 36, "body");
        let errorMessage = opts && 'errorMessage' in opts ? opts.errorMessage : null;
        let compute = body();
        compute().then(core.Null, dart.fn(newValue => {
          this.change(newValue, {status: rx_notifier.RxStatus.success()});
        }, TToNull()), {onError: dart.fn(err => {
            let t27;
            this.change(this.state, {status: rx_notifier.RxStatus.error((t27 = errorMessage, t27 == null ? dart.toString(err) : t27))});
          }, T$.dynamicToNull())});
      }
    };
    (StateMixin[dart.mixinNew] = function() {
      this[_value] = null;
      this[_status] = null;
    }).prototype = StateMixin.prototype;
    dart.addTypeTests(StateMixin);
    StateMixin.prototype[_is_StateMixin_default] = true;
    dart.addTypeCaches(StateMixin);
    StateMixin[dart.implements] = () => [list_notifier.ListNotifierMixin];
    dart.setMethodSignature(StateMixin, () => ({
      __proto__: dart.getMethods(StateMixin.__proto__),
      [_isNullOrEmpty]: dart.fnType(core.bool, [dart.dynamic]),
      [_fillEmptyStatus]: dart.fnType(dart.void, []),
      change: dart.fnType(dart.void, [dart.nullable(core.Object)], {status: dart.nullable(rx_notifier.RxStatus)}, {}),
      append: dart.fnType(dart.void, [dart.nullable(core.Object)], {errorMessage: dart.nullable(core.String)}, {})
    }));
    dart.setGetterSignature(StateMixin, () => ({
      __proto__: dart.getGetters(StateMixin.__proto__),
      status: rx_notifier.RxStatus,
      state: dart.nullable(T),
      value: dart.nullable(T)
    }));
    dart.setSetterSignature(StateMixin, () => ({
      __proto__: dart.getSetters(StateMixin.__proto__),
      value: dart.nullable(core.Object)
    }));
    dart.setLibraryUri(StateMixin, I[37]);
    dart.setFieldSignature(StateMixin, () => ({
      __proto__: dart.getFields(StateMixin.__proto__),
      [_value$]: dart.fieldType(dart.nullable(T)),
      [_status$]: dart.fieldType(dart.nullable(rx_notifier.RxStatus))
    }));
    return StateMixin;
  });
  rx_notifier.StateMixin = rx_notifier.StateMixin$();
  dart.addTypeTests(rx_notifier.StateMixin, _is_StateMixin_default);
  const _is_SuperController_default = Symbol('_is_SuperController_default');
  get_controllers.SuperController$ = dart.generic(T => {
    const FullLifeCycleController_FullLifeCycle$36 = class FullLifeCycleController_FullLifeCycle extends get_controllers.FullLifeCycleController {};
    (FullLifeCycleController_FullLifeCycle$36.new = function() {
      FullLifeCycleController_FullLifeCycle$36.__proto__.new.call(this);
    }).prototype = FullLifeCycleController_FullLifeCycle$36.prototype;
    dart.applyMixin(FullLifeCycleController_FullLifeCycle$36, get_controllers.FullLifeCycle);
    const FullLifeCycleController_StateMixin$36 = class FullLifeCycleController_StateMixin extends FullLifeCycleController_FullLifeCycle$36 {};
    (FullLifeCycleController_StateMixin$36.new = function() {
      rx_notifier.StateMixin$(T)[dart.mixinNew].call(this);
      FullLifeCycleController_StateMixin$36.__proto__.new.call(this);
    }).prototype = FullLifeCycleController_StateMixin$36.prototype;
    dart.applyMixin(FullLifeCycleController_StateMixin$36, rx_notifier.StateMixin$(T));
    class SuperController extends FullLifeCycleController_StateMixin$36 {}
    (SuperController.new = function() {
      SuperController.__proto__.new.call(this);
      ;
    }).prototype = SuperController.prototype;
    dart.addTypeTests(SuperController);
    SuperController.prototype[_is_SuperController_default] = true;
    dart.addTypeCaches(SuperController);
    dart.setLibraryUri(SuperController, I[35]);
    return SuperController;
  });
  get_controllers.SuperController = get_controllers.SuperController$();
  dart.addTypeTests(get_controllers.SuperController, _is_SuperController_default);
  rx_ticket_provider_mixin.SingleGetTickerProviderMixin = class SingleGetTickerProviderMixin extends rx_disposable.DisposableInterface {};
  rx_ticket_provider_mixin.SingleGetTickerProviderMixin[dart.mixinOn] = DisposableInterface => class SingleGetTickerProviderMixin extends DisposableInterface {
    createTicker(onTick) {
      if (onTick == null) dart.nullFailed(I[38], 25, 38, "onTick");
      return new ticker.Ticker.new(onTick);
    }
  };
  dart.addTypeTests(rx_ticket_provider_mixin.SingleGetTickerProviderMixin);
  dart.addTypeCaches(rx_ticket_provider_mixin.SingleGetTickerProviderMixin);
  rx_ticket_provider_mixin.SingleGetTickerProviderMixin[dart.implements] = () => [ticker.TickerProvider, rx_disposable.DisposableInterface];
  dart.setMethodSignature(rx_ticket_provider_mixin.SingleGetTickerProviderMixin, () => ({
    __proto__: dart.getMethods(rx_ticket_provider_mixin.SingleGetTickerProviderMixin.__proto__),
    createTicker: dart.fnType(ticker.Ticker, [dart.fnType(dart.void, [core.Duration])])
  }));
  dart.setLibraryUri(rx_ticket_provider_mixin.SingleGetTickerProviderMixin, I[39]);
  const _is_Value_default = Symbol('_is_Value_default');
  rx_notifier.Value$ = dart.generic(T => {
    var TN = () => (TN = dart.constFn(dart.nullable(T)))();
    const ListNotifier_StateMixin$36 = class ListNotifier_StateMixin extends list_notifier.ListNotifier {};
    (ListNotifier_StateMixin$36.new = function() {
      rx_notifier.StateMixin$(T)[dart.mixinNew].call(this);
      ListNotifier_StateMixin$36.__proto__.new.call(this);
    }).prototype = ListNotifier_StateMixin$36.prototype;
    dart.applyMixin(ListNotifier_StateMixin$36, rx_notifier.StateMixin$(T));
    class Value extends ListNotifier_StateMixin$36 {
      get value() {
        this.notifyChildrens();
        return this[_value$];
      }
      set value(newValue) {
        TN().as(newValue);
        if (dart.equals(this[_value$], newValue)) return;
        this[_value$] = newValue;
        this.refresh();
      }
      call(v = null) {
        TN().as(v);
        if (v != null) {
          this.value = v;
        }
        return this.value;
      }
      update(fn) {
        if (fn == null) dart.nullFailed(I[36], 104, 20, "fn");
        fn(this.value);
        this.refresh();
      }
      toString() {
        return dart.toString(this.value);
      }
      toJson() {
        let t27;
        t27 = this.value;
        return t27 == null ? null : dart.dsend(t27, 'toJson', []);
      }
    }
    (Value.new = function(val) {
      Value.__proto__.new.call(this);
      this[_value$] = val;
      this[_fillEmptyStatus]();
    }).prototype = Value.prototype;
    dart.addTypeTests(Value);
    Value.prototype[_is_Value_default] = true;
    dart.addTypeCaches(Value);
    Value[dart.implements] = () => [change_notifier.ValueListenable$(dart.nullable(T))];
    dart.setMethodSignature(Value, () => ({
      __proto__: dart.getMethods(Value.__proto__),
      call: dart.fnType(dart.nullable(T), [], [dart.nullable(core.Object)]),
      update: dart.fnType(dart.void, [dart.fnType(dart.void, [dart.nullable(T)])]),
      toJson: dart.fnType(dart.dynamic, [])
    }));
    dart.setLibraryUri(Value, I[37]);
    dart.defineExtensionMethods(Value, ['toString']);
    return Value;
  });
  rx_notifier.Value = rx_notifier.Value$();
  dart.addTypeTests(rx_notifier.Value, _is_Value_default);
  const _is_GetNotifier_default = Symbol('_is_GetNotifier_default');
  rx_notifier.GetNotifier$ = dart.generic(T => {
    const Value_GetLifeCycleBase$36 = class Value_GetLifeCycleBase extends rx_notifier.Value$(T) {};
    (Value_GetLifeCycleBase$36.new = function(val) {
      lifecycle.GetLifeCycleBase[dart.mixinNew].call(this);
      Value_GetLifeCycleBase$36.__proto__.new.call(this, val);
    }).prototype = Value_GetLifeCycleBase$36.prototype;
    dart.applyMixin(Value_GetLifeCycleBase$36, lifecycle.GetLifeCycleBase);
    class GetNotifier extends Value_GetLifeCycleBase$36 {
      onInit() {
        let t27;
        super.onInit();
        t27 = binding$.SchedulerBinding.instance;
        t27 == null ? null : t27.addPostFrameCallback(dart.fn(_ => {
          if (_ == null) dart.nullFailed(I[36], 130, 54, "_");
          return this.onReady();
        }, T$.DurationTovoid()));
      }
    }
    (GetNotifier.new = function(initial) {
      GetNotifier.__proto__.new.call(this, initial);
      this.$configureLifeCycle();
    }).prototype = GetNotifier.prototype;
    dart.addTypeTests(GetNotifier);
    GetNotifier.prototype[_is_GetNotifier_default] = true;
    dart.addTypeCaches(GetNotifier);
    dart.setLibraryUri(GetNotifier, I[37]);
    return GetNotifier;
  });
  rx_notifier.GetNotifier = rx_notifier.GetNotifier$();
  dart.addTypeTests(rx_notifier.GetNotifier, _is_GetNotifier_default);
  var isLoading$ = dart.privateName(rx_notifier, "RxStatus.isLoading");
  var isError$ = dart.privateName(rx_notifier, "RxStatus.isError");
  var isSuccess$ = dart.privateName(rx_notifier, "RxStatus.isSuccess");
  var isEmpty$ = dart.privateName(rx_notifier, "RxStatus.isEmpty");
  var isLoadingMore$ = dart.privateName(rx_notifier, "RxStatus.isLoadingMore");
  var errorMessage$ = dart.privateName(rx_notifier, "RxStatus.errorMessage");
  rx_notifier.RxStatus = class RxStatus extends core.Object {
    get isLoading() {
      return this[isLoading$];
    }
    set isLoading(value) {
      super.isLoading = value;
    }
    get isError() {
      return this[isError$];
    }
    set isError(value) {
      super.isError = value;
    }
    get isSuccess() {
      return this[isSuccess$];
    }
    set isSuccess(value) {
      super.isSuccess = value;
    }
    get isEmpty() {
      return this[isEmpty$];
    }
    set isEmpty(value) {
      super.isEmpty = value;
    }
    get isLoadingMore() {
      return this[isLoadingMore$];
    }
    set isLoadingMore(value) {
      super.isLoadingMore = value;
    }
    get errorMessage() {
      return this[errorMessage$];
    }
    set errorMessage(value) {
      super.errorMessage = value;
    }
    static loading() {
      return new rx_notifier.RxStatus.__({isLoading: true});
    }
    static loadingMore() {
      return new rx_notifier.RxStatus.__({isSuccess: true, isLoadingMore: true});
    }
    static success() {
      return new rx_notifier.RxStatus.__({isSuccess: true});
    }
    static error(message = null) {
      return new rx_notifier.RxStatus.__({isError: true, errorMessage: message});
    }
    static empty() {
      return new rx_notifier.RxStatus.__({isEmpty: true});
    }
  };
  (rx_notifier.RxStatus.__ = function(opts) {
    let isEmpty = opts && 'isEmpty' in opts ? opts.isEmpty : false;
    if (isEmpty == null) dart.nullFailed(I[36], 167, 10, "isEmpty");
    let isLoading = opts && 'isLoading' in opts ? opts.isLoading : false;
    if (isLoading == null) dart.nullFailed(I[36], 168, 10, "isLoading");
    let isError = opts && 'isError' in opts ? opts.isError : false;
    if (isError == null) dart.nullFailed(I[36], 169, 10, "isError");
    let isSuccess = opts && 'isSuccess' in opts ? opts.isSuccess : false;
    if (isSuccess == null) dart.nullFailed(I[36], 170, 10, "isSuccess");
    let errorMessage = opts && 'errorMessage' in opts ? opts.errorMessage : null;
    let isLoadingMore = opts && 'isLoadingMore' in opts ? opts.isLoadingMore : false;
    if (isLoadingMore == null) dart.nullFailed(I[36], 172, 10, "isLoadingMore");
    this[isEmpty$] = isEmpty;
    this[isLoading$] = isLoading;
    this[isError$] = isError;
    this[isSuccess$] = isSuccess;
    this[errorMessage$] = errorMessage;
    this[isLoadingMore$] = isLoadingMore;
    ;
  }).prototype = rx_notifier.RxStatus.prototype;
  dart.addTypeTests(rx_notifier.RxStatus);
  dart.addTypeCaches(rx_notifier.RxStatus);
  dart.setLibraryUri(rx_notifier.RxStatus, I[37]);
  dart.setFieldSignature(rx_notifier.RxStatus, () => ({
    __proto__: dart.getFields(rx_notifier.RxStatus.__proto__),
    isLoading: dart.finalFieldType(core.bool),
    isError: dart.finalFieldType(core.bool),
    isSuccess: dart.finalFieldType(core.bool),
    isEmpty: dart.finalFieldType(core.bool),
    isLoadingMore: dart.finalFieldType(core.bool),
    errorMessage: dart.finalFieldType(dart.nullable(core.String))
  }));
  var Widget__location = dart.privateName(framework, "Widget._location");
  var Widget_key = dart.privateName(framework, "Widget.key");
  var ProgressIndicator_semanticsValue = dart.privateName(progress_indicator, "ProgressIndicator.semanticsValue");
  var ProgressIndicator_semanticsLabel = dart.privateName(progress_indicator, "ProgressIndicator.semanticsLabel");
  var ProgressIndicator_valueColor = dart.privateName(progress_indicator, "ProgressIndicator.valueColor");
  var ProgressIndicator_color = dart.privateName(progress_indicator, "ProgressIndicator.color");
  var ProgressIndicator_backgroundColor = dart.privateName(progress_indicator, "ProgressIndicator.backgroundColor");
  var ProgressIndicator_value = dart.privateName(progress_indicator, "ProgressIndicator.value");
  var CircularProgressIndicator_strokeWidth = dart.privateName(progress_indicator, "CircularProgressIndicator.strokeWidth");
  var _name$6 = dart.privateName(progress_indicator, "_name");
  var CircularProgressIndicator__indicatorType = dart.privateName(progress_indicator, "CircularProgressIndicator._indicatorType");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var Align_heightFactor = dart.privateName(basic, "Align.heightFactor");
  var Align_widthFactor = dart.privateName(basic, "Align.widthFactor");
  var Alignment_y = dart.privateName(alignment, "Alignment.y");
  var Alignment_x = dart.privateName(alignment, "Alignment.x");
  var Align_alignment = dart.privateName(basic, "Align.alignment");
  rx_notifier['ReactiveT|get#reactive'] = function ReactiveT$124get$35reactive(T, $this) {
    return new (rx_notifier.Value$(T)).new($this);
  };
  rx_notifier['StateExt|obx'] = function StateExt$124obx(T, $this, widget, opts) {
    if ($this == null) dart.nullFailed(I[36], 135, 10, "#this");
    if (widget == null) dart.nullFailed(I[36], 136, 25, "widget");
    let onError = opts && 'onError' in opts ? opts.onError : null;
    let onLoading = opts && 'onLoading' in opts ? opts.onLoading : null;
    let onEmpty = opts && 'onEmpty' in opts ? opts.onEmpty : null;
    return new simple_builder.SimpleBuilder.new({builder: dart.fn(_ => {
        let t29;
        if (_ == null) dart.nullFailed(I[36], 141, 36, "_");
        if (dart.test($this.status.isLoading)) {
          t29 = onLoading;
          return t29 == null ? C[589] || CT.C589 : t29;
        } else if (dart.test($this.status.isError)) {
          return onError != null ? onError($this.status.errorMessage) : new basic.Center.new({child: new text.Text.new("A error occurred: " + dart.str($this.status.errorMessage), {$creationLocationd_0dea112b090073317d4: C[597] || CT.C597}), $creationLocationd_0dea112b090073317d4: C[600] || CT.C600});
        } else if (dart.test($this.status.isEmpty)) {
          return onEmpty != null ? onEmpty : new basic.SizedBox.shrink({$creationLocationd_0dea112b090073317d4: C[603] || CT.C603});
        }
        return widget($this.value);
      }, T$.BuildContextToWidget()), $creationLocationd_0dea112b090073317d4: C[604] || CT.C604});
  };
  rx_notifier['StateExt|get#obx'] = function StateExt$124get$35obx(T, $this) {
    if ($this == null) dart.nullFailed(I[36], 135, 10, "#this");
    return dart.fn((widget, opts) => {
      if (widget == null) dart.nullFailed(I[36], 136, 25, "widget");
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let onLoading = opts && 'onLoading' in opts ? opts.onLoading : null;
      let onEmpty = opts && 'onEmpty' in opts ? opts.onEmpty : null;
      return rx_notifier['StateExt|obx'](T, $this, widget, {onError: onError, onLoading: onLoading, onEmpty: onEmpty});
    }, dart.fnType(framework.Widget, [dart.fnType(framework.Widget, [dart.nullable(T)])], {onEmpty: T$.WidgetN(), onError: T$.StringNToNWidget(), onLoading: T$.WidgetN()}, {}));
  };
  var builder$6 = dart.privateName(rx_getx_widget, "GetX.builder");
  var global$1 = dart.privateName(rx_getx_widget, "GetX.global");
  var autoRemove$1 = dart.privateName(rx_getx_widget, "GetX.autoRemove");
  var assignId$0 = dart.privateName(rx_getx_widget, "GetX.assignId");
  var initState$1 = dart.privateName(rx_getx_widget, "GetX.initState");
  var dispose$1 = dart.privateName(rx_getx_widget, "GetX.dispose");
  var didChangeDependencies$1 = dart.privateName(rx_getx_widget, "GetX.didChangeDependencies");
  var didUpdateWidget$1 = dart.privateName(rx_getx_widget, "GetX.didUpdateWidget");
  var init$1 = dart.privateName(rx_getx_widget, "GetX.init");
  var tag$1 = dart.privateName(rx_getx_widget, "GetX.tag");
  const _is_GetX_default = Symbol('_is_GetX_default');
  rx_getx_widget.GetX$ = dart.generic(T => {
    var DiagnosticsPropertyOfT = () => (DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var TToWidget = () => (TToWidget = dart.constFn(dart.fnType(framework.Widget, [T])))();
    var ObjectFlagPropertyOfTToWidget = () => (ObjectFlagPropertyOfTToWidget = dart.constFn(diagnostics.ObjectFlagProperty$(TToWidget())))();
    var GetXStateOfT = () => (GetXStateOfT = dart.constFn(rx_getx_widget.GetXState$(T)))();
    class GetX extends framework.StatefulWidget {
      get builder() {
        return this[builder$6];
      }
      set builder(value) {
        super.builder = value;
      }
      get global() {
        return this[global$1];
      }
      set global(value) {
        super.global = value;
      }
      get autoRemove() {
        return this[autoRemove$1];
      }
      set autoRemove(value) {
        super.autoRemove = value;
      }
      get assignId() {
        return this[assignId$0];
      }
      set assignId(value) {
        super.assignId = value;
      }
      get initState() {
        return this[initState$1];
      }
      set initState(value) {
        super.initState = value;
      }
      get dispose() {
        return this[dispose$1];
      }
      set dispose(value) {
        super.dispose = value;
      }
      get didChangeDependencies() {
        return this[didChangeDependencies$1];
      }
      set didChangeDependencies(value) {
        super.didChangeDependencies = value;
      }
      get didUpdateWidget() {
        return this[didUpdateWidget$1];
      }
      set didUpdateWidget(value) {
        super.didUpdateWidget = value;
      }
      get init() {
        return this[init$1];
      }
      set init(value) {
        super.init = value;
      }
      get tag() {
        return this[tag$1];
      }
      set tag(value) {
        super.tag = value;
      }
      debugFillProperties(properties) {
        let t30;
        if (properties == null) dart.nullFailed(I[40], 45, 56, "properties");
        super.debugFillProperties(properties);
        t30 = properties;
        (() => {
          t30.add(new (DiagnosticsPropertyOfT()).new("controller", this.init));
          t30.add(new (T$.DiagnosticsPropertyOfString()).new("tag", this.tag));
          t30.add(new (ObjectFlagPropertyOfTToWidget()).has("builder", this.builder));
          return t30;
        })();
      }
      createState() {
        return new (GetXStateOfT()).new();
      }
    }
    (GetX.new = function(opts) {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      if (builder == null) dart.nullFailed(I[40], 31, 19, "builder");
      let global = opts && 'global' in opts ? opts.global : true;
      if (global == null) dart.nullFailed(I[40], 32, 10, "global");
      let autoRemove = opts && 'autoRemove' in opts ? opts.autoRemove : true;
      if (autoRemove == null) dart.nullFailed(I[40], 33, 10, "autoRemove");
      let initState = opts && 'initState' in opts ? opts.initState : null;
      let assignId = opts && 'assignId' in opts ? opts.assignId : false;
      if (assignId == null) dart.nullFailed(I[40], 35, 10, "assignId");
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let didChangeDependencies = opts && 'didChangeDependencies' in opts ? opts.didChangeDependencies : null;
      let didUpdateWidget = opts && 'didUpdateWidget' in opts ? opts.didUpdateWidget : null;
      let init = opts && 'init' in opts ? opts.init : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[tag$1] = tag;
      this[builder$6] = builder;
      this[global$1] = global;
      this[autoRemove$1] = autoRemove;
      this[initState$1] = initState;
      this[assignId$0] = assignId;
      this[dispose$1] = dispose;
      this[didChangeDependencies$1] = didChangeDependencies;
      this[didUpdateWidget$1] = didUpdateWidget;
      this[init$1] = init;
      GetX.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = GetX.prototype;
    dart.addTypeTests(GetX);
    GetX.prototype[_is_GetX_default] = true;
    dart.addTypeCaches(GetX);
    dart.setMethodSignature(GetX, () => ({
      __proto__: dart.getMethods(GetX.__proto__),
      createState: dart.fnType(rx_getx_widget.GetXState$(T), [])
    }));
    dart.setLibraryUri(GetX, I[41]);
    dart.setFieldSignature(GetX, () => ({
      __proto__: dart.getFields(GetX.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [T])),
      global: dart.finalFieldType(core.bool),
      autoRemove: dart.finalFieldType(core.bool),
      assignId: dart.finalFieldType(core.bool),
      initState: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [rx_getx_widget.GetXState$(T)]))),
      dispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [rx_getx_widget.GetXState$(T)]))),
      didChangeDependencies: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [rx_getx_widget.GetXState$(T)]))),
      didUpdateWidget: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [rx_getx_widget.GetX$(rx_disposable.DisposableInterface), rx_getx_widget.GetXState$(T)]))),
      init: dart.finalFieldType(dart.nullable(T)),
      tag: dart.finalFieldType(dart.nullable(core.String))
    }));
    return GetX;
  });
  rx_getx_widget.GetX = rx_getx_widget.GetX$();
  dart.addTypeTests(rx_getx_widget.GetX, _is_GetX_default);
  var controller$0 = dart.privateName(rx_getx_widget, "GetXState.controller");
  var _observer = dart.privateName(rx_getx_widget, "_observer");
  var _isCreator$0 = dart.privateName(rx_getx_widget, "_isCreator");
  var __GetXState__subs = dart.privateName(rx_getx_widget, "_#GetXState#_subs");
  var __GetXState__subs_isSet = dart.privateName(rx_getx_widget, "_#GetXState#_subs#isSet");
  var _subs = dart.privateName(rx_getx_widget, "_subs");
  const _is_GetXState_default = Symbol('_is_GetXState_default');
  rx_getx_widget.GetXState$ = dart.generic(T => {
    var TN = () => (TN = dart.constFn(dart.nullable(T)))();
    var GetXStateOfT = () => (GetXStateOfT = dart.constFn(rx_getx_widget.GetXState$(T)))();
    var GetXStateOfTTovoid = () => (GetXStateOfTTovoid = dart.constFn(dart.fnType(dart.void, [GetXStateOfT()])))();
    var GetXStateOfTToNvoid = () => (GetXStateOfTToNvoid = dart.constFn(dart.nullable(GetXStateOfTTovoid())))();
    var GetXOfT = () => (GetXOfT = dart.constFn(rx_getx_widget.GetX$(T)))();
    var GetXOfDisposableInterfaceAndGetXStateOfTTovoid = () => (GetXOfDisposableInterfaceAndGetXStateOfTTovoid = dart.constFn(dart.fnType(dart.void, [T$.GetXOfDisposableInterface(), GetXStateOfT()])))();
    var GetXOfDisposableInterfaceAndGetXStateOfTToNvoid = () => (GetXOfDisposableInterfaceAndGetXStateOfTToNvoid = dart.constFn(dart.nullable(GetXOfDisposableInterfaceAndGetXStateOfTTovoid())))();
    var DiagnosticsPropertyOfT = () => (DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var TToWidget = () => (TToWidget = dart.constFn(dart.fnType(framework.Widget, [T])))();
    class GetXState extends framework.State$(rx_getx_widget.GetX$(T)) {
      get controller() {
        return this[controller$0];
      }
      set controller(value) {
        this[controller$0] = TN().as(value);
      }
      get [_subs]() {
        let t30;
        return dart.test(this[__GetXState__subs_isSet]) ? (t30 = this[__GetXState__subs], t30) : dart.throw(new _internal.LateError.fieldNI("_subs"));
      }
      set [_subs](t30) {
        if (t30 == null) dart.nullFailed(I[40], 64, 27, "null");
        this[__GetXState__subs_isSet] = true;
        this[__GetXState__subs] = t30;
      }
      initState() {
        let t31, t31$, t31$0;
        let isRegistered = get_instance.GetInstance.new().isRegistered(T, {tag: this.widget.tag});
        if (dart.test(this.widget.global)) {
          if (dart.test(isRegistered)) {
            this[_isCreator$0] = get_instance.GetInstance.new().isPrepared(T, {tag: this.widget.tag});
            this.controller = get_instance.GetInstance.new().find(T, {tag: this.widget.tag});
          } else {
            this.controller = this.widget.init;
            this[_isCreator$0] = true;
            get_instance.GetInstance.new().put(T, dart.nullCheck(this.controller), {tag: this.widget.tag});
          }
        } else {
          this.controller = this.widget.init;
          this[_isCreator$0] = true;
          t31 = this.controller;
          t31 == null ? null : t31.onStart.call();
        }
        t31$ = GetXStateOfTToNvoid().as(this.widget.initState);
        t31$ == null ? null : t31$(this);
        if (dart.test(this.widget.global) && get_main.Get.smartManagement == smart_management.SmartManagement.onlyBuilder) {
          t31$0 = this.controller;
          t31$0 == null ? null : t31$0.onStart.call();
        }
        this[_subs] = this[_observer].listen(dart.fn(data => this.setState(dart.fn(() => {
        }, T$.VoidTovoid())), T$.dynamicTovoid()), {cancelOnError: false});
        super.initState();
      }
      didChangeDependencies() {
        super.didChangeDependencies();
        if (GetXStateOfTToNvoid().as(this.widget.didChangeDependencies) != null) {
          dart.nullCheck(GetXStateOfTToNvoid().as(this.widget.didChangeDependencies))(this);
        }
      }
      didUpdateWidget(oldWidget) {
        let t31;
        T$.GetXOfDisposableInterface().as(oldWidget);
        if (oldWidget == null) dart.nullFailed(I[40], 102, 29, "oldWidget");
        super.didUpdateWidget(GetXOfT().as(oldWidget));
        t31 = GetXOfDisposableInterfaceAndGetXStateOfTToNvoid().as(this.widget.didUpdateWidget);
        t31 == null ? null : t31(oldWidget, this);
      }
      dispose() {
        if (GetXStateOfTToNvoid().as(this.widget.dispose) != null) dart.nullCheck(GetXStateOfTToNvoid().as(this.widget.dispose))(this);
        if (dart.nullCheck(this[_isCreator$0]) || dart.test(this.widget.assignId)) {
          if (dart.test(this.widget.autoRemove) && dart.test(get_instance.GetInstance.new().isRegistered(T, {tag: this.widget.tag}))) {
            get_instance.GetInstance.new().delete(T, {tag: this.widget.tag});
          }
        }
        this[_subs].cancel();
        this[_observer].close();
        this.controller = null;
        this[_isCreator$0] = null;
        super.dispose();
      }
      debugFillProperties(properties) {
        if (properties == null) dart.nullFailed(I[40], 123, 56, "properties");
        super.debugFillProperties(properties);
        properties.add(new (DiagnosticsPropertyOfT()).new("controller", this.controller));
      }
      build(context) {
        if (context == null) dart.nullFailed(I[40], 129, 29, "context");
        return rx_types.RxInterface.notifyChildren(framework.Widget, this[_observer], dart.fn(() => {
          let t32, t31;
          t31 = this.widget;
          t32 = dart.nullCheck(this.controller);
          return TToWidget().as(t31.builder)(t32);
        }, T$.VoidToWidget()));
      }
    }
    (GetXState.new = function() {
      this[_observer] = new rx_types.RxNotifier.new();
      this[controller$0] = null;
      this[_isCreator$0] = false;
      this[__GetXState__subs] = null;
      this[__GetXState__subs_isSet] = false;
      GetXState.__proto__.new.call(this);
      ;
    }).prototype = GetXState.prototype;
    dart.addTypeTests(GetXState);
    GetXState.prototype[_is_GetXState_default] = true;
    dart.addTypeCaches(GetXState);
    dart.setMethodSignature(GetXState, () => ({
      __proto__: dart.getMethods(GetXState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setGetterSignature(GetXState, () => ({
      __proto__: dart.getGetters(GetXState.__proto__),
      [_subs]: async.StreamSubscription
    }));
    dart.setSetterSignature(GetXState, () => ({
      __proto__: dart.getSetters(GetXState.__proto__),
      [_subs]: async.StreamSubscription
    }));
    dart.setLibraryUri(GetXState, I[41]);
    dart.setFieldSignature(GetXState, () => ({
      __proto__: dart.getFields(GetXState.__proto__),
      [_observer]: dart.finalFieldType(rx_types.RxNotifier),
      controller: dart.fieldType(dart.nullable(T)),
      [_isCreator$0]: dart.fieldType(dart.nullable(core.bool)),
      [__GetXState__subs]: dart.fieldType(dart.nullable(async.StreamSubscription)),
      [__GetXState__subs_isSet]: dart.fieldType(core.bool)
    }));
    return GetXState;
  });
  rx_getx_widget.GetXState = rx_getx_widget.GetXState$();
  dart.addTypeTests(rx_getx_widget.GetXState, _is_GetXState_default);
  var testMode = dart.privateName(root_controller, "GetMaterialController.testMode");
  var unikey = dart.privateName(root_controller, "GetMaterialController.unikey");
  var theme$2 = dart.privateName(root_controller, "GetMaterialController.theme");
  var darkTheme = dart.privateName(root_controller, "GetMaterialController.darkTheme");
  var themeMode = dart.privateName(root_controller, "GetMaterialController.themeMode");
  var defaultPopGesture = dart.privateName(root_controller, "GetMaterialController.defaultPopGesture");
  var defaultOpaqueRoute = dart.privateName(root_controller, "GetMaterialController.defaultOpaqueRoute");
  var defaultTransition = dart.privateName(root_controller, "GetMaterialController.defaultTransition");
  var defaultTransitionDuration = dart.privateName(root_controller, "GetMaterialController.defaultTransitionDuration");
  var defaultTransitionCurve = dart.privateName(root_controller, "GetMaterialController.defaultTransitionCurve");
  var defaultDialogTransitionCurve = dart.privateName(root_controller, "GetMaterialController.defaultDialogTransitionCurve");
  var defaultDialogTransitionDuration = dart.privateName(root_controller, "GetMaterialController.defaultDialogTransitionDuration");
  var routing = dart.privateName(root_controller, "GetMaterialController.routing");
  var parameters = dart.privateName(root_controller, "GetMaterialController.parameters");
  var customTransition = dart.privateName(root_controller, "GetMaterialController.customTransition");
  var keys = dart.privateName(root_controller, "GetMaterialController.keys");
  var _key = dart.privateName(root_controller, "_key");
  root_controller.GetMaterialController = class GetMaterialController extends get_controllers.GetxController {
    get testMode() {
      return this[testMode];
    }
    set testMode(value) {
      this[testMode] = value;
    }
    get unikey() {
      return this[unikey];
    }
    set unikey(value) {
      this[unikey] = value;
    }
    get theme() {
      return this[theme$2];
    }
    set theme(value) {
      this[theme$2] = value;
    }
    get darkTheme() {
      return this[darkTheme];
    }
    set darkTheme(value) {
      this[darkTheme] = value;
    }
    get themeMode() {
      return this[themeMode];
    }
    set themeMode(value) {
      this[themeMode] = value;
    }
    get defaultPopGesture() {
      return this[defaultPopGesture];
    }
    set defaultPopGesture(value) {
      this[defaultPopGesture] = value;
    }
    get defaultOpaqueRoute() {
      return this[defaultOpaqueRoute];
    }
    set defaultOpaqueRoute(value) {
      this[defaultOpaqueRoute] = value;
    }
    get defaultTransition() {
      return this[defaultTransition];
    }
    set defaultTransition(value) {
      this[defaultTransition] = value;
    }
    get defaultTransitionDuration() {
      return this[defaultTransitionDuration];
    }
    set defaultTransitionDuration(value) {
      this[defaultTransitionDuration] = value;
    }
    get defaultTransitionCurve() {
      return this[defaultTransitionCurve];
    }
    set defaultTransitionCurve(value) {
      this[defaultTransitionCurve] = value;
    }
    get defaultDialogTransitionCurve() {
      return this[defaultDialogTransitionCurve];
    }
    set defaultDialogTransitionCurve(value) {
      this[defaultDialogTransitionCurve] = value;
    }
    get defaultDialogTransitionDuration() {
      return this[defaultDialogTransitionDuration];
    }
    set defaultDialogTransitionDuration(value) {
      this[defaultDialogTransitionDuration] = value;
    }
    get routing() {
      return this[routing];
    }
    set routing(value) {
      super.routing = value;
    }
    get parameters() {
      return this[parameters];
    }
    set parameters(value) {
      this[parameters] = value;
    }
    get customTransition() {
      return this[customTransition];
    }
    set customTransition(value) {
      this[customTransition] = value;
    }
    get keys() {
      return this[keys];
    }
    set keys(value) {
      this[keys] = value;
    }
    get key() {
      return this[_key];
    }
    addKey(newKey) {
      if (newKey == null) dart.nullFailed(I[42], 36, 63, "newKey");
      this[_key] = newKey;
      return this.key;
    }
    setTheme(value) {
      if (value == null) dart.nullFailed(I[42], 43, 27, "value");
      if (this.darkTheme == null) {
        this.theme = value;
      } else {
        if (value.brightness == ui.Brightness.light) {
          this.theme = value;
        } else {
          this.darkTheme = value;
        }
      }
      this.update();
    }
    setThemeMode(value) {
      if (value == null) dart.nullFailed(I[42], 56, 31, "value");
      this.themeMode = value;
      this.update();
    }
    restartApp() {
      this.unikey = new framework.UniqueKey.new();
      this.update();
    }
  };
  (root_controller.GetMaterialController.new = function() {
    this[testMode] = false;
    this[unikey] = null;
    this[theme$2] = null;
    this[darkTheme] = null;
    this[themeMode] = null;
    this[defaultPopGesture] = platform.GetPlatform.isIOS;
    this[defaultOpaqueRoute] = true;
    this[defaultTransition] = null;
    this[defaultTransitionDuration] = new core.Duration.new({milliseconds: 300});
    this[defaultTransitionCurve] = curves.Curves.easeOutQuad;
    this[defaultDialogTransitionCurve] = curves.Curves.easeOutQuad;
    this[defaultDialogTransitionDuration] = new core.Duration.new({milliseconds: 300});
    this[routing] = new route_observer.Routing.new();
    this[parameters] = new (T$.IdentityMapOfString$StringN()).new();
    this[customTransition] = null;
    this[_key] = T$.GlobalKeyOfNavigatorState().new({debugLabel: "Key Created by default"});
    this[keys] = new (T$.LinkedMapOfdynamic$GlobalKeyOfNavigatorState()).new();
    root_controller.GetMaterialController.__proto__.new.call(this);
    ;
  }).prototype = root_controller.GetMaterialController.prototype;
  dart.addTypeTests(root_controller.GetMaterialController);
  dart.addTypeCaches(root_controller.GetMaterialController);
  dart.setMethodSignature(root_controller.GetMaterialController, () => ({
    __proto__: dart.getMethods(root_controller.GetMaterialController.__proto__),
    addKey: dart.fnType(dart.nullable(framework.GlobalKey$(navigator.NavigatorState)), [framework.GlobalKey$(navigator.NavigatorState)]),
    setTheme: dart.fnType(dart.void, [theme_data.ThemeData]),
    setThemeMode: dart.fnType(dart.void, [app.ThemeMode]),
    restartApp: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(root_controller.GetMaterialController, () => ({
    __proto__: dart.getGetters(root_controller.GetMaterialController.__proto__),
    key: framework.GlobalKey$(navigator.NavigatorState)
  }));
  dart.setLibraryUri(root_controller.GetMaterialController, I[43]);
  dart.setFieldSignature(root_controller.GetMaterialController, () => ({
    __proto__: dart.getFields(root_controller.GetMaterialController.__proto__),
    testMode: dart.fieldType(core.bool),
    unikey: dart.fieldType(dart.nullable(key.Key)),
    theme: dart.fieldType(dart.nullable(theme_data.ThemeData)),
    darkTheme: dart.fieldType(dart.nullable(theme_data.ThemeData)),
    themeMode: dart.fieldType(dart.nullable(app.ThemeMode)),
    defaultPopGesture: dart.fieldType(core.bool),
    defaultOpaqueRoute: dart.fieldType(core.bool),
    defaultTransition: dart.fieldType(dart.nullable(transitions_type.Transition)),
    defaultTransitionDuration: dart.fieldType(core.Duration),
    defaultTransitionCurve: dart.fieldType(curves.Curve),
    defaultDialogTransitionCurve: dart.fieldType(curves.Curve),
    defaultDialogTransitionDuration: dart.fieldType(core.Duration),
    routing: dart.finalFieldType(route_observer.Routing),
    parameters: dart.fieldType(core.Map$(core.String, dart.nullable(core.String))),
    customTransition: dart.fieldType(dart.nullable(custom_transition.CustomTransition)),
    [_key]: dart.fieldType(framework.GlobalKey$(navigator.NavigatorState)),
    keys: dart.fieldType(core.Map$(dart.dynamic, framework.GlobalKey$(navigator.NavigatorState)))
  }));
  var regex$ = dart.privateName(get_route, "PathDecoded.regex");
  var keys$ = dart.privateName(get_route, "PathDecoded.keys");
  get_route.PathDecoded = class PathDecoded extends core.Object {
    get regex() {
      return this[regex$];
    }
    set regex(value) {
      super.regex = value;
    }
    get keys() {
      return this[keys$];
    }
    set keys(value) {
      super.keys = value;
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      return get_route.PathDecoded.is(other) && dart.equals(other.regex, this.regex);
    }
    get hashCode() {
      return dart.hashCode(this.regex);
    }
  };
  (get_route.PathDecoded.new = function(regex, keys) {
    if (regex == null) dart.nullFailed(I[44], 14, 26, "regex");
    if (keys == null) dart.nullFailed(I[44], 14, 38, "keys");
    this[regex$] = regex;
    this[keys$] = keys;
    ;
  }).prototype = get_route.PathDecoded.prototype;
  dart.addTypeTests(get_route.PathDecoded);
  dart.addTypeCaches(get_route.PathDecoded);
  dart.setLibraryUri(get_route.PathDecoded, I[45]);
  dart.setFieldSignature(get_route.PathDecoded, () => ({
    __proto__: dart.getFields(get_route.PathDecoded.__proto__),
    regex: dart.finalFieldType(core.RegExp),
    keys: dart.finalFieldType(core.List$(dart.nullable(core.String)))
  }));
  dart.defineExtensionMethods(get_route.PathDecoded, ['_equals']);
  dart.defineExtensionAccessors(get_route.PathDecoded, ['hashCode']);
  var page$0 = dart.privateName(get_route, "GetPage.page");
  var popGesture$2 = dart.privateName(get_route, "GetPage.popGesture");
  var parameters$ = dart.privateName(get_route, "GetPage.parameters");
  var title$3 = dart.privateName(get_route, "GetPage.title");
  var transition$0 = dart.privateName(get_route, "GetPage.transition");
  var curve$0 = dart.privateName(get_route, "GetPage.curve");
  var participatesInRootNavigator$ = dart.privateName(get_route, "GetPage.participatesInRootNavigator");
  var alignment$0 = dart.privateName(get_route, "GetPage.alignment");
  var maintainState$0 = dart.privateName(get_route, "GetPage.maintainState");
  var opaque$0 = dart.privateName(get_route, "GetPage.opaque");
  var gestureWidth$1 = dart.privateName(get_route, "GetPage.gestureWidth");
  var binding$1 = dart.privateName(get_route, "GetPage.binding");
  var bindings$0 = dart.privateName(get_route, "GetPage.bindings");
  var customTransition$2 = dart.privateName(get_route, "GetPage.customTransition");
  var transitionDuration$2 = dart.privateName(get_route, "GetPage.transitionDuration");
  var fullscreenDialog$ = dart.privateName(get_route, "GetPage.fullscreenDialog");
  var preventDuplicates$ = dart.privateName(get_route, "GetPage.preventDuplicates");
  var $arguments$ = dart.privateName(get_route, "GetPage.arguments");
  var name$ = dart.privateName(get_route, "GetPage.name");
  var children$ = dart.privateName(get_route, "GetPage.children");
  var middlewares$0 = dart.privateName(get_route, "GetPage.middlewares");
  var path = dart.privateName(get_route, "GetPage.path");
  var unknownRoute$2 = dart.privateName(get_route, "GetPage.unknownRoute");
  var showCupertinoParallax$0 = dart.privateName(get_route, "GetPage.showCupertinoParallax");
  var __GetPage_popped = dart.privateName(get_route, "_#GetPage#popped");
  var __GetPage_popped_isSet = dart.privateName(get_route, "_#GetPage#popped#isSet");
  const _is_GetPage_default = Symbol('_is_GetPage_default');
  get_route.GetPage$ = dart.generic(T => {
    var GetPageOfT = () => (GetPageOfT = dart.constFn(get_route.GetPage$(T)))();
    var TN = () => (TN = dart.constFn(dart.nullable(T)))();
    var FutureOfTN = () => (FutureOfTN = dart.constFn(async.Future$(TN())))();
    class GetPage extends navigator.Page$(T) {
      get page() {
        return this[page$0];
      }
      set page(value) {
        super.page = value;
      }
      get popGesture() {
        return this[popGesture$2];
      }
      set popGesture(value) {
        super.popGesture = value;
      }
      get parameters() {
        return this[parameters$];
      }
      set parameters(value) {
        super.parameters = value;
      }
      get title() {
        return this[title$3];
      }
      set title(value) {
        super.title = value;
      }
      get transition() {
        return this[transition$0];
      }
      set transition(value) {
        super.transition = value;
      }
      get curve() {
        return this[curve$0];
      }
      set curve(value) {
        super.curve = value;
      }
      get participatesInRootNavigator() {
        return this[participatesInRootNavigator$];
      }
      set participatesInRootNavigator(value) {
        super.participatesInRootNavigator = value;
      }
      get alignment() {
        return this[alignment$0];
      }
      set alignment(value) {
        super.alignment = value;
      }
      get maintainState() {
        return this[maintainState$0];
      }
      set maintainState(value) {
        super.maintainState = value;
      }
      get opaque() {
        return this[opaque$0];
      }
      set opaque(value) {
        super.opaque = value;
      }
      get gestureWidth() {
        return this[gestureWidth$1];
      }
      set gestureWidth(value) {
        super.gestureWidth = value;
      }
      get binding() {
        return this[binding$1];
      }
      set binding(value) {
        super.binding = value;
      }
      get bindings() {
        return this[bindings$0];
      }
      set bindings(value) {
        super.bindings = value;
      }
      get customTransition() {
        return this[customTransition$2];
      }
      set customTransition(value) {
        super.customTransition = value;
      }
      get transitionDuration() {
        return this[transitionDuration$2];
      }
      set transitionDuration(value) {
        super.transitionDuration = value;
      }
      get fullscreenDialog() {
        return this[fullscreenDialog$];
      }
      set fullscreenDialog(value) {
        super.fullscreenDialog = value;
      }
      get preventDuplicates() {
        return this[preventDuplicates$];
      }
      set preventDuplicates(value) {
        super.preventDuplicates = value;
      }
      get arguments() {
        return this[$arguments$];
      }
      set arguments(value) {
        super.arguments = value;
      }
      get name() {
        return this[name$];
      }
      set name(value) {
        super.name = value;
      }
      get children() {
        return this[children$];
      }
      set children(value) {
        super.children = value;
      }
      get middlewares() {
        return this[middlewares$0];
      }
      set middlewares(value) {
        super.middlewares = value;
      }
      get path() {
        return this[path];
      }
      set path(value) {
        super.path = value;
      }
      get unknownRoute() {
        return this[unknownRoute$2];
      }
      set unknownRoute(value) {
        super.unknownRoute = value;
      }
      get showCupertinoParallax() {
        return this[showCupertinoParallax$0];
      }
      set showCupertinoParallax(value) {
        super.showCupertinoParallax = value;
      }
      static _nameToRegex(path) {
        if (path == null) dart.nullFailed(I[44], 101, 42, "path");
        let keys = T$.JSArrayOfStringN().of([]);
        function _replace(pattern) {
          if (pattern == null) dart.nullFailed(I[44], 104, 27, "pattern");
          let buffer = new core.StringBuffer.new("(?:");
          if (pattern._get(1) != null) buffer.write(".");
          buffer.write("([\\w%+-._~!$&'()*,;=:@]+))");
          if (pattern._get(3) != null) buffer.write("?");
          keys[$add](pattern._get(2));
          return dart.str(buffer);
        }
        dart.fn(_replace, T$.MatchToString());
        let stringPath = (dart.str(path) + "/?")[$replaceAllMapped](core.RegExp.new("(\\.)?:(\\w+)(\\?)?"), _replace)[$replaceAll]("//", "/");
        return new get_route.PathDecoded.new(core.RegExp.new("^" + stringPath + "$"), keys);
      }
      copy(opts) {
        let t31, t31$, t31$0, t31$1, t31$2, t31$3, t31$4, t31$5, t31$6, t31$7, t31$8, t31$9, t31$10, t31$11, t31$12, t31$13, t31$14, t31$15, t31$16, t31$17, t31$18, t31$19, t31$20;
        let name = opts && 'name' in opts ? opts.name : null;
        let page = opts && 'page' in opts ? opts.page : null;
        let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
        let parameters = opts && 'parameters' in opts ? opts.parameters : null;
        let title = opts && 'title' in opts ? opts.title : null;
        let transition = opts && 'transition' in opts ? opts.transition : null;
        let curve = opts && 'curve' in opts ? opts.curve : null;
        let alignment = opts && 'alignment' in opts ? opts.alignment : null;
        let maintainState = opts && 'maintainState' in opts ? opts.maintainState : null;
        let opaque = opts && 'opaque' in opts ? opts.opaque : null;
        let binding = opts && 'binding' in opts ? opts.binding : null;
        let bindings = opts && 'bindings' in opts ? opts.bindings : null;
        let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
        let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
        let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : null;
        let settings = opts && 'settings' in opts ? opts.settings : null;
        let children = opts && 'children' in opts ? opts.children : null;
        let unknownRoute = opts && 'unknownRoute' in opts ? opts.unknownRoute : null;
        let middlewares = opts && 'middlewares' in opts ? opts.middlewares : null;
        let preventDuplicates = opts && 'preventDuplicates' in opts ? opts.preventDuplicates : null;
        let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
        let participatesInRootNavigator = opts && 'participatesInRootNavigator' in opts ? opts.participatesInRootNavigator : null;
        let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
        let showCupertinoParallax = opts && 'showCupertinoParallax' in opts ? opts.showCupertinoParallax : null;
        return new (GetPageOfT()).new({participatesInRootNavigator: (t31 = participatesInRootNavigator, t31 == null ? this.participatesInRootNavigator : t31), preventDuplicates: (t31$ = preventDuplicates, t31$ == null ? this.preventDuplicates : t31$), name: (t31$0 = name, t31$0 == null ? this.name : t31$0), page: (t31$1 = page, t31$1 == null ? this.page : t31$1), popGesture: (t31$2 = popGesture, t31$2 == null ? this.popGesture : t31$2), parameters: (t31$3 = parameters, t31$3 == null ? this.parameters : t31$3), title: (t31$4 = title, t31$4 == null ? this.title : t31$4), transition: (t31$5 = transition, t31$5 == null ? this.transition : t31$5), curve: (t31$6 = curve, t31$6 == null ? this.curve : t31$6), alignment: (t31$7 = alignment, t31$7 == null ? this.alignment : t31$7), maintainState: (t31$8 = maintainState, t31$8 == null ? this.maintainState : t31$8), opaque: (t31$9 = opaque, t31$9 == null ? this.opaque : t31$9), binding: (t31$10 = binding, t31$10 == null ? this.binding : t31$10), bindings: (t31$11 = bindings, t31$11 == null ? this.bindings : t31$11), customTransition: (t31$12 = customTransition, t31$12 == null ? this.customTransition : t31$12), transitionDuration: (t31$13 = transitionDuration, t31$13 == null ? this.transitionDuration : t31$13), fullscreenDialog: (t31$14 = fullscreenDialog, t31$14 == null ? this.fullscreenDialog : t31$14), children: (t31$15 = children, t31$15 == null ? this.children : t31$15), unknownRoute: (t31$16 = unknownRoute, t31$16 == null ? this.unknownRoute : t31$16), middlewares: (t31$17 = middlewares, t31$17 == null ? this.middlewares : t31$17), gestureWidth: (t31$18 = gestureWidth, t31$18 == null ? this.gestureWidth : t31$18), arguments: (t31$19 = $arguments, t31$19 == null ? this.arguments : t31$19), showCupertinoParallax: (t31$20 = showCupertinoParallax, t31$20 == null ? this.showCupertinoParallax : t31$20)});
      }
      get popped() {
        let t31;
        return dart.test(this[__GetPage_popped_isSet]) ? (t31 = this[__GetPage_popped], t31) : dart.throw(new _internal.LateError.fieldNI("popped"));
      }
      set popped(t31) {
        FutureOfTN().as(t31);
        if (t31 == null) dart.nullFailed(I[44], 177, 19, "null");
        this[__GetPage_popped_isSet] = true;
        this[__GetPage_popped] = t31;
      }
      createRoute(context) {
        if (context == null) dart.nullFailed(I[44], 180, 37, "context");
        let _page = new route_middleware.PageRedirect.new({route: this, settings: this, unknownRoute: this.unknownRoute}).getPageToRoute(T, this, this.unknownRoute);
        this.popped = _page.popped;
        return _page;
      }
    }
    (GetPage.new = function(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      if (name == null) dart.nullFailed(I[44], 67, 19, "name");
      let page = opts && 'page' in opts ? opts.page : null;
      if (page == null) dart.nullFailed(I[44], 68, 19, "page");
      let title = opts && 'title' in opts ? opts.title : null;
      let participatesInRootNavigator = opts && 'participatesInRootNavigator' in opts ? opts.participatesInRootNavigator : null;
      let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
      let maintainState = opts && 'maintainState' in opts ? opts.maintainState : true;
      if (maintainState == null) dart.nullFailed(I[44], 73, 10, "maintainState");
      let curve = opts && 'curve' in opts ? opts.curve : C[607] || CT.C607;
      if (curve == null) dart.nullFailed(I[44], 74, 10, "curve");
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      let opaque = opts && 'opaque' in opts ? opts.opaque : true;
      if (opaque == null) dart.nullFailed(I[44], 77, 10, "opaque");
      let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
      let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
      let binding = opts && 'binding' in opts ? opts.binding : null;
      let bindings = opts && 'bindings' in opts ? opts.bindings : C[608] || CT.C608;
      if (bindings == null) dart.nullFailed(I[44], 81, 10, "bindings");
      let transition = opts && 'transition' in opts ? opts.transition : null;
      let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      if (fullscreenDialog == null) dart.nullFailed(I[44], 84, 10, "fullscreenDialog");
      let children = opts && 'children' in opts ? opts.children : C[609] || CT.C609;
      if (children == null) dart.nullFailed(I[44], 85, 10, "children");
      let middlewares = opts && 'middlewares' in opts ? opts.middlewares : null;
      let unknownRoute = opts && 'unknownRoute' in opts ? opts.unknownRoute : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let showCupertinoParallax = opts && 'showCupertinoParallax' in opts ? opts.showCupertinoParallax : true;
      if (showCupertinoParallax == null) dart.nullFailed(I[44], 89, 10, "showCupertinoParallax");
      let preventDuplicates = opts && 'preventDuplicates' in opts ? opts.preventDuplicates : true;
      if (preventDuplicates == null) dart.nullFailed(I[44], 90, 10, "preventDuplicates");
      this[__GetPage_popped] = null;
      this[__GetPage_popped_isSet] = false;
      this[name$] = name;
      this[page$0] = page;
      this[title$3] = title;
      this[participatesInRootNavigator$] = participatesInRootNavigator;
      this[gestureWidth$1] = gestureWidth;
      this[maintainState$0] = maintainState;
      this[curve$0] = curve;
      this[alignment$0] = alignment;
      this[parameters$] = parameters;
      this[opaque$0] = opaque;
      this[transitionDuration$2] = transitionDuration;
      this[popGesture$2] = popGesture;
      this[binding$1] = binding;
      this[bindings$0] = bindings;
      this[transition$0] = transition;
      this[customTransition$2] = customTransition;
      this[fullscreenDialog$] = fullscreenDialog;
      this[children$] = children;
      this[middlewares$0] = middlewares;
      this[unknownRoute$2] = unknownRoute;
      this[$arguments$] = $arguments;
      this[showCupertinoParallax$0] = showCupertinoParallax;
      this[preventDuplicates$] = preventDuplicates;
      this[path] = get_route.GetPage._nameToRegex(name);
      if (!name[$startsWith]("/")) dart.assertFailed("It is necessary to start route name [" + dart.str(name) + "] with a slash: /" + dart.str(name), I[44], 92, 16, "name.startsWith('/')");
      GetPage.__proto__.new.call(this, {key: new (T$.ValueKeyOfString()).new(name), name: name, arguments: extension_navigation['GetNavigation|get#arguments'](get_main.Get)});
      ;
    }).prototype = GetPage.prototype;
    dart.addTypeTests(GetPage);
    GetPage.prototype[_is_GetPage_default] = true;
    dart.addTypeCaches(GetPage);
    dart.setMethodSignature(GetPage, () => ({
      __proto__: dart.getMethods(GetPage.__proto__),
      copy: dart.fnType(get_route.GetPage$(T), [], {alignment: dart.nullable(alignment.Alignment), arguments: dart.nullable(core.Object), binding: dart.nullable(bindings_interface.Bindings), bindings: dart.nullable(core.List$(bindings_interface.Bindings)), children: dart.nullable(core.List$(get_route.GetPage)), curve: dart.nullable(curves.Curve), customTransition: dart.nullable(custom_transition.CustomTransition), fullscreenDialog: dart.nullable(core.bool), gestureWidth: dart.nullable(dart.fnType(core.double, [framework.BuildContext])), maintainState: dart.nullable(core.bool), middlewares: dart.nullable(core.List$(route_middleware.GetMiddleware)), name: dart.nullable(core.String), opaque: dart.nullable(core.bool), page: dart.nullable(dart.fnType(framework.Widget, [])), parameters: dart.nullable(core.Map$(core.String, core.String)), participatesInRootNavigator: dart.nullable(core.bool), popGesture: dart.nullable(core.bool), preventDuplicates: dart.nullable(core.bool), settings: dart.nullable(navigator.RouteSettings), showCupertinoParallax: dart.nullable(core.bool), title: dart.nullable(core.String), transition: dart.nullable(transitions_type.Transition), transitionDuration: dart.nullable(core.Duration), unknownRoute: dart.nullable(get_route.GetPage)}, {}),
      createRoute: dart.fnType(navigator.Route$(T), [framework.BuildContext])
    }));
    dart.setGetterSignature(GetPage, () => ({
      __proto__: dart.getGetters(GetPage.__proto__),
      popped: async.Future$(dart.nullable(T))
    }));
    dart.setSetterSignature(GetPage, () => ({
      __proto__: dart.getSetters(GetPage.__proto__),
      popped: dart.nullable(core.Object)
    }));
    dart.setLibraryUri(GetPage, I[45]);
    dart.setFieldSignature(GetPage, () => ({
      __proto__: dart.getFields(GetPage.__proto__),
      page: dart.finalFieldType(dart.fnType(framework.Widget, [])),
      popGesture: dart.finalFieldType(dart.nullable(core.bool)),
      parameters: dart.finalFieldType(dart.nullable(core.Map$(core.String, core.String))),
      title: dart.finalFieldType(dart.nullable(core.String)),
      transition: dart.finalFieldType(dart.nullable(transitions_type.Transition)),
      curve: dart.finalFieldType(curves.Curve),
      participatesInRootNavigator: dart.finalFieldType(dart.nullable(core.bool)),
      alignment: dart.finalFieldType(dart.nullable(alignment.Alignment)),
      maintainState: dart.finalFieldType(core.bool),
      opaque: dart.finalFieldType(core.bool),
      gestureWidth: dart.finalFieldType(dart.nullable(dart.fnType(core.double, [framework.BuildContext]))),
      binding: dart.finalFieldType(dart.nullable(bindings_interface.Bindings)),
      bindings: dart.finalFieldType(core.List$(bindings_interface.Bindings)),
      customTransition: dart.finalFieldType(dart.nullable(custom_transition.CustomTransition)),
      transitionDuration: dart.finalFieldType(dart.nullable(core.Duration)),
      fullscreenDialog: dart.finalFieldType(core.bool),
      preventDuplicates: dart.finalFieldType(core.bool),
      arguments: dart.finalFieldType(dart.nullable(core.Object)),
      name: dart.finalFieldType(core.String),
      children: dart.finalFieldType(core.List$(get_route.GetPage)),
      middlewares: dart.finalFieldType(dart.nullable(core.List$(route_middleware.GetMiddleware))),
      path: dart.finalFieldType(get_route.PathDecoded),
      unknownRoute: dart.finalFieldType(dart.nullable(get_route.GetPage)),
      showCupertinoParallax: dart.finalFieldType(core.bool),
      [__GetPage_popped]: dart.fieldType(dart.nullable(async.Future$(dart.nullable(T)))),
      [__GetPage_popped_isSet]: dart.fieldType(core.bool)
    }));
    return GetPage;
  });
  get_route.GetPage = get_route.GetPage$();
  dart.addTypeTests(get_route.GetPage, _is_GetPage_default);
  var treeBranch$ = dart.privateName(parse_route, "RouteDecoder.treeBranch");
  var parameters$0 = dart.privateName(parse_route, "RouteDecoder.parameters");
  var $arguments$0 = dart.privateName(parse_route, "RouteDecoder.arguments");
  parse_route.RouteDecoder = class RouteDecoder extends core.Object {
    get treeBranch() {
      return this[treeBranch$];
    }
    set treeBranch(value) {
      super.treeBranch = value;
    }
    get parameters() {
      return this[parameters$0];
    }
    set parameters(value) {
      super.parameters = value;
    }
    get arguments() {
      return this[$arguments$0];
    }
    set arguments(value) {
      super.arguments = value;
    }
    get route() {
      return dart.test(this.treeBranch[$isEmpty]) ? null : this.treeBranch[$last];
    }
    replaceArguments($arguments) {
      let _route = this.route;
      if (_route != null) {
        let index = this.treeBranch[$indexOf](_route);
        this.treeBranch[$_set](index, _route.copy({arguments: $arguments}));
      }
    }
    replaceParameters($arguments) {
      let _route = this.route;
      if (_route != null) {
        let index = this.treeBranch[$indexOf](_route);
        this.treeBranch[$_set](index, _route.copy({parameters: this.parameters}));
      }
    }
  };
  (parse_route.RouteDecoder.new = function(treeBranch, parameters, $arguments) {
    if (treeBranch == null) dart.nullFailed(I[46], 10, 10, "treeBranch");
    if (parameters == null) dart.nullFailed(I[46], 11, 10, "parameters");
    this[treeBranch$] = treeBranch;
    this[parameters$0] = parameters;
    this[$arguments$0] = $arguments;
    ;
  }).prototype = parse_route.RouteDecoder.prototype;
  dart.addTypeTests(parse_route.RouteDecoder);
  dart.addTypeCaches(parse_route.RouteDecoder);
  dart.setMethodSignature(parse_route.RouteDecoder, () => ({
    __proto__: dart.getMethods(parse_route.RouteDecoder.__proto__),
    replaceArguments: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    replaceParameters: dart.fnType(dart.void, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(parse_route.RouteDecoder, () => ({
    __proto__: dart.getGetters(parse_route.RouteDecoder.__proto__),
    route: dart.nullable(get_route.GetPage)
  }));
  dart.setLibraryUri(parse_route.RouteDecoder, I[47]);
  dart.setFieldSignature(parse_route.RouteDecoder, () => ({
    __proto__: dart.getFields(parse_route.RouteDecoder.__proto__),
    treeBranch: dart.finalFieldType(core.List$(get_route.GetPage)),
    parameters: dart.finalFieldType(core.Map$(core.String, core.String)),
    arguments: dart.finalFieldType(dart.nullable(core.Object))
  }));
  var routes$1 = dart.privateName(parse_route, "ParseRouteTree.routes");
  var _findRoute = dart.privateName(parse_route, "_findRoute");
  var _parseParams = dart.privateName(parse_route, "_parseParams");
  var _flattenPage = dart.privateName(parse_route, "_flattenPage");
  var _addChild = dart.privateName(parse_route, "_addChild");
  parse_route.ParseRouteTree = class ParseRouteTree extends core.Object {
    get routes() {
      return this[routes$1];
    }
    set routes(value) {
      super.routes = value;
    }
    matchRoute(name, opts) {
      if (name == null) dart.nullFailed(I[46], 38, 34, "name");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let uri = core.Uri.parse(name);
      let split = uri.path[$split]("/")[$where](dart.fn(element => {
        if (element == null) dart.nullFailed(I[46], 41, 46, "element");
        return element[$isNotEmpty];
      }, T$.StringTobool()));
      let curPath = "/";
      let cumulativePaths = T$.JSArrayOfString().of(["/"]);
      for (let item of split) {
        if (curPath[$endsWith]("/")) {
          curPath = curPath + dart.str(item);
        } else {
          curPath = curPath + ("/" + dart.str(item));
        }
        cumulativePaths[$add](curPath);
      }
      let treeBranch = cumulativePaths[$map](T$.MapEntryOfString$GetPageN(), dart.fn(e => {
        if (e == null) dart.nullFailed(I[46], 56, 15, "e");
        return new (T$.MapEntryOfString$GetPageN()).__(e, this[_findRoute](e));
      }, T$.StringToMapEntryOfString$GetPageN()))[$where](dart.fn(element => {
        if (element == null) dart.nullFailed(I[46], 57, 17, "element");
        return element.value != null;
      }, T$.MapEntryOfString$GetPageNTobool()))[$map](T$.MapEntryOfString$GetPage(), dart.fn(e => {
        if (e == null) dart.nullFailed(I[46], 58, 15, "e");
        return new (T$.MapEntryOfString$GetPage()).__(e.key, dart.nullCheck(e.value));
      }, T$.MapEntryOfString$GetPageNToMapEntryOfString$GetPage()))[$toList]();
      let params = T$.LinkedHashMapOfString$String().from(uri.queryParameters);
      if (dart.test(treeBranch[$isNotEmpty])) {
        let lastRoute = treeBranch[$last];
        let parsedParams = this[_parseParams](name, lastRoute.value.path);
        if (dart.test(parsedParams[$isNotEmpty])) {
          params[$addAll](parsedParams);
        }
        let mappedTreeBranch = treeBranch[$map](get_route.GetPage, dart.fn(e => {
          if (e == null) dart.nullFailed(I[46], 72, 14, "e");
          return e.value.copy({parameters: (() => {
              let t32 = new (T$.IdentityMapOfString$String()).new();
              if (e.value.parameters != null) for (let t33 of dart.nullCheck(e.value.parameters)[$entries])
                t32[$_set](t33.key, t33.value);
              for (let t34 of params[$entries])
                t32[$_set](t34.key, t34.value);
              return t32;
            })(), name: e.key});
        }, T$.MapEntryOfString$GetPageToGetPage()))[$toList]();
        return new parse_route.RouteDecoder.new(mappedTreeBranch, params, $arguments);
      }
      return new parse_route.RouteDecoder.new(treeBranch[$map](get_route.GetPage, dart.fn(e => {
        if (e == null) dart.nullFailed(I[46], 90, 23, "e");
        return e.value;
      }, T$.MapEntryOfString$GetPageToGetPage()))[$toList](), params, $arguments);
    }
    addRoutes(getPages) {
      if (getPages == null) dart.nullFailed(I[46], 96, 32, "getPages");
      for (let route of getPages) {
        this.addRoute(route);
      }
    }
    addRoute(route) {
      if (route == null) dart.nullFailed(I[46], 102, 25, "route");
      this.routes[$add](route);
      for (let page of this[_flattenPage](route)) {
        this.addRoute(page);
      }
    }
    [_flattenPage](route) {
      if (route == null) dart.nullFailed(I[46], 111, 38, "route");
      let result = T$.JSArrayOfGetPage().of([]);
      if (dart.test(route.children[$isEmpty])) {
        return result;
      }
      let parentPath = route.name;
      for (let page of route.children) {
        let parentMiddlewares = (() => {
          let t35 = T$.JSArrayOfGetMiddleware().of([]);
          if (page.middlewares != null) t35[$addAll](dart.nullCheck(page.middlewares));
          if (route.middlewares != null) t35[$addAll](dart.nullCheck(route.middlewares));
          return t35;
        })();
        result[$add](this[_addChild](page, parentPath, parentMiddlewares));
        let children = this[_flattenPage](page);
        for (let child of children) {
          result[$add](this[_addChild](child, parentPath, (() => {
            let t36 = T$.ListOfGetMiddleware().of(parentMiddlewares);
            if (child.middlewares != null) t36[$addAll](dart.nullCheck(child.middlewares));
            return t36;
          })()));
        }
      }
      return result;
    }
    [_addChild](origin, parentPath, middlewares) {
      if (origin == null) dart.nullFailed(I[46], 149, 19, "origin");
      if (parentPath == null) dart.nullFailed(I[46], 149, 34, "parentPath");
      if (middlewares == null) dart.nullFailed(I[46], 149, 66, "middlewares");
      return origin.copy({middlewares: middlewares, name: (dart.notNull(parentPath) + dart.notNull(origin.name))[$replaceAll]("//", "/")});
    }
    [_findRoute](name) {
      if (name == null) dart.nullFailed(I[46], 155, 30, "name");
      return parse_route['FirstWhereExt|firstWhereOrNull'](get_route.GetPage, this.routes, dart.fn(route => {
        if (route == null) dart.nullFailed(I[46], 157, 8, "route");
        return route.path.regex.hasMatch(name);
      }, T$.GetPageTobool()));
    }
    [_parseParams](path, routePath) {
      if (path == null) dart.nullFailed(I[46], 161, 43, "path");
      if (routePath == null) dart.nullFailed(I[46], 161, 61, "routePath");
      let params = new (T$.IdentityMapOfString$String()).new();
      let idx = path[$indexOf]("?");
      if (idx > -1) {
        path = path[$substring](0, idx);
        let uri = core.Uri.tryParse(path);
        if (uri != null) {
          params[$addAll](uri.queryParameters);
        }
      }
      let paramsMatch = routePath.regex.firstMatch(path);
      for (let i = 0; i < dart.notNull(routePath.keys[$length]); i = i + 1) {
        let param = core.Uri.decodeQueryComponent(dart.nullCheck(dart.nullCheck(paramsMatch)._get(i + 1)));
        params[$_set](dart.nullCheck(routePath.keys[$_get](i)), param);
      }
      return params;
    }
  };
  (parse_route.ParseRouteTree.new = function(opts) {
    let routes = opts && 'routes' in opts ? opts.routes : null;
    if (routes == null) dart.nullFailed(I[46], 33, 19, "routes");
    this[routes$1] = routes;
    ;
  }).prototype = parse_route.ParseRouteTree.prototype;
  dart.addTypeTests(parse_route.ParseRouteTree);
  dart.addTypeCaches(parse_route.ParseRouteTree);
  dart.setMethodSignature(parse_route.ParseRouteTree, () => ({
    __proto__: dart.getMethods(parse_route.ParseRouteTree.__proto__),
    matchRoute: dart.fnType(parse_route.RouteDecoder, [core.String], {arguments: dart.nullable(core.Object)}, {}),
    addRoutes: dart.fnType(dart.void, [core.List$(get_route.GetPage)]),
    addRoute: dart.fnType(dart.void, [get_route.GetPage]),
    [_flattenPage]: dart.fnType(core.List$(get_route.GetPage), [get_route.GetPage]),
    [_addChild]: dart.fnType(get_route.GetPage, [get_route.GetPage, core.String, core.List$(route_middleware.GetMiddleware)]),
    [_findRoute]: dart.fnType(dart.nullable(get_route.GetPage), [core.String]),
    [_parseParams]: dart.fnType(core.Map$(core.String, core.String), [core.String, get_route.PathDecoded])
  }));
  dart.setLibraryUri(parse_route.ParseRouteTree, I[47]);
  dart.setFieldSignature(parse_route.ParseRouteTree, () => ({
    __proto__: dart.getFields(parse_route.ParseRouteTree.__proto__),
    routes: dart.finalFieldType(core.List$(get_route.GetPage))
  }));
  parse_route['FirstWhereExt|firstWhereOrNull'] = function FirstWhereExt$124firstWhereOrNull(T, $this, test) {
    if ($this == null) dart.nullFailed(I[46], 183, 6, "#this");
    if (test == null) dart.nullFailed(I[46], 183, 48, "test");
    for (let element of $this) {
      if (dart.test(test(element))) return element;
    }
    return null;
  };
  parse_route['FirstWhereExt|get#firstWhereOrNull'] = function FirstWhereExt$124get$35firstWhereOrNull(T, $this) {
    if ($this == null) dart.nullFailed(I[46], 183, 6, "#this");
    return dart.fn(test => {
      if (test == null) dart.nullFailed(I[46], 183, 48, "test");
      return parse_route['FirstWhereExt|firstWhereOrNull'](T, $this, test);
    }, dart.fnType(dart.nullable(T), [dart.fnType(core.bool, [T])]));
  };
  var widget = dart.privateName(dialog_route, "GetDialogRoute.widget");
  var _barrierDismissible = dart.privateName(dialog_route, "_barrierDismissible");
  var _barrierLabel = dart.privateName(dialog_route, "_barrierLabel");
  var _barrierColor = dart.privateName(dialog_route, "_barrierColor");
  var _transitionDuration = dart.privateName(dialog_route, "_transitionDuration");
  var _transitionBuilder = dart.privateName(dialog_route, "_transitionBuilder");
  const _is_GetDialogRoute_default = Symbol('_is_GetDialogRoute_default');
  dialog_route.GetDialogRoute$ = dart.generic(T => {
    class GetDialogRoute extends routes.PopupRoute$(T) {
      get widget() {
        return this[widget];
      }
      set widget(value) {
        super.widget = value;
      }
      get barrierDismissible() {
        return this[_barrierDismissible];
      }
      dispose() {
        router_report.RouterReportManager.reportRouteDispose(this);
        super.dispose();
      }
      get barrierLabel() {
        return this[_barrierLabel];
      }
      get barrierColor() {
        return this[_barrierColor];
      }
      get transitionDuration() {
        return this[_transitionDuration];
      }
      buildPage(context, animation, secondaryAnimation) {
        let t41, t40, t39;
        if (context == null) dart.nullFailed(I[48], 50, 33, "context");
        if (animation == null) dart.nullFailed(I[48], 50, 60, "animation");
        if (secondaryAnimation == null) dart.nullFailed(I[48], 51, 25, "secondaryAnimation");
        return new basic.Semantics.new({child: (t39 = context, t40 = animation, t41 = secondaryAnimation, this.widget(t39, t40, t41)), scopesRoute: true, explicitChildNodes: true, $creationLocationd_0dea112b090073317d4: C[612] || CT.C612});
      }
      buildTransitions(context, animation, secondaryAnimation, child) {
        if (context == null) dart.nullFailed(I[48], 60, 40, "context");
        if (animation == null) dart.nullFailed(I[48], 60, 67, "animation");
        if (secondaryAnimation == null) dart.nullFailed(I[48], 61, 25, "secondaryAnimation");
        if (child == null) dart.nullFailed(I[48], 61, 52, "child");
        if (this[_transitionBuilder] == null) {
          return new transitions.FadeTransition.new({opacity: new animations.CurvedAnimation.new({parent: animation, curve: curves.Curves.linear}), child: child, $creationLocationd_0dea112b090073317d4: C[617] || CT.C617});
        }
        return dart.nullCheck(this[_transitionBuilder])(context, animation, secondaryAnimation, child);
      }
    }
    (GetDialogRoute.new = function(opts) {
      let pageBuilder = opts && 'pageBuilder' in opts ? opts.pageBuilder : null;
      if (pageBuilder == null) dart.nullFailed(I[48], 6, 31, "pageBuilder");
      let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : true;
      if (barrierDismissible == null) dart.nullFailed(I[48], 7, 10, "barrierDismissible");
      let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
      let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : C[610] || CT.C610;
      if (barrierColor == null) dart.nullFailed(I[48], 9, 11, "barrierColor");
      let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : C[611] || CT.C611;
      if (transitionDuration == null) dart.nullFailed(I[48], 10, 14, "transitionDuration");
      let transitionBuilder = opts && 'transitionBuilder' in opts ? opts.transitionBuilder : null;
      let settings = opts && 'settings' in opts ? opts.settings : null;
      this[widget] = pageBuilder;
      this[_barrierDismissible] = barrierDismissible;
      this[_barrierLabel] = barrierLabel;
      this[_barrierColor] = barrierColor;
      this[_transitionDuration] = transitionDuration;
      this[_transitionBuilder] = transitionBuilder;
      GetDialogRoute.__proto__.new.call(this, {settings: settings});
      router_report.RouterReportManager.reportCurrentRoute(this);
    }).prototype = GetDialogRoute.prototype;
    dart.addTypeTests(GetDialogRoute);
    GetDialogRoute.prototype[_is_GetDialogRoute_default] = true;
    dart.addTypeCaches(GetDialogRoute);
    dart.setMethodSignature(GetDialogRoute, () => ({
      __proto__: dart.getMethods(GetDialogRoute.__proto__),
      buildPage: dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double)])
    }));
    dart.setGetterSignature(GetDialogRoute, () => ({
      __proto__: dart.getGetters(GetDialogRoute.__proto__),
      barrierDismissible: core.bool,
      barrierLabel: dart.nullable(core.String),
      barrierColor: ui.Color,
      transitionDuration: core.Duration
    }));
    dart.setLibraryUri(GetDialogRoute, I[49]);
    dart.setFieldSignature(GetDialogRoute, () => ({
      __proto__: dart.getFields(GetDialogRoute.__proto__),
      widget: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double)])),
      [_barrierDismissible]: dart.finalFieldType(core.bool),
      [_barrierLabel]: dart.finalFieldType(dart.nullable(core.String)),
      [_barrierColor]: dart.finalFieldType(ui.Color),
      [_transitionDuration]: dart.finalFieldType(core.Duration),
      [_transitionBuilder]: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double), framework.Widget])))
    }));
    return GetDialogRoute;
  });
  dialog_route.GetDialogRoute = dialog_route.GetDialogRoute$();
  dart.addTypeTests(dialog_route.GetDialogRoute, _is_GetDialogRoute_default);
  extension_navigation['ExtensionSnackbar|rawSnackbar'] = function ExtensionSnackbar$124rawSnackbar($this, opts) {
    if ($this == null) dart.nullFailed(I[50], 16, 8, "#this");
    let title = opts && 'title' in opts ? opts.title : null;
    let message = opts && 'message' in opts ? opts.message : null;
    let titleText = opts && 'titleText' in opts ? opts.titleText : null;
    let messageText = opts && 'messageText' in opts ? opts.messageText : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let instantInit = opts && 'instantInit' in opts ? opts.instantInit : true;
    if (instantInit == null) dart.nullFailed(I[50], 22, 10, "instantInit");
    let shouldIconPulse = opts && 'shouldIconPulse' in opts ? opts.shouldIconPulse : true;
    if (shouldIconPulse == null) dart.nullFailed(I[50], 23, 10, "shouldIconPulse");
    let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
    let margin = opts && 'margin' in opts ? opts.margin : C[316] || CT.C316;
    if (margin == null) dart.nullFailed(I[50], 25, 16, "margin");
    let padding = opts && 'padding' in opts ? opts.padding : C[317] || CT.C317;
    if (padding == null) dart.nullFailed(I[50], 26, 16, "padding");
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : 0;
    if (borderRadius == null) dart.nullFailed(I[50], 27, 12, "borderRadius");
    let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
    let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : 1;
    if (borderWidth == null) dart.nullFailed(I[50], 29, 12, "borderWidth");
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : C[318] || CT.C318;
    if (backgroundColor == null) dart.nullFailed(I[50], 30, 11, "backgroundColor");
    let leftBarIndicatorColor = opts && 'leftBarIndicatorColor' in opts ? opts.leftBarIndicatorColor : null;
    let boxShadows = opts && 'boxShadows' in opts ? opts.boxShadows : null;
    let backgroundGradient = opts && 'backgroundGradient' in opts ? opts.backgroundGradient : null;
    let mainButton = opts && 'mainButton' in opts ? opts.mainButton : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let duration = opts && 'duration' in opts ? opts.duration : C[621] || CT.C621;
    if (duration == null) dart.nullFailed(I[50], 36, 14, "duration");
    let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
    if (isDismissible == null) dart.nullFailed(I[50], 37, 10, "isDismissible");
    let dismissDirection = opts && 'dismissDirection' in opts ? opts.dismissDirection : C[319] || CT.C319;
    if (dismissDirection == null) dart.nullFailed(I[50], 38, 27, "dismissDirection");
    let showProgressIndicator = opts && 'showProgressIndicator' in opts ? opts.showProgressIndicator : false;
    if (showProgressIndicator == null) dart.nullFailed(I[50], 39, 10, "showProgressIndicator");
    let progressIndicatorController = opts && 'progressIndicatorController' in opts ? opts.progressIndicatorController : null;
    let progressIndicatorBackgroundColor = opts && 'progressIndicatorBackgroundColor' in opts ? opts.progressIndicatorBackgroundColor : null;
    let progressIndicatorValueColor = opts && 'progressIndicatorValueColor' in opts ? opts.progressIndicatorValueColor : null;
    let snackPosition = opts && 'snackPosition' in opts ? opts.snackPosition : C[320] || CT.C320;
    if (snackPosition == null) dart.nullFailed(I[50], 43, 19, "snackPosition");
    let snackStyle = opts && 'snackStyle' in opts ? opts.snackStyle : C[321] || CT.C321;
    if (snackStyle == null) dart.nullFailed(I[50], 44, 16, "snackStyle");
    let forwardAnimationCurve = opts && 'forwardAnimationCurve' in opts ? opts.forwardAnimationCurve : C[322] || CT.C322;
    if (forwardAnimationCurve == null) dart.nullFailed(I[50], 45, 11, "forwardAnimationCurve");
    let reverseAnimationCurve = opts && 'reverseAnimationCurve' in opts ? opts.reverseAnimationCurve : C[322] || CT.C322;
    if (reverseAnimationCurve == null) dart.nullFailed(I[50], 46, 11, "reverseAnimationCurve");
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : C[323] || CT.C323;
    if (animationDuration == null) dart.nullFailed(I[50], 47, 14, "animationDuration");
    let snackbarStatus = opts && 'snackbarStatus' in opts ? opts.snackbarStatus : null;
    let barBlur = opts && 'barBlur' in opts ? opts.barBlur : 0;
    let overlayBlur = opts && 'overlayBlur' in opts ? opts.overlayBlur : 0;
    if (overlayBlur == null) dart.nullFailed(I[50], 50, 12, "overlayBlur");
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let userInputForm = opts && 'userInputForm' in opts ? opts.userInputForm : null;
    return async.async(dart.void, function* ExtensionSnackbar$124rawSnackbar() {
      let getBar = new (T$.GetBarOfObject()).new({snackbarStatus: snackbarStatus, title: title, message: message, titleText: titleText, messageText: messageText, snackPosition: snackPosition, borderRadius: borderRadius, margin: margin, duration: duration, barBlur: barBlur, backgroundColor: backgroundColor, icon: icon, shouldIconPulse: shouldIconPulse, maxWidth: maxWidth, padding: padding, borderColor: borderColor, borderWidth: borderWidth, leftBarIndicatorColor: leftBarIndicatorColor, boxShadows: boxShadows, backgroundGradient: backgroundGradient, mainButton: mainButton, onTap: onTap, isDismissible: isDismissible, dismissDirection: dismissDirection, showProgressIndicator: showProgressIndicator, progressIndicatorController: progressIndicatorController, progressIndicatorBackgroundColor: progressIndicatorBackgroundColor, progressIndicatorValueColor: progressIndicatorValueColor, snackStyle: snackStyle, forwardAnimationCurve: forwardAnimationCurve, reverseAnimationCurve: reverseAnimationCurve, animationDuration: animationDuration, overlayBlur: overlayBlur, overlayColor: overlayColor, userInputForm: userInputForm, $creationLocationd_0dea112b090073317d4: C[622] || CT.C622});
      if (dart.test(instantInit)) {
        getBar.show(dart.dynamic);
      } else {
        dart.nullCheck(binding$.SchedulerBinding.instance).addPostFrameCallback(dart.fn(_ => {
          if (_ == null) dart.nullFailed(I[50], 95, 56, "_");
          getBar.show(dart.dynamic);
        }, T$.DurationTovoid()));
      }
    });
  };
  extension_navigation['ExtensionSnackbar|get#rawSnackbar'] = function ExtensionSnackbar$124get$35rawSnackbar($this) {
    if ($this == null) dart.nullFailed(I[50], 16, 8, "#this");
    return dart.fn(opts => {
      let title = opts && 'title' in opts ? opts.title : null;
      let message = opts && 'message' in opts ? opts.message : null;
      let titleText = opts && 'titleText' in opts ? opts.titleText : null;
      let messageText = opts && 'messageText' in opts ? opts.messageText : null;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let instantInit = opts && 'instantInit' in opts ? opts.instantInit : true;
      if (instantInit == null) dart.nullFailed(I[50], 22, 10, "instantInit");
      let shouldIconPulse = opts && 'shouldIconPulse' in opts ? opts.shouldIconPulse : true;
      if (shouldIconPulse == null) dart.nullFailed(I[50], 23, 10, "shouldIconPulse");
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let margin = opts && 'margin' in opts ? opts.margin : C[316] || CT.C316;
      if (margin == null) dart.nullFailed(I[50], 25, 16, "margin");
      let padding = opts && 'padding' in opts ? opts.padding : C[317] || CT.C317;
      if (padding == null) dart.nullFailed(I[50], 26, 16, "padding");
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : 0;
      if (borderRadius == null) dart.nullFailed(I[50], 27, 12, "borderRadius");
      let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
      let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : 1;
      if (borderWidth == null) dart.nullFailed(I[50], 29, 12, "borderWidth");
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : C[318] || CT.C318;
      if (backgroundColor == null) dart.nullFailed(I[50], 30, 11, "backgroundColor");
      let leftBarIndicatorColor = opts && 'leftBarIndicatorColor' in opts ? opts.leftBarIndicatorColor : null;
      let boxShadows = opts && 'boxShadows' in opts ? opts.boxShadows : null;
      let backgroundGradient = opts && 'backgroundGradient' in opts ? opts.backgroundGradient : null;
      let mainButton = opts && 'mainButton' in opts ? opts.mainButton : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let duration = opts && 'duration' in opts ? opts.duration : C[621] || CT.C621;
      if (duration == null) dart.nullFailed(I[50], 36, 14, "duration");
      let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
      if (isDismissible == null) dart.nullFailed(I[50], 37, 10, "isDismissible");
      let dismissDirection = opts && 'dismissDirection' in opts ? opts.dismissDirection : C[319] || CT.C319;
      if (dismissDirection == null) dart.nullFailed(I[50], 38, 27, "dismissDirection");
      let showProgressIndicator = opts && 'showProgressIndicator' in opts ? opts.showProgressIndicator : false;
      if (showProgressIndicator == null) dart.nullFailed(I[50], 39, 10, "showProgressIndicator");
      let progressIndicatorController = opts && 'progressIndicatorController' in opts ? opts.progressIndicatorController : null;
      let progressIndicatorBackgroundColor = opts && 'progressIndicatorBackgroundColor' in opts ? opts.progressIndicatorBackgroundColor : null;
      let progressIndicatorValueColor = opts && 'progressIndicatorValueColor' in opts ? opts.progressIndicatorValueColor : null;
      let snackPosition = opts && 'snackPosition' in opts ? opts.snackPosition : C[320] || CT.C320;
      if (snackPosition == null) dart.nullFailed(I[50], 43, 19, "snackPosition");
      let snackStyle = opts && 'snackStyle' in opts ? opts.snackStyle : C[321] || CT.C321;
      if (snackStyle == null) dart.nullFailed(I[50], 44, 16, "snackStyle");
      let forwardAnimationCurve = opts && 'forwardAnimationCurve' in opts ? opts.forwardAnimationCurve : C[322] || CT.C322;
      if (forwardAnimationCurve == null) dart.nullFailed(I[50], 45, 11, "forwardAnimationCurve");
      let reverseAnimationCurve = opts && 'reverseAnimationCurve' in opts ? opts.reverseAnimationCurve : C[322] || CT.C322;
      if (reverseAnimationCurve == null) dart.nullFailed(I[50], 46, 11, "reverseAnimationCurve");
      let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : C[323] || CT.C323;
      if (animationDuration == null) dart.nullFailed(I[50], 47, 14, "animationDuration");
      let snackbarStatus = opts && 'snackbarStatus' in opts ? opts.snackbarStatus : null;
      let barBlur = opts && 'barBlur' in opts ? opts.barBlur : 0;
      let overlayBlur = opts && 'overlayBlur' in opts ? opts.overlayBlur : 0;
      if (overlayBlur == null) dart.nullFailed(I[50], 50, 12, "overlayBlur");
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let userInputForm = opts && 'userInputForm' in opts ? opts.userInputForm : null;
      return extension_navigation['ExtensionSnackbar|rawSnackbar']($this, {title: title, message: message, titleText: titleText, messageText: messageText, icon: icon, instantInit: instantInit, shouldIconPulse: shouldIconPulse, maxWidth: maxWidth, margin: margin, padding: padding, borderRadius: borderRadius, borderColor: borderColor, borderWidth: borderWidth, backgroundColor: backgroundColor, leftBarIndicatorColor: leftBarIndicatorColor, boxShadows: boxShadows, backgroundGradient: backgroundGradient, mainButton: mainButton, onTap: onTap, duration: duration, isDismissible: isDismissible, dismissDirection: dismissDirection, showProgressIndicator: showProgressIndicator, progressIndicatorController: progressIndicatorController, progressIndicatorBackgroundColor: progressIndicatorBackgroundColor, progressIndicatorValueColor: progressIndicatorValueColor, snackPosition: snackPosition, snackStyle: snackStyle, forwardAnimationCurve: forwardAnimationCurve, reverseAnimationCurve: reverseAnimationCurve, animationDuration: animationDuration, snackbarStatus: snackbarStatus, barBlur: barBlur, overlayBlur: overlayBlur, overlayColor: overlayColor, userInputForm: userInputForm});
    }, T$.__Tovoid());
  };
  extension_navigation['ExtensionSnackbar|showSnackbar'] = function ExtensionSnackbar$124showSnackbar(T, $this, snackbar) {
    let t42;
    if ($this == null) dart.nullFailed(I[50], 101, 15, "#this");
    if (snackbar == null) dart.nullFailed(I[50], 101, 38, "snackbar");
    t42 = extension_navigation['GetNavigation|get#key']($this).currentState;
    return t42 == null ? null : t42.push(T, new (snack_route.SnackRoute$(T)).new({snack: snackbar}));
  };
  extension_navigation['ExtensionSnackbar|get#showSnackbar'] = function ExtensionSnackbar$124get$35showSnackbar($this) {
    if ($this == null) dart.nullFailed(I[50], 101, 15, "#this");
    return dart.fn((T, snackbar) => {
      if (snackbar == null) dart.nullFailed(I[50], 101, 38, "snackbar");
      return extension_navigation['ExtensionSnackbar|showSnackbar'](T, $this, snackbar);
    }, T$.GetBarOfObjectToFutureNOfTN());
  };
  extension_navigation['ExtensionSnackbar|snackbar'] = function ExtensionSnackbar$124snackbar(T, $this, title, message, opts) {
    if ($this == null) dart.nullFailed(I[50], 105, 8, "#this");
    if (title == null) dart.nullFailed(I[50], 106, 12, "title");
    if (message == null) dart.nullFailed(I[50], 107, 12, "message");
    let colorText = opts && 'colorText' in opts ? opts.colorText : null;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let instantInit = opts && 'instantInit' in opts ? opts.instantInit : true;
    if (instantInit == null) dart.nullFailed(I[50], 112, 10, "instantInit");
    let snackPosition = opts && 'snackPosition' in opts ? opts.snackPosition : null;
    let titleText = opts && 'titleText' in opts ? opts.titleText : null;
    let messageText = opts && 'messageText' in opts ? opts.messageText : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let shouldIconPulse = opts && 'shouldIconPulse' in opts ? opts.shouldIconPulse : null;
    let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
    let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let leftBarIndicatorColor = opts && 'leftBarIndicatorColor' in opts ? opts.leftBarIndicatorColor : null;
    let boxShadows = opts && 'boxShadows' in opts ? opts.boxShadows : null;
    let backgroundGradient = opts && 'backgroundGradient' in opts ? opts.backgroundGradient : null;
    let mainButton = opts && 'mainButton' in opts ? opts.mainButton : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : null;
    let showProgressIndicator = opts && 'showProgressIndicator' in opts ? opts.showProgressIndicator : null;
    let dismissDirection = opts && 'dismissDirection' in opts ? opts.dismissDirection : null;
    let progressIndicatorController = opts && 'progressIndicatorController' in opts ? opts.progressIndicatorController : null;
    let progressIndicatorBackgroundColor = opts && 'progressIndicatorBackgroundColor' in opts ? opts.progressIndicatorBackgroundColor : null;
    let progressIndicatorValueColor = opts && 'progressIndicatorValueColor' in opts ? opts.progressIndicatorValueColor : null;
    let snackStyle = opts && 'snackStyle' in opts ? opts.snackStyle : null;
    let forwardAnimationCurve = opts && 'forwardAnimationCurve' in opts ? opts.forwardAnimationCurve : null;
    let reverseAnimationCurve = opts && 'reverseAnimationCurve' in opts ? opts.reverseAnimationCurve : null;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
    let barBlur = opts && 'barBlur' in opts ? opts.barBlur : null;
    let overlayBlur = opts && 'overlayBlur' in opts ? opts.overlayBlur : null;
    let snackbarStatus = opts && 'snackbarStatus' in opts ? opts.snackbarStatus : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let userInputForm = opts && 'userInputForm' in opts ? opts.userInputForm : null;
    return async.async(dart.void, function* ExtensionSnackbar$124snackbar() {
      let t45, t45$, t44, t45$0, t45$1, t44$, t44$0, t44$1, t44$2, t44$3, t44$4, t44$5, t44$6, t44$7, t44$8, t44$9, t44$10, t44$11, t44$12, t44$13, t44$14, t44$15, t44$16;
      let getBar = new (T$.GetBarOfObject()).new({snackbarStatus: snackbarStatus, titleText: (t44 = titleText, t44 == null ? new text.Text.new(title, {style: new text_style.TextStyle.new({color: (t45$ = (t45 = colorText, t45 == null ? extension_navigation['GetNavigation|get#iconColor']($this) : t45), t45$ == null ? colors.Colors.black : t45$), fontWeight: ui.FontWeight.w800, fontSize: 16.0}), $creationLocationd_0dea112b090073317d4: C[659] || CT.C659}) : t44), messageText: (t44$ = messageText, t44$ == null ? new text.Text.new(message, {style: new text_style.TextStyle.new({color: (t45$1 = (t45$0 = colorText, t45$0 == null ? extension_navigation['GetNavigation|get#iconColor']($this) : t45$0), t45$1 == null ? colors.Colors.black : t45$1), fontWeight: ui.FontWeight.w300, fontSize: 14.0}), $creationLocationd_0dea112b090073317d4: C[663] || CT.C663}) : t44$), snackPosition: (t44$0 = snackPosition, t44$0 == null ? snack.SnackPosition.TOP : t44$0), borderRadius: (t44$1 = borderRadius, t44$1 == null ? 15.0 : t44$1), margin: (t44$2 = margin, t44$2 == null ? new edge_insets.EdgeInsets.symmetric({horizontal: 10.0}) : t44$2), duration: (t44$3 = duration, t44$3 == null ? new core.Duration.new({seconds: 3}) : t44$3), barBlur: (t44$4 = barBlur, t44$4 == null ? 7.0 : t44$4), backgroundColor: (t44$5 = backgroundColor, t44$5 == null ? colors.Colors.grey.withOpacity(0.2) : t44$5), icon: icon, shouldIconPulse: (t44$6 = shouldIconPulse, t44$6 == null ? true : t44$6), maxWidth: maxWidth, padding: (t44$7 = padding, t44$7 == null ? new edge_insets.EdgeInsets.all(16.0) : t44$7), borderColor: borderColor, borderWidth: borderWidth, leftBarIndicatorColor: leftBarIndicatorColor, boxShadows: boxShadows, backgroundGradient: backgroundGradient, mainButton: mainButton, onTap: onTap, isDismissible: (t44$8 = isDismissible, t44$8 == null ? true : t44$8), dismissDirection: (t44$9 = dismissDirection, t44$9 == null ? snack.SnackDismissDirection.VERTICAL : t44$9), showProgressIndicator: (t44$10 = showProgressIndicator, t44$10 == null ? false : t44$10), progressIndicatorController: progressIndicatorController, progressIndicatorBackgroundColor: progressIndicatorBackgroundColor, progressIndicatorValueColor: progressIndicatorValueColor, snackStyle: (t44$11 = snackStyle, t44$11 == null ? snack.SnackStyle.FLOATING : t44$11), forwardAnimationCurve: (t44$12 = forwardAnimationCurve, t44$12 == null ? curves.Curves.easeOutCirc : t44$12), reverseAnimationCurve: (t44$13 = reverseAnimationCurve, t44$13 == null ? curves.Curves.easeOutCirc : t44$13), animationDuration: (t44$14 = animationDuration, t44$14 == null ? new core.Duration.new({seconds: 1}) : t44$14), overlayBlur: (t44$15 = overlayBlur, t44$15 == null ? 0.0 : t44$15), overlayColor: (t44$16 = overlayColor, t44$16 == null ? colors.Colors.transparent : t44$16), userInputForm: userInputForm, $creationLocationd_0dea112b090073317d4: C[667] || CT.C667});
      if (dart.test(instantInit)) {
        extension_navigation['ExtensionSnackbar|showSnackbar'](T, $this, getBar);
      } else {
        extension_navigation['GetNavigation|get#routing']($this).isSnackbar = true;
        dart.nullCheck(binding$.SchedulerBinding.instance).addPostFrameCallback(dart.fn(_ => {
          if (_ == null) dart.nullFailed(I[50], 201, 56, "_");
          extension_navigation['ExtensionSnackbar|showSnackbar'](T, $this, getBar);
        }, T$.DurationTovoid()));
      }
    });
  };
  extension_navigation['ExtensionSnackbar|get#snackbar'] = function ExtensionSnackbar$124get$35snackbar($this) {
    if ($this == null) dart.nullFailed(I[50], 105, 8, "#this");
    return dart.fn((T, title, message, opts) => {
      if (title == null) dart.nullFailed(I[50], 106, 12, "title");
      if (message == null) dart.nullFailed(I[50], 107, 12, "message");
      let colorText = opts && 'colorText' in opts ? opts.colorText : null;
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let instantInit = opts && 'instantInit' in opts ? opts.instantInit : true;
      if (instantInit == null) dart.nullFailed(I[50], 112, 10, "instantInit");
      let snackPosition = opts && 'snackPosition' in opts ? opts.snackPosition : null;
      let titleText = opts && 'titleText' in opts ? opts.titleText : null;
      let messageText = opts && 'messageText' in opts ? opts.messageText : null;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let shouldIconPulse = opts && 'shouldIconPulse' in opts ? opts.shouldIconPulse : null;
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let margin = opts && 'margin' in opts ? opts.margin : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
      let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let leftBarIndicatorColor = opts && 'leftBarIndicatorColor' in opts ? opts.leftBarIndicatorColor : null;
      let boxShadows = opts && 'boxShadows' in opts ? opts.boxShadows : null;
      let backgroundGradient = opts && 'backgroundGradient' in opts ? opts.backgroundGradient : null;
      let mainButton = opts && 'mainButton' in opts ? opts.mainButton : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : null;
      let showProgressIndicator = opts && 'showProgressIndicator' in opts ? opts.showProgressIndicator : null;
      let dismissDirection = opts && 'dismissDirection' in opts ? opts.dismissDirection : null;
      let progressIndicatorController = opts && 'progressIndicatorController' in opts ? opts.progressIndicatorController : null;
      let progressIndicatorBackgroundColor = opts && 'progressIndicatorBackgroundColor' in opts ? opts.progressIndicatorBackgroundColor : null;
      let progressIndicatorValueColor = opts && 'progressIndicatorValueColor' in opts ? opts.progressIndicatorValueColor : null;
      let snackStyle = opts && 'snackStyle' in opts ? opts.snackStyle : null;
      let forwardAnimationCurve = opts && 'forwardAnimationCurve' in opts ? opts.forwardAnimationCurve : null;
      let reverseAnimationCurve = opts && 'reverseAnimationCurve' in opts ? opts.reverseAnimationCurve : null;
      let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
      let barBlur = opts && 'barBlur' in opts ? opts.barBlur : null;
      let overlayBlur = opts && 'overlayBlur' in opts ? opts.overlayBlur : null;
      let snackbarStatus = opts && 'snackbarStatus' in opts ? opts.snackbarStatus : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let userInputForm = opts && 'userInputForm' in opts ? opts.userInputForm : null;
      return extension_navigation['ExtensionSnackbar|snackbar'](T, $this, title, message, {colorText: colorText, duration: duration, instantInit: instantInit, snackPosition: snackPosition, titleText: titleText, messageText: messageText, icon: icon, shouldIconPulse: shouldIconPulse, maxWidth: maxWidth, margin: margin, padding: padding, borderRadius: borderRadius, borderColor: borderColor, borderWidth: borderWidth, backgroundColor: backgroundColor, leftBarIndicatorColor: leftBarIndicatorColor, boxShadows: boxShadows, backgroundGradient: backgroundGradient, mainButton: mainButton, onTap: onTap, isDismissible: isDismissible, showProgressIndicator: showProgressIndicator, dismissDirection: dismissDirection, progressIndicatorController: progressIndicatorController, progressIndicatorBackgroundColor: progressIndicatorBackgroundColor, progressIndicatorValueColor: progressIndicatorValueColor, snackStyle: snackStyle, forwardAnimationCurve: forwardAnimationCurve, reverseAnimationCurve: reverseAnimationCurve, animationDuration: animationDuration, barBlur: barBlur, overlayBlur: overlayBlur, snackbarStatus: snackbarStatus, overlayColor: overlayColor, userInputForm: userInputForm});
    }, T$.StringAndString__Tovoid());
  };
  extension_navigation['OverlayExt|showOverlay'] = function OverlayExt$124showOverlay(T, $this, opts) {
    if ($this == null) dart.nullFailed(I[50], 209, 13, "#this");
    let asyncFunction = opts && 'asyncFunction' in opts ? opts.asyncFunction : null;
    if (asyncFunction == null) dart.nullFailed(I[50], 210, 35, "asyncFunction");
    let opacityColor = opts && 'opacityColor' in opts ? opts.opacityColor : C[702] || CT.C702;
    if (opacityColor == null) dart.nullFailed(I[50], 211, 11, "opacityColor");
    let loadingWidget = opts && 'loadingWidget' in opts ? opts.loadingWidget : null;
    let opacity = opts && 'opacity' in opts ? opts.opacity : 0.5;
    if (opacity == null) dart.nullFailed(I[50], 213, 12, "opacity");
    return async.async(T, function* OverlayExt$124showOverlay() {
      let navigatorState = navigator.Navigator.of(dart.nullCheck(extension_navigation['GetNavigation|get#overlayContext'](get_main.Get)), {rootNavigator: false});
      let overlayState = dart.nullCheck(navigatorState.overlay);
      let overlayEntryOpacity = new overlay.OverlayEntry.new({builder: dart.fn(context => {
          if (context == null) dart.nullFailed(I[50], 219, 56, "context");
          return new basic.Opacity.new({opacity: opacity, child: new container.Container.new({color: opacityColor, $creationLocationd_0dea112b090073317d4: C[703] || CT.C703}), $creationLocationd_0dea112b090073317d4: C[706] || CT.C706});
        }, T$.BuildContextToOpacity())});
      let overlayEntryLoader = new overlay.OverlayEntry.new({builder: dart.fn(context => {
          let t46;
          if (context == null) dart.nullFailed(I[50], 226, 55, "context");
          t46 = loadingWidget;
          return t46 == null ? new basic.Center.new({child: new container.Container.new({height: 90.0, width: 90.0, child: new text.Text.new("Loading...", {$creationLocationd_0dea112b090073317d4: C[710] || CT.C710}), $creationLocationd_0dea112b090073317d4: C[713] || CT.C713}), $creationLocationd_0dea112b090073317d4: C[718] || CT.C718}) : t46;
        }, T$.BuildContextToWidget())});
      overlayState.insert(overlayEntryOpacity);
      overlayState.insert(overlayEntryLoader);
      let data = null;
      try {
        data = (yield asyncFunction());
      } catch (e) {
        let _ = dart.getThrown(e);
        if (core.Exception.is(_)) {
          overlayEntryLoader.remove();
          overlayEntryOpacity.remove();
          dart.rethrow(e);
        } else
          throw e;
      }
      overlayEntryLoader.remove();
      overlayEntryOpacity.remove();
      return data;
    });
  };
  extension_navigation['OverlayExt|get#showOverlay'] = function OverlayExt$124get$35showOverlay($this) {
    if ($this == null) dart.nullFailed(I[50], 209, 13, "#this");
    return dart.fn((T, opts) => {
      let asyncFunction = opts && 'asyncFunction' in opts ? opts.asyncFunction : null;
      if (asyncFunction == null) dart.nullFailed(I[50], 210, 35, "asyncFunction");
      let opacityColor = opts && 'opacityColor' in opts ? opts.opacityColor : C[702] || CT.C702;
      if (opacityColor == null) dart.nullFailed(I[50], 211, 11, "opacityColor");
      let loadingWidget = opts && 'loadingWidget' in opts ? opts.loadingWidget : null;
      let opacity = opts && 'opacity' in opts ? opts.opacity : 0.5;
      if (opacity == null) dart.nullFailed(I[50], 213, 12, "opacity");
      return extension_navigation['OverlayExt|showOverlay'](T, $this, {asyncFunction: asyncFunction, opacityColor: opacityColor, loadingWidget: loadingWidget, opacity: opacity});
    }, T$.__ToFutureOfT());
  };
  extension_navigation['ExtensionDialog|dialog'] = function ExtensionDialog$124dialog(T, $this, widget, opts) {
    let t49, t49$, t49$0;
    if ($this == null) dart.nullFailed(I[50], 259, 14, "#this");
    if (widget == null) dart.nullFailed(I[50], 260, 12, "widget");
    let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : true;
    if (barrierDismissible == null) dart.nullFailed(I[50], 261, 10, "barrierDismissible");
    let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : null;
    let useSafeArea = opts && 'useSafeArea' in opts ? opts.useSafeArea : true;
    if (useSafeArea == null) dart.nullFailed(I[50], 263, 10, "useSafeArea");
    let navigatorKey = opts && 'navigatorKey' in opts ? opts.navigatorKey : null;
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
    let transitionCurve = opts && 'transitionCurve' in opts ? opts.transitionCurve : null;
    let name = opts && 'name' in opts ? opts.name : null;
    let routeSettings = opts && 'routeSettings' in opts ? opts.routeSettings : null;
    if (!dart.test(debug$.debugCheckHasMaterialLocalizations(dart.nullCheck(extension_navigation['GetNavigation|get#context']($this))))) dart.assertFailed(null, I[50], 271, 12, "debugCheckHasMaterialLocalizations(context!)");
    let theme = theme$.Theme.of(dart.nullCheck(extension_navigation['GetNavigation|get#context']($this)));
    return extension_navigation['ExtensionDialog|generalDialog'](T, $this, {pageBuilder: dart.fn((buildContext, animation, secondaryAnimation) => {
        if (buildContext == null) dart.nullFailed(I[50], 276, 21, "buildContext");
        if (animation == null) dart.nullFailed(I[50], 276, 35, "animation");
        if (secondaryAnimation == null) dart.nullFailed(I[50], 276, 46, "secondaryAnimation");
        let pageChild = widget;
        let dialog = new basic.Builder.new({builder: dart.fn(context => {
            if (context == null) dart.nullFailed(I[50], 278, 43, "context");
            return new theme$.Theme.new({data: theme, child: pageChild, $creationLocationd_0dea112b090073317d4: C[721] || CT.C721});
          }, T$.BuildContextToTheme()), $creationLocationd_0dea112b090073317d4: C[725] || CT.C725});
        if (dart.test(useSafeArea)) {
          dialog = new safe_area.SafeArea.new({child: dialog, $creationLocationd_0dea112b090073317d4: C[728] || CT.C728});
        }
        return dialog;
      }, T$.BuildContextAndAnimationOfdoubleAndAnimationOfdoubleToWidget()), barrierDismissible: barrierDismissible, barrierLabel: material_localizations.MaterialLocalizations.of(dart.nullCheck(extension_navigation['GetNavigation|get#context']($this))).modalBarrierDismissLabel, barrierColor: (t49 = barrierColor, t49 == null ? colors.Colors.black54 : t49), transitionDuration: (t49$ = transitionDuration, t49$ == null ? extension_navigation['GetNavigation|get#defaultDialogTransitionDuration']($this) : t49$), transitionBuilder: dart.fn((context, animation, secondaryAnimation, child) => {
        let t49;
        if (context == null) dart.nullFailed(I[50], 290, 27, "context");
        if (animation == null) dart.nullFailed(I[50], 290, 36, "animation");
        if (secondaryAnimation == null) dart.nullFailed(I[50], 290, 47, "secondaryAnimation");
        if (child == null) dart.nullFailed(I[50], 290, 67, "child");
        return new transitions.FadeTransition.new({opacity: new animations.CurvedAnimation.new({parent: animation, curve: (t49 = transitionCurve, t49 == null ? extension_navigation['GetNavigation|get#defaultDialogTransitionCurve']($this) : t49)}), child: child, $creationLocationd_0dea112b090073317d4: C[731] || CT.C731});
      }, T$.BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToFadeTransition()), navigatorKey: navigatorKey, routeSettings: (t49$0 = routeSettings, t49$0 == null ? new navigator.RouteSettings.new({arguments: $arguments, name: name}) : t49$0)});
  };
  extension_navigation['ExtensionDialog|get#dialog'] = function ExtensionDialog$124get$35dialog($this) {
    if ($this == null) dart.nullFailed(I[50], 259, 14, "#this");
    return dart.fn((T, widget, opts) => {
      if (widget == null) dart.nullFailed(I[50], 260, 12, "widget");
      let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : true;
      if (barrierDismissible == null) dart.nullFailed(I[50], 261, 10, "barrierDismissible");
      let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : null;
      let useSafeArea = opts && 'useSafeArea' in opts ? opts.useSafeArea : true;
      if (useSafeArea == null) dart.nullFailed(I[50], 263, 10, "useSafeArea");
      let navigatorKey = opts && 'navigatorKey' in opts ? opts.navigatorKey : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
      let transitionCurve = opts && 'transitionCurve' in opts ? opts.transitionCurve : null;
      let name = opts && 'name' in opts ? opts.name : null;
      let routeSettings = opts && 'routeSettings' in opts ? opts.routeSettings : null;
      return extension_navigation['ExtensionDialog|dialog'](T, $this, widget, {barrierDismissible: barrierDismissible, barrierColor: barrierColor, useSafeArea: useSafeArea, navigatorKey: navigatorKey, arguments: $arguments, transitionDuration: transitionDuration, transitionCurve: transitionCurve, name: name, routeSettings: routeSettings});
    }, T$.Widget__ToFutureOfTN());
  };
  extension_navigation['ExtensionDialog|generalDialog'] = function ExtensionDialog$124generalDialog(T, $this, opts) {
    let t51, t51$;
    if ($this == null) dart.nullFailed(I[50], 306, 14, "#this");
    let pageBuilder = opts && 'pageBuilder' in opts ? opts.pageBuilder : null;
    if (pageBuilder == null) dart.nullFailed(I[50], 307, 31, "pageBuilder");
    let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : false;
    if (barrierDismissible == null) dart.nullFailed(I[50], 308, 10, "barrierDismissible");
    let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
    let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : C[610] || CT.C610;
    if (barrierColor == null) dart.nullFailed(I[50], 310, 11, "barrierColor");
    let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : C[611] || CT.C611;
    if (transitionDuration == null) dart.nullFailed(I[50], 311, 14, "transitionDuration");
    let transitionBuilder = opts && 'transitionBuilder' in opts ? opts.transitionBuilder : null;
    let navigatorKey = opts && 'navigatorKey' in opts ? opts.navigatorKey : null;
    let routeSettings = opts && 'routeSettings' in opts ? opts.routeSettings : null;
    if (!(!dart.test(barrierDismissible) || barrierLabel != null)) dart.assertFailed(null, I[50], 316, 12, "!barrierDismissible || barrierLabel != null");
    let nav = (t51$ = (t51 = navigatorKey, t51 == null ? null : t51.currentState), t51$ == null ? navigator.Navigator.of(dart.nullCheck(extension_navigation['GetNavigation|get#overlayContext']($this)), {rootNavigator: true}) : t51$);
    return nav.push(T, new (dialog_route.GetDialogRoute$(T)).new({pageBuilder: pageBuilder, barrierDismissible: barrierDismissible, barrierLabel: barrierLabel, barrierColor: barrierColor, transitionDuration: transitionDuration, transitionBuilder: transitionBuilder, settings: routeSettings}));
  };
  extension_navigation['ExtensionDialog|get#generalDialog'] = function ExtensionDialog$124get$35generalDialog($this) {
    if ($this == null) dart.nullFailed(I[50], 306, 14, "#this");
    return dart.fn((T, opts) => {
      let pageBuilder = opts && 'pageBuilder' in opts ? opts.pageBuilder : null;
      if (pageBuilder == null) dart.nullFailed(I[50], 307, 31, "pageBuilder");
      let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : false;
      if (barrierDismissible == null) dart.nullFailed(I[50], 308, 10, "barrierDismissible");
      let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
      let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : C[610] || CT.C610;
      if (barrierColor == null) dart.nullFailed(I[50], 310, 11, "barrierColor");
      let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : C[611] || CT.C611;
      if (transitionDuration == null) dart.nullFailed(I[50], 311, 14, "transitionDuration");
      let transitionBuilder = opts && 'transitionBuilder' in opts ? opts.transitionBuilder : null;
      let navigatorKey = opts && 'navigatorKey' in opts ? opts.navigatorKey : null;
      let routeSettings = opts && 'routeSettings' in opts ? opts.routeSettings : null;
      return extension_navigation['ExtensionDialog|generalDialog'](T, $this, {pageBuilder: pageBuilder, barrierDismissible: barrierDismissible, barrierLabel: barrierLabel, barrierColor: barrierColor, transitionDuration: transitionDuration, transitionBuilder: transitionBuilder, navigatorKey: navigatorKey, routeSettings: routeSettings});
    }, T$.__ToFutureOfTN());
  };
  extension_navigation['ExtensionDialog|get#defaultDialog'] = function ExtensionDialog$124get$35defaultDialog($this) {
    if ($this == null) dart.nullFailed(I[50], 335, 14, "#this");
    return dart.fn((T, opts) => {
      let title = opts && 'title' in opts ? opts.title : "Alert";
      if (title == null) dart.nullFailed(I[50], 336, 12, "title");
      let titlePadding = opts && 'titlePadding' in opts ? opts.titlePadding : null;
      let titleStyle = opts && 'titleStyle' in opts ? opts.titleStyle : null;
      let content = opts && 'content' in opts ? opts.content : null;
      let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
      let onConfirm = opts && 'onConfirm' in opts ? opts.onConfirm : null;
      let onCancel = opts && 'onCancel' in opts ? opts.onCancel : null;
      let onCustom = opts && 'onCustom' in opts ? opts.onCustom : null;
      let cancelTextColor = opts && 'cancelTextColor' in opts ? opts.cancelTextColor : null;
      let confirmTextColor = opts && 'confirmTextColor' in opts ? opts.confirmTextColor : null;
      let textConfirm = opts && 'textConfirm' in opts ? opts.textConfirm : null;
      let textCancel = opts && 'textCancel' in opts ? opts.textCancel : null;
      let textCustom = opts && 'textCustom' in opts ? opts.textCustom : null;
      let confirm = opts && 'confirm' in opts ? opts.confirm : null;
      let cancel = opts && 'cancel' in opts ? opts.cancel : null;
      let custom = opts && 'custom' in opts ? opts.custom : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : true;
      if (barrierDismissible == null) dart.nullFailed(I[50], 353, 10, "barrierDismissible");
      let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
      let middleText = opts && 'middleText' in opts ? opts.middleText : "Dialog made in 3 lines of code";
      if (middleText == null) dart.nullFailed(I[50], 355, 12, "middleText");
      let middleTextStyle = opts && 'middleTextStyle' in opts ? opts.middleTextStyle : null;
      let radius = opts && 'radius' in opts ? opts.radius : 20;
      if (radius == null) dart.nullFailed(I[50], 357, 12, "radius");
      let actions = opts && 'actions' in opts ? opts.actions : null;
      let onWillPop = opts && 'onWillPop' in opts ? opts.onWillPop : null;
      let navigatorKey = opts && 'navigatorKey' in opts ? opts.navigatorKey : null;
      return extension_navigation['ExtensionDialog|defaultDialog'](T, $this, {title: title, titlePadding: titlePadding, titleStyle: titleStyle, content: content, contentPadding: contentPadding, onConfirm: onConfirm, onCancel: onCancel, onCustom: onCustom, cancelTextColor: cancelTextColor, confirmTextColor: confirmTextColor, textConfirm: textConfirm, textCancel: textCancel, textCustom: textCustom, confirm: confirm, cancel: cancel, custom: custom, backgroundColor: backgroundColor, barrierDismissible: barrierDismissible, buttonColor: buttonColor, middleText: middleText, middleTextStyle: middleTextStyle, radius: radius, actions: actions, onWillPop: onWillPop, navigatorKey: navigatorKey});
    }, T$.__ToFutureOfTN$1());
  };
  extension_navigation['ExtensionDialog|defaultDialog'] = function ExtensionDialog$124defaultDialog(T, $this, opts) {
    let t54, t54$, t54$0, t54$1, t54$2, t54$3, t54$4, t54$5, t54$6, t54$7;
    if ($this == null) dart.nullFailed(I[50], 335, 14, "#this");
    let title = opts && 'title' in opts ? opts.title : "Alert";
    if (title == null) dart.nullFailed(I[50], 336, 12, "title");
    let titlePadding = opts && 'titlePadding' in opts ? opts.titlePadding : null;
    let titleStyle = opts && 'titleStyle' in opts ? opts.titleStyle : null;
    let content = opts && 'content' in opts ? opts.content : null;
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    let onConfirm = opts && 'onConfirm' in opts ? opts.onConfirm : null;
    let onCancel = opts && 'onCancel' in opts ? opts.onCancel : null;
    let onCustom = opts && 'onCustom' in opts ? opts.onCustom : null;
    let cancelTextColor = opts && 'cancelTextColor' in opts ? opts.cancelTextColor : null;
    let confirmTextColor = opts && 'confirmTextColor' in opts ? opts.confirmTextColor : null;
    let textConfirm = opts && 'textConfirm' in opts ? opts.textConfirm : null;
    let textCancel = opts && 'textCancel' in opts ? opts.textCancel : null;
    let textCustom = opts && 'textCustom' in opts ? opts.textCustom : null;
    let confirm = opts && 'confirm' in opts ? opts.confirm : null;
    let cancel = opts && 'cancel' in opts ? opts.cancel : null;
    let custom = opts && 'custom' in opts ? opts.custom : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : true;
    if (barrierDismissible == null) dart.nullFailed(I[50], 353, 10, "barrierDismissible");
    let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
    let middleText = opts && 'middleText' in opts ? opts.middleText : "Dialog made in 3 lines of code";
    if (middleText == null) dart.nullFailed(I[50], 355, 12, "middleText");
    let middleTextStyle = opts && 'middleTextStyle' in opts ? opts.middleTextStyle : null;
    let radius = opts && 'radius' in opts ? opts.radius : 20;
    if (radius == null) dart.nullFailed(I[50], 357, 12, "radius");
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let onWillPop = opts && 'onWillPop' in opts ? opts.onWillPop : null;
    let navigatorKey = opts && 'navigatorKey' in opts ? opts.navigatorKey : null;
    let leanCancel = onCancel != null || textCancel != null;
    let leanConfirm = onConfirm != null || textConfirm != null;
    actions == null ? actions = T$.JSArrayOfWidget().of([]) : null;
    if (cancel != null) {
      actions[$add](cancel);
    } else {
      if (leanCancel) {
        actions[$add](new text_button.TextButton.new({style: text_button.TextButton.styleFrom({tapTargetSize: theme_data.MaterialTapTargetSize.shrinkWrap, padding: new edge_insets.EdgeInsets.symmetric({horizontal: 10.0, vertical: 8.0}), shape: new rounded_rectangle_border.RoundedRectangleBorder.new({side: new borders.BorderSide.new({color: (t54 = buttonColor, t54 == null ? extension_navigation['GetNavigation|get#theme']($this).accentColor : t54), width: 2.0, style: borders.BorderStyle.solid}), borderRadius: new border_radius.BorderRadius.circular(100.0)})}), onPressed: dart.fn(() => {
            let t54;
            t54 = onCancel;
            t54 == null ? null : t54();
            extension_navigation['GetNavigation|back'](dart.dynamic, $this);
          }, T$.VoidTovoid()), child: new text.Text.new((t54$ = textCancel, t54$ == null ? "Cancel" : t54$), {style: new text_style.TextStyle.new({color: (t54$0 = cancelTextColor, t54$0 == null ? extension_navigation['GetNavigation|get#theme']($this).accentColor : t54$0)}), $creationLocationd_0dea112b090073317d4: C[735] || CT.C735}), $creationLocationd_0dea112b090073317d4: C[739] || CT.C739}));
      }
    }
    if (confirm != null) {
      actions[$add](confirm);
    } else {
      if (leanConfirm) {
        actions[$add](new text_button.TextButton.new({style: text_button.TextButton.styleFrom({tapTargetSize: theme_data.MaterialTapTargetSize.shrinkWrap, backgroundColor: (t54$1 = buttonColor, t54$1 == null ? extension_navigation['GetNavigation|get#theme']($this).accentColor : t54$1), shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(100.0)})}), child: new text.Text.new((t54$2 = textConfirm, t54$2 == null ? "Ok" : t54$2), {style: new text_style.TextStyle.new({color: (t54$3 = confirmTextColor, t54$3 == null ? extension_navigation['GetNavigation|get#theme']($this).backgroundColor : t54$3)}), $creationLocationd_0dea112b090073317d4: C[744] || CT.C744}), onPressed: dart.fn(() => {
            let t54;
            t54 = onConfirm;
            t54 == null ? null : t54();
          }, T$.VoidTovoid()), $creationLocationd_0dea112b090073317d4: C[748] || CT.C748}));
      }
    }
    let baseAlertDialog = new dialog.AlertDialog.new({titlePadding: (t54$4 = titlePadding, t54$4 == null ? new edge_insets.EdgeInsets.all(8.0) : t54$4), contentPadding: (t54$5 = contentPadding, t54$5 == null ? new edge_insets.EdgeInsets.all(8.0) : t54$5), backgroundColor: (t54$6 = backgroundColor, t54$6 == null ? extension_navigation['GetNavigation|get#theme']($this).dialogBackgroundColor : t54$6), shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(radius))}), title: new text.Text.new(title, {textAlign: ui.TextAlign.center, style: titleStyle, $creationLocationd_0dea112b090073317d4: C[753] || CT.C753}), content: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.center, mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([(t54$7 = content, t54$7 == null ? new text.Text.new(middleText, {textAlign: ui.TextAlign.center, style: middleTextStyle, $creationLocationd_0dea112b090073317d4: C[758] || CT.C758}) : t54$7), new basic.SizedBox.new({height: 16.0, $creationLocationd_0dea112b090073317d4: C[763] || CT.C763}), new button_theme.ButtonTheme.new({minWidth: 78.0, height: 34.0, child: new basic.Wrap.new({alignment: wrap.WrapAlignment.center, spacing: 8.0, runSpacing: 8.0, children: actions, $creationLocationd_0dea112b090073317d4: C[766] || CT.C766}), $creationLocationd_0dea112b090073317d4: C[772] || CT.C772})]), $creationLocationd_0dea112b090073317d4: C[777] || CT.C777}), buttonPadding: edge_insets.EdgeInsets.zero, $creationLocationd_0dea112b090073317d4: C[782] || CT.C782});
    return extension_navigation['ExtensionDialog|dialog'](T, $this, onWillPop != null ? new will_pop_scope.WillPopScope.new({onWillPop: onWillPop, child: baseAlertDialog, $creationLocationd_0dea112b090073317d4: C[791] || CT.C791}) : baseAlertDialog, {barrierDismissible: barrierDismissible, navigatorKey: navigatorKey});
  };
  extension_navigation['ExtensionBottomSheet|bottomSheet'] = function ExtensionBottomSheet$124bottomSheet(T, $this, bottomsheet, opts) {
    let t55, t55$, t55$0, t55$1;
    if ($this == null) dart.nullFailed(I[50], 465, 14, "#this");
    if (bottomsheet == null) dart.nullFailed(I[50], 466, 12, "bottomsheet");
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let persistent = opts && 'persistent' in opts ? opts.persistent : true;
    if (persistent == null) dart.nullFailed(I[50], 469, 10, "persistent");
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : null;
    let ignoreSafeArea = opts && 'ignoreSafeArea' in opts ? opts.ignoreSafeArea : null;
    let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : false;
    if (isScrollControlled == null) dart.nullFailed(I[50], 474, 10, "isScrollControlled");
    let useRootNavigator = opts && 'useRootNavigator' in opts ? opts.useRootNavigator : false;
    if (useRootNavigator == null) dart.nullFailed(I[50], 475, 10, "useRootNavigator");
    let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
    if (isDismissible == null) dart.nullFailed(I[50], 476, 10, "isDismissible");
    let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
    if (enableDrag == null) dart.nullFailed(I[50], 477, 10, "enableDrag");
    let settings = opts && 'settings' in opts ? opts.settings : null;
    let enterBottomSheetDuration = opts && 'enterBottomSheetDuration' in opts ? opts.enterBottomSheetDuration : null;
    let exitBottomSheetDuration = opts && 'exitBottomSheetDuration' in opts ? opts.exitBottomSheetDuration : null;
    return navigator.Navigator.of(dart.nullCheck(extension_navigation['GetNavigation|get#overlayContext']($this)), {rootNavigator: useRootNavigator}).push(T, new (bottomsheet$.GetModalBottomSheetRoute$(T)).new({builder: dart.fn(_ => {
        if (_ == null) dart.nullFailed(I[50], 484, 17, "_");
        return bottomsheet;
      }, T$.BuildContextToWidget()), isPersistent: persistent, theme: theme$.Theme.of(dart.nullCheck(extension_navigation['GetNavigation|get#key']($this).currentContext)), isScrollControlled: isScrollControlled, barrierLabel: material_localizations.MaterialLocalizations.of(dart.nullCheck(extension_navigation['GetNavigation|get#key']($this).currentContext)).modalBarrierDismissLabel, backgroundColor: (t55 = backgroundColor, t55 == null ? colors.Colors.transparent : t55), elevation: elevation, shape: shape, removeTop: (t55$ = ignoreSafeArea, t55$ == null ? true : t55$), clipBehavior: clipBehavior, isDismissible: isDismissible, modalBarrierColor: barrierColor, settings: settings, enableDrag: enableDrag, enterBottomSheetDuration: (t55$0 = enterBottomSheetDuration, t55$0 == null ? C[795] || CT.C795 : t55$0), exitBottomSheetDuration: (t55$1 = exitBottomSheetDuration, t55$1 == null ? C[611] || CT.C611 : t55$1)}));
  };
  extension_navigation['ExtensionBottomSheet|get#bottomSheet'] = function ExtensionBottomSheet$124get$35bottomSheet($this) {
    if ($this == null) dart.nullFailed(I[50], 465, 14, "#this");
    return dart.fn((T, bottomsheet, opts) => {
      if (bottomsheet == null) dart.nullFailed(I[50], 466, 12, "bottomsheet");
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let persistent = opts && 'persistent' in opts ? opts.persistent : true;
      if (persistent == null) dart.nullFailed(I[50], 469, 10, "persistent");
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : null;
      let ignoreSafeArea = opts && 'ignoreSafeArea' in opts ? opts.ignoreSafeArea : null;
      let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : false;
      if (isScrollControlled == null) dart.nullFailed(I[50], 474, 10, "isScrollControlled");
      let useRootNavigator = opts && 'useRootNavigator' in opts ? opts.useRootNavigator : false;
      if (useRootNavigator == null) dart.nullFailed(I[50], 475, 10, "useRootNavigator");
      let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
      if (isDismissible == null) dart.nullFailed(I[50], 476, 10, "isDismissible");
      let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
      if (enableDrag == null) dart.nullFailed(I[50], 477, 10, "enableDrag");
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let enterBottomSheetDuration = opts && 'enterBottomSheetDuration' in opts ? opts.enterBottomSheetDuration : null;
      let exitBottomSheetDuration = opts && 'exitBottomSheetDuration' in opts ? opts.exitBottomSheetDuration : null;
      return extension_navigation['ExtensionBottomSheet|bottomSheet'](T, $this, bottomsheet, {backgroundColor: backgroundColor, elevation: elevation, persistent: persistent, shape: shape, clipBehavior: clipBehavior, barrierColor: barrierColor, ignoreSafeArea: ignoreSafeArea, isScrollControlled: isScrollControlled, useRootNavigator: useRootNavigator, isDismissible: isDismissible, enableDrag: enableDrag, settings: settings, enterBottomSheetDuration: enterBottomSheetDuration, exitBottomSheetDuration: exitBottomSheetDuration});
    }, T$.Widget__ToFutureOfTN$1());
  };
  extension_navigation['GetNavigation|to'] = function GetNavigation$124to(T, $this, page, opts) {
    let t58, t58$, t58$0, t58$1, t58$2, t57;
    if ($this == null) dart.nullFailed(I[50], 535, 15, "#this");
    let opaque = opts && 'opaque' in opts ? opts.opaque : null;
    let transition = opts && 'transition' in opts ? opts.transition : null;
    let curve = opts && 'curve' in opts ? opts.curve : null;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let id = opts && 'id' in opts ? opts.id : null;
    let routeName = opts && 'routeName' in opts ? opts.routeName : null;
    let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
    if (fullscreenDialog == null) dart.nullFailed(I[50], 543, 10, "fullscreenDialog");
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let binding = opts && 'binding' in opts ? opts.binding : null;
    let preventDuplicates = opts && 'preventDuplicates' in opts ? opts.preventDuplicates : true;
    if (preventDuplicates == null) dart.nullFailed(I[50], 546, 10, "preventDuplicates");
    let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
    let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
    routeName == null ? routeName = "/" + dart.str(dart.runtimeType(page)) : null;
    routeName = extension_navigation['GetNavigation|_cleanRouteName']($this, routeName);
    if (dart.test(preventDuplicates) && routeName == extension_navigation['GetNavigation|get#currentRoute']($this)) {
      return null;
    }
    t57 = extension_navigation['GetNavigation|global']($this, id).currentState;
    return t57 == null ? null : t57.push(T, new (default_route.GetPageRoute$(T)).new({opaque: (t58 = opaque, t58 == null ? true : t58), page: extension_navigation['GetNavigation|_resolvePage']($this, page, "to"), routeName: routeName, gestureWidth: gestureWidth, settings: new navigator.RouteSettings.new({name: routeName, arguments: $arguments}), popGesture: (t58$ = popGesture, t58$ == null ? extension_navigation['GetNavigation|get#defaultPopGesture']($this) : t58$), transition: (t58$0 = transition, t58$0 == null ? extension_navigation['GetNavigation|get#defaultTransition']($this) : t58$0), curve: (t58$1 = curve, t58$1 == null ? extension_navigation['GetNavigation|get#defaultTransitionCurve']($this) : t58$1), fullscreenDialog: fullscreenDialog, binding: binding, transitionDuration: (t58$2 = duration, t58$2 == null ? extension_navigation['GetNavigation|get#defaultTransitionDuration']($this) : t58$2)}));
  };
  extension_navigation['GetNavigation|get#to'] = function GetNavigation$124get$35to($this) {
    if ($this == null) dart.nullFailed(I[50], 535, 15, "#this");
    return dart.fn((T, page, opts) => {
      let opaque = opts && 'opaque' in opts ? opts.opaque : null;
      let transition = opts && 'transition' in opts ? opts.transition : null;
      let curve = opts && 'curve' in opts ? opts.curve : null;
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let id = opts && 'id' in opts ? opts.id : null;
      let routeName = opts && 'routeName' in opts ? opts.routeName : null;
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      if (fullscreenDialog == null) dart.nullFailed(I[50], 543, 10, "fullscreenDialog");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let binding = opts && 'binding' in opts ? opts.binding : null;
      let preventDuplicates = opts && 'preventDuplicates' in opts ? opts.preventDuplicates : true;
      if (preventDuplicates == null) dart.nullFailed(I[50], 546, 10, "preventDuplicates");
      let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
      let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
      return extension_navigation['GetNavigation|to'](T, $this, page, {opaque: opaque, transition: transition, curve: curve, duration: duration, id: id, routeName: routeName, fullscreenDialog: fullscreenDialog, arguments: $arguments, binding: binding, preventDuplicates: preventDuplicates, popGesture: popGesture, gestureWidth: gestureWidth});
    }, T$.dynamic__ToFutureNOfTN());
  };
  extension_navigation['GetNavigation|_resolvePage'] = function GetNavigation$124_resolvePage($this, page, method) {
    let t60, t59;
    if ($this == null) dart.nullFailed(I[50], 576, 18, "#this");
    if (method == null) dart.nullFailed(I[50], 576, 52, "method");
    if (T$.VoidToWidget().is(page)) {
      return page;
    } else if (framework.Widget.is(page)) {
      t59 = get_main.Get;
      t60 = "WARNING, consider using: \"Get." + dart.str(method) + "(() => Page())\" instead of \"Get." + dart.str(method) + "(Page())\".\nUsing a widget function instead of a widget fully guarantees that the widget and its controllers will be removed from memory when they are no longer used.\n      ";
      t59.log(t60);
      return dart.fn(() => page, T$.VoidToWidget());
    } else if (typeof page == 'string') {
      dart.throw("Unexpected String,\nuse toNamed() instead");
    } else {
      dart.throw("Unexpected format,\nyou can only use widgets and widget functions here");
    }
  };
  extension_navigation['GetNavigation|get#_resolvePage'] = function GetNavigation$124get$35_resolvePage($this) {
    if ($this == null) dart.nullFailed(I[50], 576, 18, "#this");
    return dart.fn((page, method) => {
      if (method == null) dart.nullFailed(I[50], 576, 52, "method");
      return extension_navigation['GetNavigation|_resolvePage']($this, page, method);
    }, T$.dynamicAndStringToFn());
  };
  extension_navigation['GetNavigation|toNamed'] = function GetNavigation$124toNamed(T, $this, page, opts) {
    let t61;
    if ($this == null) dart.nullFailed(I[50], 610, 15, "#this");
    if (page == null) dart.nullFailed(I[50], 611, 12, "page");
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let id = opts && 'id' in opts ? opts.id : null;
    let preventDuplicates = opts && 'preventDuplicates' in opts ? opts.preventDuplicates : true;
    if (preventDuplicates == null) dart.nullFailed(I[50], 614, 10, "preventDuplicates");
    let parameters = opts && 'parameters' in opts ? opts.parameters : null;
    if (dart.test(preventDuplicates) && page == extension_navigation['GetNavigation|get#currentRoute']($this)) {
      return null;
    }
    if (parameters != null) {
      let uri = core._Uri.new({path: page, queryParameters: parameters});
      page = dart.toString(uri);
    }
    t61 = extension_navigation['GetNavigation|global']($this, id).currentState;
    return t61 == null ? null : t61.pushNamed(T, page, {arguments: $arguments});
  };
  extension_navigation['GetNavigation|get#toNamed'] = function GetNavigation$124get$35toNamed($this) {
    if ($this == null) dart.nullFailed(I[50], 610, 15, "#this");
    return dart.fn((T, page, opts) => {
      if (page == null) dart.nullFailed(I[50], 611, 12, "page");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let id = opts && 'id' in opts ? opts.id : null;
      let preventDuplicates = opts && 'preventDuplicates' in opts ? opts.preventDuplicates : true;
      if (preventDuplicates == null) dart.nullFailed(I[50], 614, 10, "preventDuplicates");
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      return extension_navigation['GetNavigation|toNamed'](T, $this, page, {arguments: $arguments, id: id, preventDuplicates: preventDuplicates, parameters: parameters});
    }, T$.String__ToFutureNOfTN());
  };
  extension_navigation['GetNavigation|offNamed'] = function GetNavigation$124offNamed(T, $this, page, opts) {
    let t63;
    if ($this == null) dart.nullFailed(I[50], 648, 15, "#this");
    if (page == null) dart.nullFailed(I[50], 649, 12, "page");
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let id = opts && 'id' in opts ? opts.id : null;
    let preventDuplicates = opts && 'preventDuplicates' in opts ? opts.preventDuplicates : true;
    if (preventDuplicates == null) dart.nullFailed(I[50], 652, 10, "preventDuplicates");
    let parameters = opts && 'parameters' in opts ? opts.parameters : null;
    if (dart.test(preventDuplicates) && page == extension_navigation['GetNavigation|get#currentRoute']($this)) {
      return null;
    }
    if (parameters != null) {
      let uri = core._Uri.new({path: page, queryParameters: parameters});
      page = dart.toString(uri);
    }
    t63 = extension_navigation['GetNavigation|global']($this, id).currentState;
    return t63 == null ? null : t63.pushReplacementNamed(T, T$.ObjectN(), page, {arguments: $arguments});
  };
  extension_navigation['GetNavigation|get#offNamed'] = function GetNavigation$124get$35offNamed($this) {
    if ($this == null) dart.nullFailed(I[50], 648, 15, "#this");
    return dart.fn((T, page, opts) => {
      if (page == null) dart.nullFailed(I[50], 649, 12, "page");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let id = opts && 'id' in opts ? opts.id : null;
      let preventDuplicates = opts && 'preventDuplicates' in opts ? opts.preventDuplicates : true;
      if (preventDuplicates == null) dart.nullFailed(I[50], 652, 10, "preventDuplicates");
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      return extension_navigation['GetNavigation|offNamed'](T, $this, page, {arguments: $arguments, id: id, preventDuplicates: preventDuplicates, parameters: parameters});
    }, T$.String__ToFutureNOfTN());
  };
  extension_navigation['GetNavigation|until'] = function GetNavigation$124until($this, predicate, opts) {
    let t65;
    if ($this == null) dart.nullFailed(I[50], 682, 8, "#this");
    if (predicate == null) dart.nullFailed(I[50], 682, 29, "predicate");
    let id = opts && 'id' in opts ? opts.id : null;
    t65 = extension_navigation['GetNavigation|global']($this, id).currentState;
    return t65 == null ? null : t65.popUntil(predicate);
  };
  extension_navigation['GetNavigation|get#until'] = function GetNavigation$124get$35until($this) {
    if ($this == null) dart.nullFailed(I[50], 682, 8, "#this");
    return dart.fn((predicate, opts) => {
      if (predicate == null) dart.nullFailed(I[50], 682, 29, "predicate");
      let id = opts && 'id' in opts ? opts.id : null;
      return extension_navigation['GetNavigation|until']($this, predicate, {id: id});
    }, T$.Fn__Tovoid());
  };
  extension_navigation['GetNavigation|offUntil'] = function GetNavigation$124offUntil(T, $this, page, predicate, opts) {
    let t67;
    if ($this == null) dart.nullFailed(I[50], 706, 15, "#this");
    if (page == null) dart.nullFailed(I[50], 706, 36, "page");
    if (predicate == null) dart.nullFailed(I[50], 706, 57, "predicate");
    let id = opts && 'id' in opts ? opts.id : null;
    t67 = extension_navigation['GetNavigation|global']($this, id).currentState;
    return t67 == null ? null : t67.pushAndRemoveUntil(T, page, predicate);
  };
  extension_navigation['GetNavigation|get#offUntil'] = function GetNavigation$124get$35offUntil($this) {
    if ($this == null) dart.nullFailed(I[50], 706, 15, "#this");
    return dart.fn((T, page, predicate, opts) => {
      if (page == null) dart.nullFailed(I[50], 706, 36, "page");
      if (predicate == null) dart.nullFailed(I[50], 706, 57, "predicate");
      let id = opts && 'id' in opts ? opts.id : null;
      return extension_navigation['GetNavigation|offUntil'](T, $this, page, predicate, {id: id});
    }, T$.RouteOfTAndFn__ToFutureNOfTN());
  };
  extension_navigation['GetNavigation|offNamedUntil'] = function GetNavigation$124offNamedUntil(T, $this, page, predicate, opts) {
    let t69;
    if ($this == null) dart.nullFailed(I[50], 730, 15, "#this");
    if (page == null) dart.nullFailed(I[50], 731, 12, "page");
    if (predicate == null) dart.nullFailed(I[50], 732, 20, "predicate");
    let id = opts && 'id' in opts ? opts.id : null;
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let parameters = opts && 'parameters' in opts ? opts.parameters : null;
    if (parameters != null) {
      let uri = core._Uri.new({path: page, queryParameters: parameters});
      page = dart.toString(uri);
    }
    t69 = extension_navigation['GetNavigation|global']($this, id).currentState;
    return t69 == null ? null : t69.pushNamedAndRemoveUntil(T, page, predicate, {arguments: $arguments});
  };
  extension_navigation['GetNavigation|get#offNamedUntil'] = function GetNavigation$124get$35offNamedUntil($this) {
    if ($this == null) dart.nullFailed(I[50], 730, 15, "#this");
    return dart.fn((T, page, predicate, opts) => {
      if (page == null) dart.nullFailed(I[50], 731, 12, "page");
      if (predicate == null) dart.nullFailed(I[50], 732, 20, "predicate");
      let id = opts && 'id' in opts ? opts.id : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      return extension_navigation['GetNavigation|offNamedUntil'](T, $this, page, predicate, {id: id, arguments: $arguments, parameters: parameters});
    }, T$.StringAndFn__ToFutureNOfTN());
  };
  extension_navigation['GetNavigation|offAndToNamed'] = function GetNavigation$124offAndToNamed(T, $this, page, opts) {
    let t71;
    if ($this == null) dart.nullFailed(I[50], 760, 15, "#this");
    if (page == null) dart.nullFailed(I[50], 761, 12, "page");
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let id = opts && 'id' in opts ? opts.id : null;
    let result = opts && 'result' in opts ? opts.result : null;
    let parameters = opts && 'parameters' in opts ? opts.parameters : null;
    if (parameters != null) {
      let uri = core._Uri.new({path: page, queryParameters: parameters});
      page = dart.toString(uri);
    }
    t71 = extension_navigation['GetNavigation|global']($this, id).currentState;
    return t71 == null ? null : t71.popAndPushNamed(T, core.Object, page, {arguments: $arguments, result: result});
  };
  extension_navigation['GetNavigation|get#offAndToNamed'] = function GetNavigation$124get$35offAndToNamed($this) {
    if ($this == null) dart.nullFailed(I[50], 760, 15, "#this");
    return dart.fn((T, page, opts) => {
      if (page == null) dart.nullFailed(I[50], 761, 12, "page");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let id = opts && 'id' in opts ? opts.id : null;
      let result = opts && 'result' in opts ? opts.result : null;
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      return extension_navigation['GetNavigation|offAndToNamed'](T, $this, page, {arguments: $arguments, id: id, result: result, parameters: parameters});
    }, T$.String__ToFutureNOfTN$1());
  };
  extension_navigation['GetNavigation|removeRoute'] = function GetNavigation$124removeRoute($this, route, opts) {
    let t73;
    if ($this == null) dart.nullFailed(I[50], 784, 8, "#this");
    if (route == null) dart.nullFailed(I[50], 784, 35, "route");
    let id = opts && 'id' in opts ? opts.id : null;
    t73 = extension_navigation['GetNavigation|global']($this, id).currentState;
    return t73 == null ? null : t73.removeRoute(route);
  };
  extension_navigation['GetNavigation|get#removeRoute'] = function GetNavigation$124get$35removeRoute($this) {
    if ($this == null) dart.nullFailed(I[50], 784, 8, "#this");
    return dart.fn((route, opts) => {
      if (route == null) dart.nullFailed(I[50], 784, 35, "route");
      let id = opts && 'id' in opts ? opts.id : null;
      return extension_navigation['GetNavigation|removeRoute']($this, route, {id: id});
    }, T$.Route__Tovoid());
  };
  extension_navigation['GetNavigation|offAllNamed'] = function GetNavigation$124offAllNamed(T, $this, newRouteName, opts) {
    let t76, t75;
    if ($this == null) dart.nullFailed(I[50], 808, 15, "#this");
    if (newRouteName == null) dart.nullFailed(I[50], 809, 12, "newRouteName");
    let predicate = opts && 'predicate' in opts ? opts.predicate : null;
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let id = opts && 'id' in opts ? opts.id : null;
    let parameters = opts && 'parameters' in opts ? opts.parameters : null;
    if (parameters != null) {
      let uri = core._Uri.new({path: newRouteName, queryParameters: parameters});
      newRouteName = dart.toString(uri);
    }
    t75 = extension_navigation['GetNavigation|global']($this, id).currentState;
    return t75 == null ? null : t75.pushNamedAndRemoveUntil(T, newRouteName, (t76 = predicate, t76 == null ? dart.fn(_ => {
      if (_ == null) dart.nullFailed(I[50], 822, 25, "_");
      return false;
    }, T$.RouteTobool()) : t76), {arguments: $arguments});
  };
  extension_navigation['GetNavigation|get#offAllNamed'] = function GetNavigation$124get$35offAllNamed($this) {
    if ($this == null) dart.nullFailed(I[50], 808, 15, "#this");
    return dart.fn((T, newRouteName, opts) => {
      if (newRouteName == null) dart.nullFailed(I[50], 809, 12, "newRouteName");
      let predicate = opts && 'predicate' in opts ? opts.predicate : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let id = opts && 'id' in opts ? opts.id : null;
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      return extension_navigation['GetNavigation|offAllNamed'](T, $this, newRouteName, {predicate: predicate, arguments: $arguments, id: id, parameters: parameters});
    }, T$.String__ToFutureNOfTN$2());
  };
  extension_navigation['GetNavigation|get#isOverlaysOpen'] = function GetNavigation$124get$35isOverlaysOpen($this) {
    if ($this == null) dart.nullFailed(I[50], 828, 12, "#this");
    return dart.nullCheck(extension_navigation['GetNavigation|get#isSnackbarOpen']($this)) || dart.nullCheck(extension_navigation['GetNavigation|get#isDialogOpen']($this)) || dart.nullCheck(extension_navigation['GetNavigation|get#isBottomSheetOpen']($this));
  };
  extension_navigation['GetNavigation|get#isOverlaysClosed'] = function GetNavigation$124get$35isOverlaysClosed($this) {
    if ($this == null) dart.nullFailed(I[50], 832, 12, "#this");
    return !dart.nullCheck(extension_navigation['GetNavigation|get#isSnackbarOpen']($this)) && !dart.nullCheck(extension_navigation['GetNavigation|get#isDialogOpen']($this)) && !dart.nullCheck(extension_navigation['GetNavigation|get#isBottomSheetOpen']($this));
  };
  extension_navigation['GetNavigation|back'] = function GetNavigation$124back(T, $this, opts) {
    let t79, t79$, t79$0, t79$1;
    if ($this == null) dart.nullFailed(I[50], 847, 8, "#this");
    let result = opts && 'result' in opts ? opts.result : null;
    let closeOverlays = opts && 'closeOverlays' in opts ? opts.closeOverlays : false;
    if (closeOverlays == null) dart.nullFailed(I[50], 849, 10, "closeOverlays");
    let canPop = opts && 'canPop' in opts ? opts.canPop : true;
    if (canPop == null) dart.nullFailed(I[50], 850, 10, "canPop");
    let id = opts && 'id' in opts ? opts.id : null;
    if (dart.test(closeOverlays) && dart.test(extension_navigation['GetNavigation|get#isOverlaysOpen']($this))) {
      t79 = extension_navigation.navigator;
      t79 == null ? null : t79.popUntil(dart.fn(route => {
        if (route == null) dart.nullFailed(I[50], 854, 28, "route");
        return extension_navigation['GetNavigation|get#isOverlaysClosed']($this);
      }, T$.RouteTobool()));
    }
    if (dart.test(canPop)) {
      if ((t79$ = extension_navigation['GetNavigation|global']($this, id).currentState, t79$ == null ? null : t79$.canPop()) === true) {
        t79$0 = extension_navigation['GetNavigation|global']($this, id).currentState;
        t79$0 == null ? null : t79$0.pop(T, result);
      }
    } else {
      t79$1 = extension_navigation['GetNavigation|global']($this, id).currentState;
      t79$1 == null ? null : t79$1.pop(T, result);
    }
  };
  extension_navigation['GetNavigation|get#back'] = function GetNavigation$124get$35back($this) {
    if ($this == null) dart.nullFailed(I[50], 847, 8, "#this");
    return dart.fn((T, opts) => {
      let result = opts && 'result' in opts ? opts.result : null;
      let closeOverlays = opts && 'closeOverlays' in opts ? opts.closeOverlays : false;
      if (closeOverlays == null) dart.nullFailed(I[50], 849, 10, "closeOverlays");
      let canPop = opts && 'canPop' in opts ? opts.canPop : true;
      if (canPop == null) dart.nullFailed(I[50], 850, 10, "canPop");
      let id = opts && 'id' in opts ? opts.id : null;
      return extension_navigation['GetNavigation|back'](T, $this, {result: result, closeOverlays: closeOverlays, canPop: canPop, id: id});
    }, T$.__Tovoid$1());
  };
  extension_navigation['GetNavigation|close'] = function GetNavigation$124close($this, times, id = null) {
    let t81;
    if ($this == null) dart.nullFailed(I[50], 873, 8, "#this");
    if (times == null) dart.nullFailed(I[50], 873, 18, "times");
    if (dart.notNull(times) < 1) {
      times = 1;
    }
    let count = 0;
    let back = (t81 = extension_navigation['GetNavigation|global']($this, id).currentState, t81 == null ? null : t81.popUntil(dart.fn(route => {
      let t82;
      if (route == null) dart.nullFailed(I[50], 878, 51, "route");
      return (t82 = count, count = t82 + 1, t82) === times;
    }, T$.RouteTobool())));
    return back;
  };
  extension_navigation['GetNavigation|get#close'] = function GetNavigation$124get$35close($this) {
    if ($this == null) dart.nullFailed(I[50], 873, 8, "#this");
    return dart.fn((times, id = null) => {
      if (times == null) dart.nullFailed(I[50], 873, 18, "times");
      return extension_navigation['GetNavigation|close']($this, times, id);
    }, T$.intAndintNTovoid());
  };
  extension_navigation['GetNavigation|get#off'] = function GetNavigation$124get$35off($this) {
    if ($this == null) dart.nullFailed(I[50], 908, 15, "#this");
    return dart.fn((T, page, opts) => {
      let opaque = opts && 'opaque' in opts ? opts.opaque : false;
      if (opaque == null) dart.nullFailed(I[50], 910, 10, "opaque");
      let transition = opts && 'transition' in opts ? opts.transition : null;
      let curve = opts && 'curve' in opts ? opts.curve : null;
      let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
      let id = opts && 'id' in opts ? opts.id : null;
      let routeName = opts && 'routeName' in opts ? opts.routeName : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let binding = opts && 'binding' in opts ? opts.binding : null;
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      if (fullscreenDialog == null) dart.nullFailed(I[50], 918, 10, "fullscreenDialog");
      let preventDuplicates = opts && 'preventDuplicates' in opts ? opts.preventDuplicates : true;
      if (preventDuplicates == null) dart.nullFailed(I[50], 919, 10, "preventDuplicates");
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
      return extension_navigation['GetNavigation|off'](T, $this, page, {opaque: opaque, transition: transition, curve: curve, popGesture: popGesture, id: id, routeName: routeName, arguments: $arguments, binding: binding, fullscreenDialog: fullscreenDialog, preventDuplicates: preventDuplicates, duration: duration, gestureWidth: gestureWidth});
    }, T$.dynamic__ToFutureNOfTN$1());
  };
  extension_navigation['GetNavigation|off'] = function GetNavigation$124off(T, $this, page, opts) {
    let t85, t85$, t85$0, t85$1, t84;
    if ($this == null) dart.nullFailed(I[50], 908, 15, "#this");
    let opaque = opts && 'opaque' in opts ? opts.opaque : false;
    if (opaque == null) dart.nullFailed(I[50], 910, 10, "opaque");
    let transition = opts && 'transition' in opts ? opts.transition : null;
    let curve = opts && 'curve' in opts ? opts.curve : null;
    let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
    let id = opts && 'id' in opts ? opts.id : null;
    let routeName = opts && 'routeName' in opts ? opts.routeName : null;
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let binding = opts && 'binding' in opts ? opts.binding : null;
    let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
    if (fullscreenDialog == null) dart.nullFailed(I[50], 918, 10, "fullscreenDialog");
    let preventDuplicates = opts && 'preventDuplicates' in opts ? opts.preventDuplicates : true;
    if (preventDuplicates == null) dart.nullFailed(I[50], 919, 10, "preventDuplicates");
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
    routeName == null ? routeName = "/" + dart.str(dart.toString(dart.runtimeType(page))) : null;
    routeName = extension_navigation['GetNavigation|_cleanRouteName']($this, routeName);
    if (dart.test(preventDuplicates) && routeName == extension_navigation['GetNavigation|get#currentRoute']($this)) {
      return null;
    }
    t84 = extension_navigation['GetNavigation|global']($this, id).currentState;
    return t84 == null ? null : t84.pushReplacement(T, T$.ObjectN(), new (default_route.GetPageRoute$(T)).new({opaque: opaque, gestureWidth: gestureWidth, page: extension_navigation['GetNavigation|_resolvePage']($this, page, "off"), binding: binding, settings: new navigator.RouteSettings.new({arguments: $arguments, name: routeName}), routeName: routeName, fullscreenDialog: fullscreenDialog, popGesture: (t85 = popGesture, t85 == null ? extension_navigation['GetNavigation|get#defaultPopGesture']($this) : t85), transition: (t85$ = transition, t85$ == null ? extension_navigation['GetNavigation|get#defaultTransition']($this) : t85$), curve: (t85$0 = curve, t85$0 == null ? extension_navigation['GetNavigation|get#defaultTransitionCurve']($this) : t85$0), transitionDuration: (t85$1 = duration, t85$1 == null ? extension_navigation['GetNavigation|get#defaultTransitionDuration']($this) : t85$1)}));
  };
  extension_navigation['GetNavigation|offAll'] = function GetNavigation$124offAll(T, $this, page, opts) {
    let t86, t86$, t86$0, t86$1, t86$2, t85;
    if ($this == null) dart.nullFailed(I[50], 975, 15, "#this");
    let predicate = opts && 'predicate' in opts ? opts.predicate : null;
    let opaque = opts && 'opaque' in opts ? opts.opaque : false;
    if (opaque == null) dart.nullFailed(I[50], 978, 10, "opaque");
    let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
    let id = opts && 'id' in opts ? opts.id : null;
    let routeName = opts && 'routeName' in opts ? opts.routeName : null;
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let binding = opts && 'binding' in opts ? opts.binding : null;
    let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
    if (fullscreenDialog == null) dart.nullFailed(I[50], 984, 10, "fullscreenDialog");
    let transition = opts && 'transition' in opts ? opts.transition : null;
    let curve = opts && 'curve' in opts ? opts.curve : null;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
    routeName == null ? routeName = "/" + dart.str(dart.toString(dart.runtimeType(page))) : null;
    routeName = extension_navigation['GetNavigation|_cleanRouteName']($this, routeName);
    t85 = extension_navigation['GetNavigation|global']($this, id).currentState;
    return t85 == null ? null : t85.pushAndRemoveUntil(T, new (default_route.GetPageRoute$(T)).new({opaque: opaque, popGesture: (t86 = popGesture, t86 == null ? extension_navigation['GetNavigation|get#defaultPopGesture']($this) : t86), page: extension_navigation['GetNavigation|_resolvePage']($this, page, "offAll"), binding: binding, gestureWidth: gestureWidth, settings: new navigator.RouteSettings.new({name: routeName, arguments: $arguments}), fullscreenDialog: fullscreenDialog, routeName: routeName, transition: (t86$ = transition, t86$ == null ? extension_navigation['GetNavigation|get#defaultTransition']($this) : t86$), curve: (t86$0 = curve, t86$0 == null ? extension_navigation['GetNavigation|get#defaultTransitionCurve']($this) : t86$0), transitionDuration: (t86$1 = duration, t86$1 == null ? extension_navigation['GetNavigation|get#defaultTransitionDuration']($this) : t86$1)}), (t86$2 = predicate, t86$2 == null ? dart.fn(route => {
      if (route == null) dart.nullFailed(I[50], 1009, 23, "route");
      return false;
    }, T$.RouteTobool()) : t86$2));
  };
  extension_navigation['GetNavigation|get#offAll'] = function GetNavigation$124get$35offAll($this) {
    if ($this == null) dart.nullFailed(I[50], 975, 15, "#this");
    return dart.fn((T, page, opts) => {
      let predicate = opts && 'predicate' in opts ? opts.predicate : null;
      let opaque = opts && 'opaque' in opts ? opts.opaque : false;
      if (opaque == null) dart.nullFailed(I[50], 978, 10, "opaque");
      let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
      let id = opts && 'id' in opts ? opts.id : null;
      let routeName = opts && 'routeName' in opts ? opts.routeName : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let binding = opts && 'binding' in opts ? opts.binding : null;
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      if (fullscreenDialog == null) dart.nullFailed(I[50], 984, 10, "fullscreenDialog");
      let transition = opts && 'transition' in opts ? opts.transition : null;
      let curve = opts && 'curve' in opts ? opts.curve : null;
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
      return extension_navigation['GetNavigation|offAll'](T, $this, page, {predicate: predicate, opaque: opaque, popGesture: popGesture, id: id, routeName: routeName, arguments: $arguments, binding: binding, fullscreenDialog: fullscreenDialog, transition: transition, curve: curve, duration: duration, gestureWidth: gestureWidth});
    }, T$.dynamic__ToFutureNOfTN$2());
  };
  extension_navigation['GetNavigation|_cleanRouteName'] = function GetNavigation$124_cleanRouteName($this, name) {
    let t87, t87$;
    if ($this == null) dart.nullFailed(I[50], 1017, 10, "#this");
    if (name == null) dart.nullFailed(I[50], 1017, 33, "name");
    name = name[$replaceAll]("() => ", "");
    if (!name[$startsWith]("/")) {
      name = "/" + dart.str(name);
    }
    t87$ = (t87 = core.Uri.tryParse(name), t87 == null ? null : dart.toString(t87));
    return t87$ == null ? name : t87$;
  };
  extension_navigation['GetNavigation|get#_cleanRouteName'] = function GetNavigation$124get$35_cleanRouteName($this) {
    if ($this == null) dart.nullFailed(I[50], 1017, 10, "#this");
    return dart.fn(name => {
      if (name == null) dart.nullFailed(I[50], 1017, 33, "name");
      return extension_navigation['GetNavigation|_cleanRouteName']($this, name);
    }, T$.StringToString());
  };
  extension_navigation['GetNavigation|config'] = function GetNavigation$124config($this, opts) {
    if ($this == null) dart.nullFailed(I[50], 1029, 8, "#this");
    let enableLog = opts && 'enableLog' in opts ? opts.enableLog : null;
    let logWriterCallback = opts && 'logWriterCallback' in opts ? opts.logWriterCallback : null;
    let defaultPopGesture = opts && 'defaultPopGesture' in opts ? opts.defaultPopGesture : null;
    let defaultOpaqueRoute = opts && 'defaultOpaqueRoute' in opts ? opts.defaultOpaqueRoute : null;
    let defaultDurationTransition = opts && 'defaultDurationTransition' in opts ? opts.defaultDurationTransition : null;
    let defaultGlobalState = opts && 'defaultGlobalState' in opts ? opts.defaultGlobalState : null;
    let defaultTransition = opts && 'defaultTransition' in opts ? opts.defaultTransition : null;
    if (enableLog != null) {
      get_main.Get.isLogEnable = enableLog;
    }
    if (logWriterCallback != null) {
      get_main.Get.log = logWriterCallback;
    }
    if (defaultPopGesture != null) {
      extension_navigation['GetNavigation|_getxController'].defaultPopGesture = defaultPopGesture;
    }
    if (defaultOpaqueRoute != null) {
      extension_navigation['GetNavigation|_getxController'].defaultOpaqueRoute = defaultOpaqueRoute;
    }
    if (defaultTransition != null) {
      extension_navigation['GetNavigation|_getxController'].defaultTransition = defaultTransition;
    }
    if (defaultDurationTransition != null) {
      extension_navigation['GetNavigation|_getxController'].defaultTransitionDuration = defaultDurationTransition;
    }
  };
  extension_navigation['GetNavigation|get#config'] = function GetNavigation$124get$35config($this) {
    if ($this == null) dart.nullFailed(I[50], 1029, 8, "#this");
    return dart.fn(opts => {
      let enableLog = opts && 'enableLog' in opts ? opts.enableLog : null;
      let logWriterCallback = opts && 'logWriterCallback' in opts ? opts.logWriterCallback : null;
      let defaultPopGesture = opts && 'defaultPopGesture' in opts ? opts.defaultPopGesture : null;
      let defaultOpaqueRoute = opts && 'defaultOpaqueRoute' in opts ? opts.defaultOpaqueRoute : null;
      let defaultDurationTransition = opts && 'defaultDurationTransition' in opts ? opts.defaultDurationTransition : null;
      let defaultGlobalState = opts && 'defaultGlobalState' in opts ? opts.defaultGlobalState : null;
      let defaultTransition = opts && 'defaultTransition' in opts ? opts.defaultTransition : null;
      return extension_navigation['GetNavigation|config']($this, {enableLog: enableLog, logWriterCallback: logWriterCallback, defaultPopGesture: defaultPopGesture, defaultOpaqueRoute: defaultOpaqueRoute, defaultDurationTransition: defaultDurationTransition, defaultGlobalState: defaultGlobalState, defaultTransition: defaultTransition});
    }, T$.__Tovoid$2());
  };
  extension_navigation['GetNavigation|updateLocale'] = function GetNavigation$124updateLocale($this, l) {
    if ($this == null) dart.nullFailed(I[50], 1058, 8, "#this");
    if (l == null) dart.nullFailed(I[50], 1058, 28, "l");
    internacionalization$['LocalesIntl|set#locale'](get_main.Get, l);
    extension_navigation['GetNavigation|forceAppUpdate']($this);
  };
  extension_navigation['GetNavigation|get#updateLocale'] = function GetNavigation$124get$35updateLocale($this) {
    if ($this == null) dart.nullFailed(I[50], 1058, 8, "#this");
    return dart.fn(l => {
      if (l == null) dart.nullFailed(I[50], 1058, 28, "l");
      return extension_navigation['GetNavigation|updateLocale']($this, l);
    }, T$.LocaleTovoid());
  };
  extension_navigation['GetNavigation|forceAppUpdate'] = function GetNavigation$124forceAppUpdate($this) {
    if ($this == null) dart.nullFailed(I[50], 1076, 8, "#this");
    dart.nullCheck(extension_navigation['GetNavigation|get#engine']($this)).performReassemble();
  };
  extension_navigation['GetNavigation|get#forceAppUpdate'] = function GetNavigation$124get$35forceAppUpdate($this) {
    if ($this == null) dart.nullFailed(I[50], 1076, 8, "#this");
    return dart.fn(() => extension_navigation['GetNavigation|forceAppUpdate']($this), T$.VoidTovoid());
  };
  extension_navigation['GetNavigation|appUpdate'] = function GetNavigation$124appUpdate($this) {
    if ($this == null) dart.nullFailed(I[50], 1080, 8, "#this");
    return extension_navigation['GetNavigation|_getxController'].update();
  };
  extension_navigation['GetNavigation|get#appUpdate'] = function GetNavigation$124get$35appUpdate($this) {
    if ($this == null) dart.nullFailed(I[50], 1080, 8, "#this");
    return dart.fn(() => extension_navigation['GetNavigation|appUpdate']($this), T$.VoidTovoid());
  };
  extension_navigation['GetNavigation|changeTheme'] = function GetNavigation$124changeTheme($this, theme) {
    if ($this == null) dart.nullFailed(I[50], 1082, 8, "#this");
    if (theme == null) dart.nullFailed(I[50], 1082, 30, "theme");
    extension_navigation['GetNavigation|_getxController'].setTheme(theme);
  };
  extension_navigation['GetNavigation|get#changeTheme'] = function GetNavigation$124get$35changeTheme($this) {
    if ($this == null) dart.nullFailed(I[50], 1082, 8, "#this");
    return dart.fn(theme => {
      if (theme == null) dart.nullFailed(I[50], 1082, 30, "theme");
      return extension_navigation['GetNavigation|changeTheme']($this, theme);
    }, T$.ThemeDataTovoid());
  };
  extension_navigation['GetNavigation|changeThemeMode'] = function GetNavigation$124changeThemeMode($this, themeMode) {
    if ($this == null) dart.nullFailed(I[50], 1086, 8, "#this");
    if (themeMode == null) dart.nullFailed(I[50], 1086, 34, "themeMode");
    extension_navigation['GetNavigation|_getxController'].setThemeMode(themeMode);
  };
  extension_navigation['GetNavigation|get#changeThemeMode'] = function GetNavigation$124get$35changeThemeMode($this) {
    if ($this == null) dart.nullFailed(I[50], 1086, 8, "#this");
    return dart.fn(themeMode => {
      if (themeMode == null) dart.nullFailed(I[50], 1086, 34, "themeMode");
      return extension_navigation['GetNavigation|changeThemeMode']($this, themeMode);
    }, T$.ThemeModeTovoid());
  };
  extension_navigation['GetNavigation|addKey'] = function GetNavigation$124addKey($this, newKey) {
    if ($this == null) dart.nullFailed(I[50], 1090, 30, "#this");
    if (newKey == null) dart.nullFailed(I[50], 1090, 63, "newKey");
    return extension_navigation['GetNavigation|_getxController'].addKey(newKey);
  };
  extension_navigation['GetNavigation|get#addKey'] = function GetNavigation$124get$35addKey($this) {
    if ($this == null) dart.nullFailed(I[50], 1090, 30, "#this");
    return dart.fn(newKey => {
      if (newKey == null) dart.nullFailed(I[50], 1090, 63, "newKey");
      return extension_navigation['GetNavigation|addKey']($this, newKey);
    }, T$.GlobalKeyOfNavigatorStateToGlobalKeyNOfNavigatorState());
  };
  extension_navigation['GetNavigation|nestedKey'] = function GetNavigation$124nestedKey($this, key) {
    if ($this == null) dart.nullFailed(I[50], 1094, 30, "#this");
    extension_navigation['GetNavigation|get#keys']($this)[$putIfAbsent](key, dart.fn(() => T$.GlobalKeyOfNavigatorState().new({debugLabel: "Getx nested key: " + dart.str(dart.toString(key))}), T$.VoidToGlobalKeyOfNavigatorState()));
    return extension_navigation['GetNavigation|get#keys']($this)[$_get](key);
  };
  extension_navigation['GetNavigation|get#nestedKey'] = function GetNavigation$124get$35nestedKey($this) {
    if ($this == null) dart.nullFailed(I[50], 1094, 30, "#this");
    return dart.fn(key => extension_navigation['GetNavigation|nestedKey']($this, key), T$.dynamicToGlobalKeyNOfNavigatorState());
  };
  extension_navigation['GetNavigation|global'] = function GetNavigation$124global($this, k) {
    if ($this == null) dart.nullFailed(I[50], 1104, 29, "#this");
    let _key = null;
    if (k == null) {
      _key = extension_navigation['GetNavigation|get#key']($this);
    } else {
      if (!dart.test(extension_navigation['GetNavigation|get#keys']($this)[$containsKey](k))) {
        dart.throw("Route id (" + dart.str(k) + ") not found");
      }
      _key = dart.nullCheck(extension_navigation['GetNavigation|get#keys']($this)[$_get](k));
    }
    if (_key.currentContext == null && !dart.test(extension_navigation['GetNavigation|get#testMode']($this))) {
      dart.throw("You are trying to use contextless navigation without\n      a GetMaterialApp or Get.key.\n      If you are testing your app, you can use:\n      [Get.testMode = true], or if you are running your app on\n      a physical device or emulator, you must exchange your [MaterialApp]\n      for a [GetMaterialApp].\n      ");
    }
    return _key;
  };
  extension_navigation['GetNavigation|get#global'] = function GetNavigation$124get$35global($this) {
    if ($this == null) dart.nullFailed(I[50], 1104, 29, "#this");
    return dart.fn(k => extension_navigation['GetNavigation|global']($this, k), T$.intNToGlobalKeyOfNavigatorState());
  };
  extension_navigation['GetNavigation|get#arguments'] = function GetNavigation$124get$35arguments($this) {
    if ($this == null) dart.nullFailed(I[50], 1129, 15, "#this");
    return extension_navigation['GetNavigation|get#routing']($this).args;
  };
  extension_navigation['GetNavigation|get#currentRoute'] = function GetNavigation$124get$35currentRoute($this) {
    if ($this == null) dart.nullFailed(I[50], 1132, 14, "#this");
    return extension_navigation['GetNavigation|get#routing']($this).current;
  };
  extension_navigation['GetNavigation|get#previousRoute'] = function GetNavigation$124get$35previousRoute($this) {
    if ($this == null) dart.nullFailed(I[50], 1135, 14, "#this");
    return extension_navigation['GetNavigation|get#routing']($this).previous;
  };
  extension_navigation['GetNavigation|get#isSnackbarOpen'] = function GetNavigation$124get$35isSnackbarOpen($this) {
    if ($this == null) dart.nullFailed(I[50], 1138, 13, "#this");
    return extension_navigation['GetNavigation|get#routing']($this).isSnackbar;
  };
  extension_navigation['GetNavigation|get#isDialogOpen'] = function GetNavigation$124get$35isDialogOpen($this) {
    if ($this == null) dart.nullFailed(I[50], 1141, 13, "#this");
    return extension_navigation['GetNavigation|get#routing']($this).isDialog;
  };
  extension_navigation['GetNavigation|get#isBottomSheetOpen'] = function GetNavigation$124get$35isBottomSheetOpen($this) {
    if ($this == null) dart.nullFailed(I[50], 1144, 13, "#this");
    return extension_navigation['GetNavigation|get#routing']($this).isBottomSheet;
  };
  extension_navigation['GetNavigation|get#rawRoute'] = function GetNavigation$124get$35rawRoute($this) {
    if ($this == null) dart.nullFailed(I[50], 1147, 23, "#this");
    return extension_navigation['GetNavigation|get#routing']($this).route;
  };
  extension_navigation['GetNavigation|get#isPopGestureEnable'] = function GetNavigation$124get$35isPopGestureEnable($this) {
    if ($this == null) dart.nullFailed(I[50], 1150, 12, "#this");
    return extension_navigation['GetNavigation|get#defaultPopGesture']($this);
  };
  extension_navigation['GetNavigation|get#isOpaqueRouteDefault'] = function GetNavigation$124get$35isOpaqueRouteDefault($this) {
    if ($this == null) dart.nullFailed(I[50], 1153, 12, "#this");
    return extension_navigation['GetNavigation|get#defaultOpaqueRoute']($this);
  };
  extension_navigation['GetNavigation|get#context'] = function GetNavigation$124get$35context($this) {
    if ($this == null) dart.nullFailed(I[50], 1156, 21, "#this");
    return extension_navigation['GetNavigation|get#key']($this).currentContext;
  };
  extension_navigation['GetNavigation|get#overlayContext'] = function GetNavigation$124get$35overlayContext($this) {
    let t118, t117;
    if ($this == null) dart.nullFailed(I[50], 1159, 21, "#this");
    let overlay = null;
    t117 = extension_navigation['GetNavigation|get#key']($this).currentState;
    t117 == null ? null : (t118 = t117.overlay, t118 == null ? null : t118.context.visitChildElements(dart.fn(element => {
      if (element == null) dart.nullFailed(I[50], 1161, 60, "element");
      overlay = element;
    }, T$.ElementTovoid())));
    return overlay;
  };
  extension_navigation['GetNavigation|get#theme'] = function GetNavigation$124get$35theme($this) {
    if ($this == null) dart.nullFailed(I[50], 1168, 17, "#this");
    let _theme = theme_data.ThemeData.fallback();
    if (extension_navigation['GetNavigation|get#context']($this) != null) {
      _theme = theme$.Theme.of(dart.nullCheck(extension_navigation['GetNavigation|get#context']($this)));
    }
    return _theme;
  };
  extension_navigation['GetNavigation|get#engine'] = function GetNavigation$124get$35engine($this) {
    if ($this == null) dart.nullFailed(I[50], 1177, 23, "#this");
    if (binding.WidgetsBinding.instance == null) {
      new binding.WidgetsFlutterBinding.new();
    }
    return binding.WidgetsBinding.instance;
  };
  extension_navigation['GetNavigation|get#window'] = function GetNavigation$124get$35window($this) {
    if ($this == null) dart.nullFailed(I[50], 1185, 33, "#this");
    return ui.window;
  };
  extension_navigation['GetNavigation|get#deviceLocale'] = function GetNavigation$124get$35deviceLocale($this) {
    if ($this == null) dart.nullFailed(I[50], 1187, 15, "#this");
    return ui.window.locale;
  };
  extension_navigation['GetNavigation|get#pixelRatio'] = function GetNavigation$124get$35pixelRatio($this) {
    if ($this == null) dart.nullFailed(I[50], 1190, 14, "#this");
    return ui.window.devicePixelRatio;
  };
  extension_navigation['GetNavigation|get#size'] = function GetNavigation$124get$35size($this) {
    if ($this == null) dart.nullFailed(I[50], 1192, 12, "#this");
    return ui.window.physicalSize['/'](extension_navigation['GetNavigation|get#pixelRatio']($this));
  };
  extension_navigation['GetNavigation|get#width'] = function GetNavigation$124get$35width($this) {
    if ($this == null) dart.nullFailed(I[50], 1195, 14, "#this");
    return extension_navigation['GetNavigation|get#size']($this).width;
  };
  extension_navigation['GetNavigation|get#height'] = function GetNavigation$124get$35height($this) {
    if ($this == null) dart.nullFailed(I[50], 1198, 14, "#this");
    return extension_navigation['GetNavigation|get#size']($this).height;
  };
  extension_navigation['GetNavigation|get#statusBarHeight'] = function GetNavigation$124get$35statusBarHeight($this) {
    if ($this == null) dart.nullFailed(I[50], 1202, 14, "#this");
    return ui.window.padding.top;
  };
  extension_navigation['GetNavigation|get#bottomBarHeight'] = function GetNavigation$124get$35bottomBarHeight($this) {
    if ($this == null) dart.nullFailed(I[50], 1206, 14, "#this");
    return ui.window.padding.bottom;
  };
  extension_navigation['GetNavigation|get#textScaleFactor'] = function GetNavigation$124get$35textScaleFactor($this) {
    if ($this == null) dart.nullFailed(I[50], 1209, 14, "#this");
    return ui.window.textScaleFactor;
  };
  extension_navigation['GetNavigation|get#textTheme'] = function GetNavigation$124get$35textTheme($this) {
    if ($this == null) dart.nullFailed(I[50], 1212, 17, "#this");
    return extension_navigation['GetNavigation|get#theme']($this).textTheme;
  };
  extension_navigation['GetNavigation|get#mediaQuery'] = function GetNavigation$124get$35mediaQuery($this) {
    if ($this == null) dart.nullFailed(I[50], 1215, 22, "#this");
    return media_query.MediaQuery.of(dart.nullCheck(extension_navigation['GetNavigation|get#context']($this)));
  };
  extension_navigation['GetNavigation|get#isDarkMode'] = function GetNavigation$124get$35isDarkMode($this) {
    if ($this == null) dart.nullFailed(I[50], 1218, 12, "#this");
    return extension_navigation['GetNavigation|get#theme']($this).brightness == ui.Brightness.dark;
  };
  extension_navigation['GetNavigation|get#isPlatformDarkMode'] = function GetNavigation$124get$35isPlatformDarkMode($this) {
    if ($this == null) dart.nullFailed(I[50], 1221, 12, "#this");
    return ui.window.platformBrightness == ui.Brightness.dark;
  };
  extension_navigation['GetNavigation|get#iconColor'] = function GetNavigation$124get$35iconColor($this) {
    if ($this == null) dart.nullFailed(I[50], 1225, 14, "#this");
    return extension_navigation['GetNavigation|get#theme']($this).iconTheme.color;
  };
  extension_navigation['GetNavigation|get#focusScope'] = function GetNavigation$124get$35focusScope($this) {
    if ($this == null) dart.nullFailed(I[50], 1228, 18, "#this");
    return focus_manager.FocusManager.instance.primaryFocus;
  };
  extension_navigation['GetNavigation|get#key'] = function GetNavigation$124get$35key($this) {
    if ($this == null) dart.nullFailed(I[50], 1236, 33, "#this");
    return extension_navigation['GetNavigation|_getxController'].key;
  };
  extension_navigation['GetNavigation|get#keys'] = function GetNavigation$124get$35keys($this) {
    if ($this == null) dart.nullFailed(I[50], 1238, 47, "#this");
    return extension_navigation['GetNavigation|_getxController'].keys;
  };
  extension_navigation['GetNavigation|get#rootController'] = function GetNavigation$124get$35rootController($this) {
    if ($this == null) dart.nullFailed(I[50], 1240, 29, "#this");
    return extension_navigation['GetNavigation|_getxController'];
  };
  extension_navigation['GetNavigation|get#defaultPopGesture'] = function GetNavigation$124get$35defaultPopGesture($this) {
    if ($this == null) dart.nullFailed(I[50], 1242, 12, "#this");
    return extension_navigation['GetNavigation|_getxController'].defaultPopGesture;
  };
  extension_navigation['GetNavigation|get#defaultOpaqueRoute'] = function GetNavigation$124get$35defaultOpaqueRoute($this) {
    if ($this == null) dart.nullFailed(I[50], 1243, 12, "#this");
    return extension_navigation['GetNavigation|_getxController'].defaultOpaqueRoute;
  };
  extension_navigation['GetNavigation|get#defaultTransition'] = function GetNavigation$124get$35defaultTransition($this) {
    if ($this == null) dart.nullFailed(I[50], 1245, 19, "#this");
    return extension_navigation['GetNavigation|_getxController'].defaultTransition;
  };
  extension_navigation['GetNavigation|get#defaultTransitionDuration'] = function GetNavigation$124get$35defaultTransitionDuration($this) {
    if ($this == null) dart.nullFailed(I[50], 1247, 16, "#this");
    return extension_navigation['GetNavigation|_getxController'].defaultTransitionDuration;
  };
  extension_navigation['GetNavigation|get#defaultTransitionCurve'] = function GetNavigation$124get$35defaultTransitionCurve($this) {
    if ($this == null) dart.nullFailed(I[50], 1251, 13, "#this");
    return extension_navigation['GetNavigation|_getxController'].defaultTransitionCurve;
  };
  extension_navigation['GetNavigation|get#defaultDialogTransitionCurve'] = function GetNavigation$124get$35defaultDialogTransitionCurve($this) {
    if ($this == null) dart.nullFailed(I[50], 1253, 13, "#this");
    return extension_navigation['GetNavigation|_getxController'].defaultDialogTransitionCurve;
  };
  extension_navigation['GetNavigation|get#defaultDialogTransitionDuration'] = function GetNavigation$124get$35defaultDialogTransitionDuration($this) {
    if ($this == null) dart.nullFailed(I[50], 1257, 16, "#this");
    return extension_navigation['GetNavigation|_getxController'].defaultDialogTransitionDuration;
  };
  extension_navigation['GetNavigation|get#routing'] = function GetNavigation$124get$35routing($this) {
    if ($this == null) dart.nullFailed(I[50], 1261, 15, "#this");
    return extension_navigation['GetNavigation|_getxController'].routing;
  };
  extension_navigation['GetNavigation|get#parameters'] = function GetNavigation$124get$35parameters($this) {
    if ($this == null) dart.nullFailed(I[50], 1263, 28, "#this");
    return extension_navigation['GetNavigation|_getxController'].parameters;
  };
  extension_navigation['GetNavigation|set#parameters'] = function GetNavigation$124set$35parameters($this, newParameters) {
    if ($this == null) dart.nullFailed(I[50], 1264, 7, "#this");
    if (newParameters == null) dart.nullFailed(I[50], 1264, 39, "newParameters");
    return extension_navigation['GetNavigation|_getxController'].parameters = newParameters;
  };
  extension_navigation['GetNavigation|get#customTransition'] = function GetNavigation$124get$35customTransition($this) {
    if ($this == null) dart.nullFailed(I[50], 1267, 25, "#this");
    return extension_navigation['GetNavigation|_getxController'].customTransition;
  };
  extension_navigation['GetNavigation|set#customTransition'] = function GetNavigation$124set$35customTransition($this, newTransition) {
    if ($this == null) dart.nullFailed(I[50], 1268, 7, "#this");
    return extension_navigation['GetNavigation|_getxController'].customTransition = newTransition;
  };
  extension_navigation['GetNavigation|get#testMode'] = function GetNavigation$124get$35testMode($this) {
    if ($this == null) dart.nullFailed(I[50], 1271, 12, "#this");
    return extension_navigation['GetNavigation|_getxController'].testMode;
  };
  extension_navigation['GetNavigation|set#testMode'] = function GetNavigation$124set$35testMode($this, isTest) {
    if ($this == null) dart.nullFailed(I[50], 1272, 7, "#this");
    if (isTest == null) dart.nullFailed(I[50], 1272, 21, "isTest");
    return extension_navigation['GetNavigation|_getxController'].testMode = isTest;
  };
  extension_navigation['GetNavigation|resetRootNavigator'] = function GetNavigation$124resetRootNavigator($this) {
    if ($this == null) dart.nullFailed(I[50], 1274, 8, "#this");
    extension_navigation['GetNavigation|_getxController'] = new root_controller.GetMaterialController.new();
  };
  extension_navigation['GetNavigation|get#resetRootNavigator'] = function GetNavigation$124get$35resetRootNavigator($this) {
    if ($this == null) dart.nullFailed(I[50], 1274, 8, "#this");
    return dart.fn(() => extension_navigation['GetNavigation|resetRootNavigator']($this), T$.VoidTovoid());
  };
  extension_navigation['NavTwoExt|addPages'] = function NavTwoExt$124addPages($this, getPages) {
    if ($this == null) dart.nullFailed(I[50], 1282, 8, "#this");
    if (getPages == null) dart.nullFailed(I[50], 1282, 31, "getPages");
    extension_navigation['NavTwoExt|get#routeTree']($this).addRoutes(getPages);
  };
  extension_navigation['NavTwoExt|get#addPages'] = function NavTwoExt$124get$35addPages($this) {
    if ($this == null) dart.nullFailed(I[50], 1282, 8, "#this");
    return dart.fn(getPages => {
      if (getPages == null) dart.nullFailed(I[50], 1282, 31, "getPages");
      return extension_navigation['NavTwoExt|addPages']($this, getPages);
    }, T$.ListOfGetPageTovoid());
  };
  extension_navigation['NavTwoExt|clearRouteTree'] = function NavTwoExt$124clearRouteTree($this) {
    if ($this == null) dart.nullFailed(I[50], 1286, 8, "#this");
    extension_navigation['NavTwoExt|_routeTree'].routes[$clear]();
  };
  extension_navigation['NavTwoExt|get#clearRouteTree'] = function NavTwoExt$124get$35clearRouteTree($this) {
    if ($this == null) dart.nullFailed(I[50], 1286, 8, "#this");
    return dart.fn(() => extension_navigation['NavTwoExt|clearRouteTree']($this), T$.VoidTovoid());
  };
  extension_navigation['NavTwoExt|get#routeTree'] = function NavTwoExt$124get$35routeTree($this) {
    if ($this == null) dart.nullFailed(I[50], 1292, 22, "#this");
    return extension_navigation['NavTwoExt|_routeTree'];
  };
  extension_navigation['NavTwoExt|addPage'] = function NavTwoExt$124addPage($this, getPage) {
    if ($this == null) dart.nullFailed(I[50], 1293, 8, "#this");
    if (getPage == null) dart.nullFailed(I[50], 1293, 24, "getPage");
    extension_navigation['NavTwoExt|get#routeTree']($this).addRoute(getPage);
  };
  extension_navigation['NavTwoExt|get#addPage'] = function NavTwoExt$124get$35addPage($this) {
    if ($this == null) dart.nullFailed(I[50], 1293, 8, "#this");
    return dart.fn(getPage => {
      if (getPage == null) dart.nullFailed(I[50], 1293, 24, "getPage");
      return extension_navigation['NavTwoExt|addPage']($this, getPage);
    }, T$.GetPageTovoid());
  };
  extension_navigation['NavTwoExt|delegate'] = function NavTwoExt$124delegate(TDelegate, TPage, $this) {
    if ($this == null) dart.nullFailed(I[50], 1298, 14, "#this");
    return dart.nullable(TDelegate).as($this.routerDelegate);
  };
  extension_navigation['NavTwoExt|get#delegate'] = function NavTwoExt$124get$35delegate($this) {
    if ($this == null) dart.nullFailed(I[50], 1298, 14, "#this");
    return dart.fn((TDelegate, TPage) => extension_navigation['NavTwoExt|delegate'](TDelegate, TPage, $this), T$.VoidToTDelegateN());
  };
  extension_navigation['NavTwoExt|createInformationParser'] = function NavTwoExt$124createInformationParser($this, opts) {
    if ($this == null) dart.nullFailed(I[50], 1308, 24, "#this");
    let initialRoute = opts && 'initialRoute' in opts ? opts.initialRoute : "/";
    if (initialRoute == null) dart.nullFailed(I[50], 1308, 56, "initialRoute");
    if ($this.routeInformationParser == null) {
      return $this.routeInformationParser = new get_information_parser.GetInformationParser.new({initialRoute: initialRoute});
    } else {
      return get_information_parser.GetInformationParser.as($this.routeInformationParser);
    }
  };
  extension_navigation['NavTwoExt|get#createInformationParser'] = function NavTwoExt$124get$35createInformationParser($this) {
    if ($this == null) dart.nullFailed(I[50], 1308, 24, "#this");
    return dart.fn(opts => {
      let initialRoute = opts && 'initialRoute' in opts ? opts.initialRoute : "/";
      if (initialRoute == null) dart.nullFailed(I[50], 1308, 56, "initialRoute");
      return extension_navigation['NavTwoExt|createInformationParser']($this, {initialRoute: initialRoute});
    }, T$.__ToGetInformationParser());
  };
  extension_navigation['NavTwoExt|get#rootDelegate'] = function NavTwoExt$124get$35rootDelegate($this) {
    if ($this == null) dart.nullFailed(I[50], 1320, 19, "#this");
    return extension_navigation['NavTwoExt|createDelegate']($this);
  };
  extension_navigation['NavTwoExt|createDelegate'] = function NavTwoExt$124createDelegate($this, opts) {
    if ($this == null) dart.nullFailed(I[50], 1322, 15, "#this");
    let notFoundRoute = opts && 'notFoundRoute' in opts ? opts.notFoundRoute : null;
    let navigatorObservers = opts && 'navigatorObservers' in opts ? opts.navigatorObservers : null;
    let transitionDelegate = opts && 'transitionDelegate' in opts ? opts.transitionDelegate : null;
    let backButtonPopMode = opts && 'backButtonPopMode' in opts ? opts.backButtonPopMode : C[147] || CT.C147;
    if (backButtonPopMode == null) dart.nullFailed(I[50], 1326, 13, "backButtonPopMode");
    let preventDuplicateHandlingMode = opts && 'preventDuplicateHandlingMode' in opts ? opts.preventDuplicateHandlingMode : C[148] || CT.C148;
    if (preventDuplicateHandlingMode == null) dart.nullFailed(I[50], 1327, 34, "preventDuplicateHandlingMode");
    if ($this.routerDelegate == null) {
      return $this.routerDelegate = new get_router_delegate.GetDelegate.new({notFoundRoute: notFoundRoute, navigatorObservers: navigatorObservers, transitionDelegate: transitionDelegate, backButtonPopMode: backButtonPopMode, preventDuplicateHandlingMode: preventDuplicateHandlingMode});
    } else {
      return get_router_delegate.GetDelegate.as($this.routerDelegate);
    }
  };
  extension_navigation['NavTwoExt|get#createDelegate'] = function NavTwoExt$124get$35createDelegate($this) {
    if ($this == null) dart.nullFailed(I[50], 1322, 15, "#this");
    return dart.fn(opts => {
      let notFoundRoute = opts && 'notFoundRoute' in opts ? opts.notFoundRoute : null;
      let navigatorObservers = opts && 'navigatorObservers' in opts ? opts.navigatorObservers : null;
      let transitionDelegate = opts && 'transitionDelegate' in opts ? opts.transitionDelegate : null;
      let backButtonPopMode = opts && 'backButtonPopMode' in opts ? opts.backButtonPopMode : C[147] || CT.C147;
      if (backButtonPopMode == null) dart.nullFailed(I[50], 1326, 13, "backButtonPopMode");
      let preventDuplicateHandlingMode = opts && 'preventDuplicateHandlingMode' in opts ? opts.preventDuplicateHandlingMode : C[148] || CT.C148;
      if (preventDuplicateHandlingMode == null) dart.nullFailed(I[50], 1327, 34, "preventDuplicateHandlingMode");
      return extension_navigation['NavTwoExt|createDelegate']($this, {notFoundRoute: notFoundRoute, navigatorObservers: navigatorObservers, transitionDelegate: transitionDelegate, backButtonPopMode: backButtonPopMode, preventDuplicateHandlingMode: preventDuplicateHandlingMode});
    }, T$.__ToGetDelegate());
  };
  dart.copyProperties(extension_navigation, {
    get ['NavTwoExt|_routeTree']() {
      let t168;
      if (!dart.test(extension_navigation['_#NavTwoExt|_routeTree#isSet'])) {
        let t167 = new parse_route.ParseRouteTree.new({routes: T$.JSArrayOfGetPage().of([])});
        if (dart.test(extension_navigation['_#NavTwoExt|_routeTree#isSet'])) dart.throw(new _internal.LateError.fieldADI("_routeTree"));
        extension_navigation['_#NavTwoExt|_routeTree'] = t167;
        extension_navigation['_#NavTwoExt|_routeTree#isSet'] = true;
      }
      t168 = extension_navigation['_#NavTwoExt|_routeTree'];
      return t168;
    },
    get navigator() {
      return extension_navigation['GetNavigation|get#key'](get_main.Get).currentState;
    }
  });
  dart.defineLazy(extension_navigation, {
    /*extension_navigation['GetNavigation|_getxController']*/get ['GetNavigation|_getxController']() {
      return new root_controller.GetMaterialController.new();
    },
    set ['GetNavigation|_getxController'](_) {},
    /*extension_navigation['_#NavTwoExt|_routeTree']*/get ['_#NavTwoExt|_routeTree']() {
      return null;
    },
    set ['_#NavTwoExt|_routeTree'](_) {},
    /*extension_navigation['_#NavTwoExt|_routeTree#isSet']*/get ['_#NavTwoExt|_routeTree#isSet']() {
      return false;
    },
    set ['_#NavTwoExt|_routeTree#isSet'](_) {}
  }, false);
  var isPersistent$ = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.isPersistent");
  var builder$7 = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.builder");
  var theme$3 = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.theme");
  var isScrollControlled$ = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.isScrollControlled");
  var backgroundColor$0 = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.backgroundColor");
  var elevation$ = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.elevation");
  var shape$ = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.shape");
  var clipBehavior$ = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.clipBehavior");
  var modalBarrierColor$ = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.modalBarrierColor");
  var isDismissible$0 = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.isDismissible");
  var enableDrag$ = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.enableDrag");
  var enterBottomSheetDuration$ = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.enterBottomSheetDuration");
  var exitBottomSheetDuration$ = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.exitBottomSheetDuration");
  var removeTop$ = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.removeTop");
  var barrierLabel$0 = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.barrierLabel");
  var _animationController = dart.privateName(bottomsheet$, "_animationController");
  const _is_GetModalBottomSheetRoute_default = Symbol('_is_GetModalBottomSheetRoute_default');
  bottomsheet$.GetModalBottomSheetRoute$ = dart.generic(T => {
    var _GetModalBottomSheetOfT = () => (_GetModalBottomSheetOfT = dart.constFn(bottomsheet$._GetModalBottomSheet$(T)))();
    class GetModalBottomSheetRoute extends routes.PopupRoute$(T) {
      get isPersistent() {
        return this[isPersistent$];
      }
      set isPersistent(value) {
        super.isPersistent = value;
      }
      get builder() {
        return this[builder$7];
      }
      set builder(value) {
        super.builder = value;
      }
      get theme() {
        return this[theme$3];
      }
      set theme(value) {
        super.theme = value;
      }
      get isScrollControlled() {
        return this[isScrollControlled$];
      }
      set isScrollControlled(value) {
        super.isScrollControlled = value;
      }
      get backgroundColor() {
        return this[backgroundColor$0];
      }
      set backgroundColor(value) {
        super.backgroundColor = value;
      }
      get elevation() {
        return this[elevation$];
      }
      set elevation(value) {
        super.elevation = value;
      }
      get shape() {
        return this[shape$];
      }
      set shape(value) {
        super.shape = value;
      }
      get clipBehavior() {
        return this[clipBehavior$];
      }
      set clipBehavior(value) {
        super.clipBehavior = value;
      }
      get modalBarrierColor() {
        return this[modalBarrierColor$];
      }
      set modalBarrierColor(value) {
        super.modalBarrierColor = value;
      }
      get isDismissible() {
        return this[isDismissible$0];
      }
      set isDismissible(value) {
        super.isDismissible = value;
      }
      get enableDrag() {
        return this[enableDrag$];
      }
      set enableDrag(value) {
        super.enableDrag = value;
      }
      get enterBottomSheetDuration() {
        return this[enterBottomSheetDuration$];
      }
      set enterBottomSheetDuration(value) {
        super.enterBottomSheetDuration = value;
      }
      get exitBottomSheetDuration() {
        return this[exitBottomSheetDuration$];
      }
      set exitBottomSheetDuration(value) {
        super.exitBottomSheetDuration = value;
      }
      get removeTop() {
        return this[removeTop$];
      }
      set removeTop(value) {
        super.removeTop = value;
      }
      get barrierLabel() {
        return this[barrierLabel$0];
      }
      set barrierLabel(value) {
        super.barrierLabel = value;
      }
      get transitionDuration() {
        return new core.Duration.new({milliseconds: 700});
      }
      get barrierDismissible() {
        return this.isDismissible;
      }
      get barrierColor() {
        let t168;
        t168 = this.modalBarrierColor;
        return t168 == null ? colors.Colors.black54 : t168;
      }
      dispose() {
        router_report.RouterReportManager.reportRouteDispose(this);
        super.dispose();
      }
      createAnimationController() {
        if (!(this[_animationController] == null)) dart.assertFailed(null, I[51], 65, 12, "_animationController == null");
        this[_animationController] = bottom_sheet.BottomSheet.createAnimationController(dart.nullCheck(dart.nullCheck(extension_navigation.navigator).overlay));
        dart.nullCheck(this[_animationController]).duration = this.enterBottomSheetDuration;
        dart.nullCheck(this[_animationController]).reverseDuration = this.exitBottomSheetDuration;
        return dart.nullCheck(this[_animationController]);
      }
      buildPage(context, animation, secondaryAnimation) {
        let t168, t168$, t168$0, t168$1, t168$2, t168$3;
        if (context == null) dart.nullFailed(I[51], 74, 33, "context");
        if (animation == null) dart.nullFailed(I[51], 74, 60, "animation");
        if (secondaryAnimation == null) dart.nullFailed(I[51], 75, 25, "secondaryAnimation");
        let sheetTheme = (t168$ = (t168 = this.theme, t168 == null ? null : t168.bottomSheetTheme), t168$ == null ? theme$.Theme.of(context).bottomSheetTheme : t168$);
        let bottomSheet = media_query.MediaQuery.removePadding({context: context, removeTop: this.removeTop, child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({bottom: media_query.MediaQuery.of(context).viewInsets.bottom}), child: new (_GetModalBottomSheetOfT()).new({route: this, backgroundColor: (t168$1 = (t168$0 = this.backgroundColor, t168$0 == null ? sheetTheme.modalBackgroundColor : t168$0), t168$1 == null ? sheetTheme.backgroundColor : t168$1), elevation: (t168$3 = (t168$2 = this.elevation, t168$2 == null ? sheetTheme.modalElevation : t168$2), t168$3 == null ? sheetTheme.elevation : t168$3), shape: this.shape, clipBehavior: this.clipBehavior, isScrollControlled: this.isScrollControlled, enableDrag: this.enableDrag, $creationLocationd_0dea112b090073317d4: C[796] || CT.C796}), $creationLocationd_0dea112b090073317d4: C[805] || CT.C805}), $creationLocationd_0dea112b090073317d4: C[809] || CT.C809});
        if (this.theme != null) bottomSheet = new theme$.Theme.new({data: dart.nullCheck(this.theme), child: bottomSheet, $creationLocationd_0dea112b090073317d4: C[814] || CT.C814});
        return bottomSheet;
      }
    }
    (GetModalBottomSheetRoute.new = function(opts) {
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let theme = opts && 'theme' in opts ? opts.theme : null;
      let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let isPersistent = opts && 'isPersistent' in opts ? opts.isPersistent : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let removeTop = opts && 'removeTop' in opts ? opts.removeTop : true;
      if (removeTop == null) dart.nullFailed(I[51], 14, 10, "removeTop");
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let modalBarrierColor = opts && 'modalBarrierColor' in opts ? opts.modalBarrierColor : null;
      let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
      if (isDismissible == null) dart.nullFailed(I[51], 17, 10, "isDismissible");
      let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
      if (enableDrag == null) dart.nullFailed(I[51], 18, 10, "enableDrag");
      let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : null;
      if (isScrollControlled == null) dart.nullFailed(I[51], 19, 19, "isScrollControlled");
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let enterBottomSheetDuration = opts && 'enterBottomSheetDuration' in opts ? opts.enterBottomSheetDuration : C[795] || CT.C795;
      if (enterBottomSheetDuration == null) dart.nullFailed(I[51], 21, 10, "enterBottomSheetDuration");
      let exitBottomSheetDuration = opts && 'exitBottomSheetDuration' in opts ? opts.exitBottomSheetDuration : C[611] || CT.C611;
      if (exitBottomSheetDuration == null) dart.nullFailed(I[51], 22, 10, "exitBottomSheetDuration");
      this[_animationController] = null;
      this[builder$7] = builder;
      this[theme$3] = theme;
      this[barrierLabel$0] = barrierLabel;
      this[backgroundColor$0] = backgroundColor;
      this[isPersistent$] = isPersistent;
      this[elevation$] = elevation;
      this[shape$] = shape;
      this[removeTop$] = removeTop;
      this[clipBehavior$] = clipBehavior;
      this[modalBarrierColor$] = modalBarrierColor;
      this[isDismissible$0] = isDismissible;
      this[enableDrag$] = enableDrag;
      this[isScrollControlled$] = isScrollControlled;
      this[enterBottomSheetDuration$] = enterBottomSheetDuration;
      this[exitBottomSheetDuration$] = exitBottomSheetDuration;
      GetModalBottomSheetRoute.__proto__.new.call(this, {settings: settings});
      router_report.RouterReportManager.reportCurrentRoute(this);
    }).prototype = GetModalBottomSheetRoute.prototype;
    dart.addTypeTests(GetModalBottomSheetRoute);
    GetModalBottomSheetRoute.prototype[_is_GetModalBottomSheetRoute_default] = true;
    dart.addTypeCaches(GetModalBottomSheetRoute);
    dart.setMethodSignature(GetModalBottomSheetRoute, () => ({
      __proto__: dart.getMethods(GetModalBottomSheetRoute.__proto__),
      buildPage: dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double)])
    }));
    dart.setGetterSignature(GetModalBottomSheetRoute, () => ({
      __proto__: dart.getGetters(GetModalBottomSheetRoute.__proto__),
      transitionDuration: core.Duration,
      barrierDismissible: core.bool,
      barrierColor: ui.Color
    }));
    dart.setLibraryUri(GetModalBottomSheetRoute, I[52]);
    dart.setFieldSignature(GetModalBottomSheetRoute, () => ({
      __proto__: dart.getFields(GetModalBottomSheetRoute.__proto__),
      isPersistent: dart.finalFieldType(dart.nullable(core.bool)),
      builder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext]))),
      theme: dart.finalFieldType(dart.nullable(theme_data.ThemeData)),
      isScrollControlled: dart.finalFieldType(core.bool),
      backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
      elevation: dart.finalFieldType(dart.nullable(core.double)),
      shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
      clipBehavior: dart.finalFieldType(dart.nullable(ui.Clip)),
      modalBarrierColor: dart.finalFieldType(dart.nullable(ui.Color)),
      isDismissible: dart.finalFieldType(core.bool),
      enableDrag: dart.finalFieldType(core.bool),
      enterBottomSheetDuration: dart.finalFieldType(core.Duration),
      exitBottomSheetDuration: dart.finalFieldType(core.Duration),
      removeTop: dart.finalFieldType(core.bool),
      barrierLabel: dart.finalFieldType(dart.nullable(core.String)),
      [_animationController]: dart.fieldType(dart.nullable(animation_controller.AnimationController))
    }));
    return GetModalBottomSheetRoute;
  });
  bottomsheet$.GetModalBottomSheetRoute = bottomsheet$.GetModalBottomSheetRoute$();
  dart.addTypeTests(bottomsheet$.GetModalBottomSheetRoute, _is_GetModalBottomSheetRoute_default);
  var isPersistent$0 = dart.privateName(bottomsheet$, "_GetModalBottomSheet.isPersistent");
  var route$2 = dart.privateName(bottomsheet$, "_GetModalBottomSheet.route");
  var isScrollControlled$0 = dart.privateName(bottomsheet$, "_GetModalBottomSheet.isScrollControlled");
  var backgroundColor$1 = dart.privateName(bottomsheet$, "_GetModalBottomSheet.backgroundColor");
  var elevation$0 = dart.privateName(bottomsheet$, "_GetModalBottomSheet.elevation");
  var shape$0 = dart.privateName(bottomsheet$, "_GetModalBottomSheet.shape");
  var clipBehavior$0 = dart.privateName(bottomsheet$, "_GetModalBottomSheet.clipBehavior");
  var enableDrag$0 = dart.privateName(bottomsheet$, "_GetModalBottomSheet.enableDrag");
  const _is__GetModalBottomSheet_default = Symbol('_is__GetModalBottomSheet_default');
  bottomsheet$._GetModalBottomSheet$ = dart.generic(T => {
    var _GetModalBottomSheetStateOfT = () => (_GetModalBottomSheetStateOfT = dart.constFn(bottomsheet$._GetModalBottomSheetState$(T)))();
    class _GetModalBottomSheet extends framework.StatefulWidget {
      get isPersistent() {
        return this[isPersistent$0];
      }
      set isPersistent(value) {
        super.isPersistent = value;
      }
      get route() {
        return this[route$2];
      }
      set route(value) {
        super.route = value;
      }
      get isScrollControlled() {
        return this[isScrollControlled$0];
      }
      set isScrollControlled(value) {
        super.isScrollControlled = value;
      }
      get backgroundColor() {
        return this[backgroundColor$1];
      }
      set backgroundColor(value) {
        super.backgroundColor = value;
      }
      get elevation() {
        return this[elevation$0];
      }
      set elevation(value) {
        super.elevation = value;
      }
      get shape() {
        return this[shape$0];
      }
      set shape(value) {
        super.shape = value;
      }
      get clipBehavior() {
        return this[clipBehavior$0];
      }
      set clipBehavior(value) {
        super.clipBehavior = value;
      }
      get enableDrag() {
        return this[enableDrag$0];
      }
      set enableDrag(value) {
        super.enableDrag = value;
      }
      createState() {
        return new (_GetModalBottomSheetStateOfT()).new();
      }
    }
    (_GetModalBottomSheet.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let route = opts && 'route' in opts ? opts.route : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : false;
      if (isScrollControlled == null) dart.nullFailed(I[51], 113, 10, "isScrollControlled");
      let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
      if (enableDrag == null) dart.nullFailed(I[51], 114, 10, "enableDrag");
      let isPersistent = opts && 'isPersistent' in opts ? opts.isPersistent : false;
      if (isPersistent == null) dart.nullFailed(I[51], 115, 10, "isPersistent");
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[route$2] = route;
      this[backgroundColor$1] = backgroundColor;
      this[elevation$0] = elevation;
      this[shape$0] = shape;
      this[clipBehavior$0] = clipBehavior;
      this[isScrollControlled$0] = isScrollControlled;
      this[enableDrag$0] = enableDrag;
      this[isPersistent$0] = isPersistent;
      _GetModalBottomSheet.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = _GetModalBottomSheet.prototype;
    dart.addTypeTests(_GetModalBottomSheet);
    _GetModalBottomSheet.prototype[_is__GetModalBottomSheet_default] = true;
    dart.addTypeCaches(_GetModalBottomSheet);
    dart.setMethodSignature(_GetModalBottomSheet, () => ({
      __proto__: dart.getMethods(_GetModalBottomSheet.__proto__),
      createState: dart.fnType(bottomsheet$._GetModalBottomSheetState$(T), [])
    }));
    dart.setLibraryUri(_GetModalBottomSheet, I[52]);
    dart.setFieldSignature(_GetModalBottomSheet, () => ({
      __proto__: dart.getFields(_GetModalBottomSheet.__proto__),
      isPersistent: dart.finalFieldType(core.bool),
      route: dart.finalFieldType(dart.nullable(bottomsheet$.GetModalBottomSheetRoute$(T))),
      isScrollControlled: dart.finalFieldType(core.bool),
      backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
      elevation: dart.finalFieldType(dart.nullable(core.double)),
      shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
      clipBehavior: dart.finalFieldType(dart.nullable(ui.Clip)),
      enableDrag: dart.finalFieldType(core.bool)
    }));
    return _GetModalBottomSheet;
  });
  bottomsheet$._GetModalBottomSheet = bottomsheet$._GetModalBottomSheet$();
  dart.addTypeTests(bottomsheet$._GetModalBottomSheet, _is__GetModalBottomSheet_default);
  var _getRouteLabel = dart.privateName(bottomsheet$, "_getRouteLabel");
  const _is__GetModalBottomSheetState_default = Symbol('_is__GetModalBottomSheetState_default');
  bottomsheet$._GetModalBottomSheetState$ = dart.generic(T => {
    class _GetModalBottomSheetState extends framework.State$(bottomsheet$._GetModalBottomSheet$(T)) {
      [_getRouteLabel](localizations) {
        if (localizations == null) dart.nullFailed(I[51], 131, 47, "localizations");
        if (theme$.Theme.of(this.context).platform == platform$.TargetPlatform.android || theme$.Theme.of(this.context).platform == platform$.TargetPlatform.fuchsia) {
          return localizations.dialogLabel;
        } else {
          return "";
        }
      }
      build(context) {
        if (context == null) dart.nullFailed(I[51], 141, 29, "context");
        if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, I[51], 142, 12, "debugCheckHasMediaQuery(context)");
        if (!dart.test(debug$.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[51], 143, 12, "debugCheckHasMaterialLocalizations(context)");
        let mediaQuery = media_query.MediaQuery.of(context);
        let localizations = material_localizations.MaterialLocalizations.of(context);
        let routeLabel = this[_getRouteLabel](localizations);
        return new transitions.AnimatedBuilder.new({animation: dart.nullCheck(dart.nullCheck(this.widget.route).animation), builder: dart.fn((context, child) => {
            if (context == null) dart.nullFailed(I[51], 150, 17, "context");
            let animationValue = dart.test(mediaQuery.accessibleNavigation) ? 1.0 : dart.nullCheck(dart.nullCheck(this.widget.route).animation).value;
            return new basic.Semantics.new({scopesRoute: true, namesRoute: true, label: routeLabel, explicitChildNodes: true, child: new basic.ClipRect.new({child: new basic.CustomSingleChildLayout.new({delegate: new bottomsheet$._GetModalBottomSheetLayout.new(animationValue, this.widget.isScrollControlled), child: this.widget.isPersistent === false ? new bottom_sheet.BottomSheet.new({animationController: dart.nullCheck(this.widget.route)[_animationController], onClosing: dart.fn(() => {
                      if (dart.test(dart.nullCheck(this.widget.route).isCurrent)) {
                        navigator.Navigator.pop(T$.ObjectN(), context);
                      }
                    }, T$.VoidTovoid()), builder: dart.nullCheck(dart.nullCheck(this.widget.route).builder), backgroundColor: this.widget.backgroundColor, elevation: this.widget.elevation, shape: this.widget.shape, clipBehavior: this.widget.clipBehavior, enableDrag: this.widget.enableDrag, $creationLocationd_0dea112b090073317d4: C[818] || CT.C818}) : new scaffold.Scaffold.new({bottomSheet: new bottom_sheet.BottomSheet.new({animationController: dart.nullCheck(this.widget.route)[_animationController], onClosing: dart.fn(() => {
                      }, T$.VoidTovoid()), builder: dart.nullCheck(dart.nullCheck(this.widget.route).builder), backgroundColor: this.widget.backgroundColor, elevation: this.widget.elevation, shape: this.widget.shape, clipBehavior: this.widget.clipBehavior, enableDrag: this.widget.enableDrag, $creationLocationd_0dea112b090073317d4: C[828] || CT.C828}), $creationLocationd_0dea112b090073317d4: C[838] || CT.C838}), $creationLocationd_0dea112b090073317d4: C[841] || CT.C841}), $creationLocationd_0dea112b090073317d4: C[845] || CT.C845}), $creationLocationd_0dea112b090073317d4: C[848] || CT.C848});
          }, T$.BuildContextAndWidgetNToSemantics()), $creationLocationd_0dea112b090073317d4: C[855] || CT.C855});
      }
    }
    (_GetModalBottomSheetState.new = function() {
      _GetModalBottomSheetState.__proto__.new.call(this);
      ;
    }).prototype = _GetModalBottomSheetState.prototype;
    dart.addTypeTests(_GetModalBottomSheetState);
    _GetModalBottomSheetState.prototype[_is__GetModalBottomSheetState_default] = true;
    dart.addTypeCaches(_GetModalBottomSheetState);
    dart.setMethodSignature(_GetModalBottomSheetState, () => ({
      __proto__: dart.getMethods(_GetModalBottomSheetState.__proto__),
      [_getRouteLabel]: dart.fnType(core.String, [material_localizations.MaterialLocalizations]),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(_GetModalBottomSheetState, I[52]);
    return _GetModalBottomSheetState;
  });
  bottomsheet$._GetModalBottomSheetState = bottomsheet$._GetModalBottomSheetState$();
  dart.addTypeTests(bottomsheet$._GetModalBottomSheetState, _is__GetModalBottomSheetState_default);
  var isPersistent$1 = dart.privateName(bottomsheet$, "_GetPerModalBottomSheet.isPersistent");
  var route$3 = dart.privateName(bottomsheet$, "_GetPerModalBottomSheet.route");
  var isScrollControlled$1 = dart.privateName(bottomsheet$, "_GetPerModalBottomSheet.isScrollControlled");
  var backgroundColor$2 = dart.privateName(bottomsheet$, "_GetPerModalBottomSheet.backgroundColor");
  var elevation$1 = dart.privateName(bottomsheet$, "_GetPerModalBottomSheet.elevation");
  var shape$1 = dart.privateName(bottomsheet$, "_GetPerModalBottomSheet.shape");
  var clipBehavior$1 = dart.privateName(bottomsheet$, "_GetPerModalBottomSheet.clipBehavior");
  var enableDrag$1 = dart.privateName(bottomsheet$, "_GetPerModalBottomSheet.enableDrag");
  const _is__GetPerModalBottomSheet_default = Symbol('_is__GetPerModalBottomSheet_default');
  bottomsheet$._GetPerModalBottomSheet$ = dart.generic(T => {
    var _GetPerModalBottomSheetStateOfT = () => (_GetPerModalBottomSheetStateOfT = dart.constFn(bottomsheet$._GetPerModalBottomSheetState$(T)))();
    class _GetPerModalBottomSheet extends framework.StatefulWidget {
      get isPersistent() {
        return this[isPersistent$1];
      }
      set isPersistent(value) {
        super.isPersistent = value;
      }
      get route() {
        return this[route$3];
      }
      set route(value) {
        super.route = value;
      }
      get isScrollControlled() {
        return this[isScrollControlled$1];
      }
      set isScrollControlled(value) {
        super.isScrollControlled = value;
      }
      get backgroundColor() {
        return this[backgroundColor$2];
      }
      set backgroundColor(value) {
        super.backgroundColor = value;
      }
      get elevation() {
        return this[elevation$1];
      }
      set elevation(value) {
        super.elevation = value;
      }
      get shape() {
        return this[shape$1];
      }
      set shape(value) {
        super.shape = value;
      }
      get clipBehavior() {
        return this[clipBehavior$1];
      }
      set clipBehavior(value) {
        super.clipBehavior = value;
      }
      get enableDrag() {
        return this[enableDrag$1];
      }
      set enableDrag(value) {
        super.enableDrag = value;
      }
      createState() {
        return new (_GetPerModalBottomSheetStateOfT()).new();
      }
    }
    (_GetPerModalBottomSheet.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let route = opts && 'route' in opts ? opts.route : null;
      let isPersistent = opts && 'isPersistent' in opts ? opts.isPersistent : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : false;
      if (isScrollControlled == null) dart.nullFailed(I[51], 213, 10, "isScrollControlled");
      let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
      if (enableDrag == null) dart.nullFailed(I[51], 214, 10, "enableDrag");
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[route$3] = route;
      this[isPersistent$1] = isPersistent;
      this[backgroundColor$2] = backgroundColor;
      this[elevation$1] = elevation;
      this[shape$1] = shape;
      this[clipBehavior$1] = clipBehavior;
      this[isScrollControlled$1] = isScrollControlled;
      this[enableDrag$1] = enableDrag;
      _GetPerModalBottomSheet.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = _GetPerModalBottomSheet.prototype;
    dart.addTypeTests(_GetPerModalBottomSheet);
    _GetPerModalBottomSheet.prototype[_is__GetPerModalBottomSheet_default] = true;
    dart.addTypeCaches(_GetPerModalBottomSheet);
    dart.setMethodSignature(_GetPerModalBottomSheet, () => ({
      __proto__: dart.getMethods(_GetPerModalBottomSheet.__proto__),
      createState: dart.fnType(bottomsheet$._GetPerModalBottomSheetState$(T), [])
    }));
    dart.setLibraryUri(_GetPerModalBottomSheet, I[52]);
    dart.setFieldSignature(_GetPerModalBottomSheet, () => ({
      __proto__: dart.getFields(_GetPerModalBottomSheet.__proto__),
      isPersistent: dart.finalFieldType(dart.nullable(core.bool)),
      route: dart.finalFieldType(dart.nullable(bottomsheet$.GetModalBottomSheetRoute$(T))),
      isScrollControlled: dart.finalFieldType(core.bool),
      backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
      elevation: dart.finalFieldType(dart.nullable(core.double)),
      shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
      clipBehavior: dart.finalFieldType(dart.nullable(ui.Clip)),
      enableDrag: dart.finalFieldType(core.bool)
    }));
    return _GetPerModalBottomSheet;
  });
  bottomsheet$._GetPerModalBottomSheet = bottomsheet$._GetPerModalBottomSheet$();
  dart.addTypeTests(bottomsheet$._GetPerModalBottomSheet, _is__GetPerModalBottomSheet_default);
  const _is__GetPerModalBottomSheetState_default = Symbol('_is__GetPerModalBottomSheetState_default');
  bottomsheet$._GetPerModalBottomSheetState$ = dart.generic(T => {
    class _GetPerModalBottomSheetState extends framework.State$(bottomsheet$._GetPerModalBottomSheet$(T)) {
      [_getRouteLabel](localizations) {
        if (localizations == null) dart.nullFailed(I[51], 234, 47, "localizations");
        if (theme$.Theme.of(this.context).platform == platform$.TargetPlatform.android || theme$.Theme.of(this.context).platform == platform$.TargetPlatform.fuchsia) {
          return localizations.dialogLabel;
        } else {
          return "";
        }
      }
      build(context) {
        if (context == null) dart.nullFailed(I[51], 244, 29, "context");
        if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, I[51], 245, 12, "debugCheckHasMediaQuery(context)");
        if (!dart.test(debug$.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[51], 246, 12, "debugCheckHasMaterialLocalizations(context)");
        let mediaQuery = media_query.MediaQuery.of(context);
        let localizations = material_localizations.MaterialLocalizations.of(context);
        let routeLabel = this[_getRouteLabel](localizations);
        return new transitions.AnimatedBuilder.new({animation: dart.nullCheck(dart.nullCheck(this.widget.route).animation), builder: dart.fn((context, child) => {
            if (context == null) dart.nullFailed(I[51], 253, 17, "context");
            let animationValue = dart.test(mediaQuery.accessibleNavigation) ? 1.0 : dart.nullCheck(dart.nullCheck(this.widget.route).animation).value;
            return new basic.Semantics.new({scopesRoute: true, namesRoute: true, label: routeLabel, explicitChildNodes: true, child: new basic.ClipRect.new({child: new basic.CustomSingleChildLayout.new({delegate: new bottomsheet$._GetModalBottomSheetLayout.new(animationValue, this.widget.isScrollControlled), child: this.widget.isPersistent === false ? new bottom_sheet.BottomSheet.new({animationController: dart.nullCheck(this.widget.route)[_animationController], onClosing: dart.fn(() => {
                      if (dart.test(dart.nullCheck(this.widget.route).isCurrent)) {
                        navigator.Navigator.pop(T$.ObjectN(), context);
                      }
                    }, T$.VoidTovoid()), builder: dart.nullCheck(dart.nullCheck(this.widget.route).builder), backgroundColor: this.widget.backgroundColor, elevation: this.widget.elevation, shape: this.widget.shape, clipBehavior: this.widget.clipBehavior, enableDrag: this.widget.enableDrag, $creationLocationd_0dea112b090073317d4: C[859] || CT.C859}) : new scaffold.Scaffold.new({bottomSheet: new bottom_sheet.BottomSheet.new({animationController: dart.nullCheck(this.widget.route)[_animationController], onClosing: dart.fn(() => {
                      }, T$.VoidTovoid()), builder: dart.nullCheck(dart.nullCheck(this.widget.route).builder), backgroundColor: this.widget.backgroundColor, elevation: this.widget.elevation, shape: this.widget.shape, clipBehavior: this.widget.clipBehavior, enableDrag: this.widget.enableDrag, $creationLocationd_0dea112b090073317d4: C[869] || CT.C869}), $creationLocationd_0dea112b090073317d4: C[879] || CT.C879}), $creationLocationd_0dea112b090073317d4: C[882] || CT.C882}), $creationLocationd_0dea112b090073317d4: C[886] || CT.C886}), $creationLocationd_0dea112b090073317d4: C[889] || CT.C889});
          }, T$.BuildContextAndWidgetNToSemantics()), $creationLocationd_0dea112b090073317d4: C[896] || CT.C896});
      }
    }
    (_GetPerModalBottomSheetState.new = function() {
      _GetPerModalBottomSheetState.__proto__.new.call(this);
      ;
    }).prototype = _GetPerModalBottomSheetState.prototype;
    dart.addTypeTests(_GetPerModalBottomSheetState);
    _GetPerModalBottomSheetState.prototype[_is__GetPerModalBottomSheetState_default] = true;
    dart.addTypeCaches(_GetPerModalBottomSheetState);
    dart.setMethodSignature(_GetPerModalBottomSheetState, () => ({
      __proto__: dart.getMethods(_GetPerModalBottomSheetState.__proto__),
      [_getRouteLabel]: dart.fnType(core.String, [material_localizations.MaterialLocalizations]),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(_GetPerModalBottomSheetState, I[52]);
    return _GetPerModalBottomSheetState;
  });
  bottomsheet$._GetPerModalBottomSheetState = bottomsheet$._GetPerModalBottomSheetState$();
  dart.addTypeTests(bottomsheet$._GetPerModalBottomSheetState, _is__GetPerModalBottomSheetState_default);
  bottomsheet$._GetModalBottomSheetLayout = class _GetModalBottomSheetLayout extends shifted_box.SingleChildLayoutDelegate {
    getConstraintsForChild(constraints) {
      if (constraints == null) dart.nullFailed(I[51], 314, 56, "constraints");
      return new box$.BoxConstraints.new({minWidth: constraints.maxWidth, maxWidth: constraints.maxWidth, minHeight: 0.0, maxHeight: dart.test(this.isScrollControlled) ? constraints.maxHeight : dart.notNull(constraints.maxHeight) * 9.0 / 16.0});
    }
    getPositionForChild(size, childSize) {
      if (size == null) dart.nullFailed(I[51], 326, 35, "size");
      if (childSize == null) dart.nullFailed(I[51], 326, 46, "childSize");
      return new ui.Offset.new(0.0, dart.notNull(size.height) - dart.notNull(childSize.height) * dart.notNull(this.progress));
    }
    shouldRelayout(oldDelegate) {
      bottomsheet$._GetModalBottomSheetLayout.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(I[51], 331, 50, "oldDelegate");
      return this.progress != oldDelegate.progress;
    }
  };
  (bottomsheet$._GetModalBottomSheetLayout.new = function(progress, isScrollControlled) {
    if (progress == null) dart.nullFailed(I[51], 308, 35, "progress");
    if (isScrollControlled == null) dart.nullFailed(I[51], 308, 50, "isScrollControlled");
    this.progress = progress;
    this.isScrollControlled = isScrollControlled;
    bottomsheet$._GetModalBottomSheetLayout.__proto__.new.call(this);
    ;
  }).prototype = bottomsheet$._GetModalBottomSheetLayout.prototype;
  dart.addTypeTests(bottomsheet$._GetModalBottomSheetLayout);
  dart.addTypeCaches(bottomsheet$._GetModalBottomSheetLayout);
  dart.setMethodSignature(bottomsheet$._GetModalBottomSheetLayout, () => ({
    __proto__: dart.getMethods(bottomsheet$._GetModalBottomSheetLayout.__proto__),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(bottomsheet$._GetModalBottomSheetLayout, I[52]);
  dart.setFieldSignature(bottomsheet$._GetModalBottomSheetLayout, () => ({
    __proto__: dart.getFields(bottomsheet$._GetModalBottomSheetLayout.__proto__),
    progress: dart.finalFieldType(core.double),
    isScrollControlled: dart.finalFieldType(core.bool)
  }));
  extension_instance['Inst|lazyPut'] = function Inst$124lazyPut(S, $this, builder, opts) {
    if ($this == null) dart.nullFailed(I[53], 30, 8, "#this");
    if (builder == null) dart.nullFailed(I[53], 30, 46, "builder");
    let tag = opts && 'tag' in opts ? opts.tag : null;
    let fenix = opts && 'fenix' in opts ? opts.fenix : false;
    if (fenix == null) dart.nullFailed(I[53], 31, 26, "fenix");
    get_instance.GetInstance.new().lazyPut(S, builder, {tag: tag, fenix: fenix});
  };
  extension_instance['Inst|get#lazyPut'] = function Inst$124get$35lazyPut($this) {
    if ($this == null) dart.nullFailed(I[53], 30, 8, "#this");
    return dart.fn((S, builder, opts) => {
      if (builder == null) dart.nullFailed(I[53], 30, 46, "builder");
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let fenix = opts && 'fenix' in opts ? opts.fenix : false;
      if (fenix == null) dart.nullFailed(I[53], 31, 26, "fenix");
      return extension_instance['Inst|lazyPut'](S, $this, builder, {tag: tag, fenix: fenix});
    }, T$.Fn__Tovoid$1());
  };
  extension_instance['Inst|putAsync'] = function Inst$124putAsync(S, $this, builder, opts) {
    if ($this == null) dart.nullFailed(I[53], 42, 13, "#this");
    if (builder == null) dart.nullFailed(I[53], 42, 57, "builder");
    let tag = opts && 'tag' in opts ? opts.tag : null;
    let permanent = opts && 'permanent' in opts ? opts.permanent : false;
    if (permanent == null) dart.nullFailed(I[53], 43, 30, "permanent");
    return async.async(S, function* Inst$124putAsync() {
      return get_instance.GetInstance.new().putAsync(S, builder, {tag: tag, permanent: permanent});
    });
  };
  extension_instance['Inst|get#putAsync'] = function Inst$124get$35putAsync($this) {
    if ($this == null) dart.nullFailed(I[53], 42, 13, "#this");
    return dart.fn((S, builder, opts) => {
      if (builder == null) dart.nullFailed(I[53], 42, 57, "builder");
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let permanent = opts && 'permanent' in opts ? opts.permanent : false;
      if (permanent == null) dart.nullFailed(I[53], 43, 30, "permanent");
      return extension_instance['Inst|putAsync'](S, $this, builder, {tag: tag, permanent: permanent});
    }, T$.Fn__ToFutureOfS());
  };
  extension_instance['Inst|create'] = function Inst$124create(S, $this, builder, opts) {
    if ($this == null) dart.nullFailed(I[53], 63, 8, "#this");
    if (builder == null) dart.nullFailed(I[53], 63, 45, "builder");
    let tag = opts && 'tag' in opts ? opts.tag : null;
    let permanent = opts && 'permanent' in opts ? opts.permanent : true;
    if (permanent == null) dart.nullFailed(I[53], 64, 30, "permanent");
    return get_instance.GetInstance.new().create(S, builder, {tag: tag, permanent: permanent});
  };
  extension_instance['Inst|get#create'] = function Inst$124get$35create($this) {
    if ($this == null) dart.nullFailed(I[53], 63, 8, "#this");
    return dart.fn((S, builder, opts) => {
      if (builder == null) dart.nullFailed(I[53], 63, 45, "builder");
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let permanent = opts && 'permanent' in opts ? opts.permanent : true;
      if (permanent == null) dart.nullFailed(I[53], 64, 30, "permanent");
      return extension_instance['Inst|create'](S, $this, builder, {tag: tag, permanent: permanent});
    }, T$.Fn__Tovoid$2());
  };
  extension_instance['Inst|find'] = function Inst$124find(S, $this, opts) {
    if ($this == null) dart.nullFailed(I[53], 70, 5, "#this");
    let tag = opts && 'tag' in opts ? opts.tag : null;
    return get_instance.GetInstance.new().find(S, {tag: tag});
  };
  extension_instance['Inst|get#find'] = function Inst$124get$35find($this) {
    if ($this == null) dart.nullFailed(I[53], 70, 5, "#this");
    return dart.fn((S, opts) => {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      return extension_instance['Inst|find'](S, $this, {tag: tag});
    }, T$.__ToS());
  };
  extension_instance['Inst|put'] = function Inst$124put(S, $this, dependency, opts) {
    if ($this == null) dart.nullFailed(I[53], 86, 5, "#this");
    let tag = opts && 'tag' in opts ? opts.tag : null;
    let permanent = opts && 'permanent' in opts ? opts.permanent : false;
    if (permanent == null) dart.nullFailed(I[53], 88, 16, "permanent");
    let builder = opts && 'builder' in opts ? opts.builder : null;
    return get_instance.GetInstance.new().put(S, dependency, {tag: tag, permanent: permanent});
  };
  extension_instance['Inst|get#put'] = function Inst$124get$35put($this) {
    if ($this == null) dart.nullFailed(I[53], 86, 5, "#this");
    return dart.fn((S, dependency, opts) => {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let permanent = opts && 'permanent' in opts ? opts.permanent : false;
      if (permanent == null) dart.nullFailed(I[53], 88, 16, "permanent");
      let builder = opts && 'builder' in opts ? opts.builder : null;
      return extension_instance['Inst|put'](S, $this, dependency, {tag: tag, permanent: permanent, builder: builder});
    }, T$.S__ToS());
  };
  extension_instance['Inst|delete'] = function Inst$124delete(S, $this, opts) {
    if ($this == null) dart.nullFailed(I[53], 112, 16, "#this");
    let tag = opts && 'tag' in opts ? opts.tag : null;
    let force = opts && 'force' in opts ? opts.force : false;
    if (force == null) dart.nullFailed(I[53], 112, 45, "force");
    return async.async(core.bool, function* Inst$124delete() {
      return get_instance.GetInstance.new().delete(S, {tag: tag, force: force});
    });
  };
  extension_instance['Inst|get#delete'] = function Inst$124get$35delete($this) {
    if ($this == null) dart.nullFailed(I[53], 112, 16, "#this");
    return dart.fn((S, opts) => {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let force = opts && 'force' in opts ? opts.force : false;
      if (force == null) dart.nullFailed(I[53], 112, 45, "force");
      return extension_instance['Inst|delete'](S, $this, {tag: tag, force: force});
    }, T$.__ToFutureOfbool());
  };
  extension_instance['Inst|deleteAll'] = function Inst$124deleteAll($this, opts) {
    if ($this == null) dart.nullFailed(I[53], 119, 16, "#this");
    let force = opts && 'force' in opts ? opts.force : false;
    if (force == null) dart.nullFailed(I[53], 119, 32, "force");
    return async.async(dart.void, function* Inst$124deleteAll() {
      return get_instance.GetInstance.new().deleteAll({force: force});
    });
  };
  extension_instance['Inst|get#deleteAll'] = function Inst$124get$35deleteAll($this) {
    if ($this == null) dart.nullFailed(I[53], 119, 16, "#this");
    return dart.fn(opts => {
      let force = opts && 'force' in opts ? opts.force : false;
      if (force == null) dart.nullFailed(I[53], 119, 32, "force");
      return extension_instance['Inst|deleteAll']($this, {force: force});
    }, T$.__ToFutureOfvoid());
  };
  extension_instance['Inst|reloadAll'] = function Inst$124reloadAll($this, opts) {
    if ($this == null) dart.nullFailed(I[53], 122, 8, "#this");
    let force = opts && 'force' in opts ? opts.force : false;
    if (force == null) dart.nullFailed(I[53], 122, 24, "force");
    return get_instance.GetInstance.new().reloadAll({force: force});
  };
  extension_instance['Inst|get#reloadAll'] = function Inst$124get$35reloadAll($this) {
    if ($this == null) dart.nullFailed(I[53], 122, 8, "#this");
    return dart.fn(opts => {
      let force = opts && 'force' in opts ? opts.force : false;
      if (force == null) dart.nullFailed(I[53], 122, 24, "force");
      return extension_instance['Inst|reloadAll']($this, {force: force});
    }, T$.__Tovoid$3());
  };
  extension_instance['Inst|reload'] = function Inst$124reload(S, $this, opts) {
    if ($this == null) dart.nullFailed(I[53], 124, 8, "#this");
    let tag = opts && 'tag' in opts ? opts.tag : null;
    let key = opts && 'key' in opts ? opts.key : null;
    let force = opts && 'force' in opts ? opts.force : false;
    if (force == null) dart.nullFailed(I[53], 124, 50, "force");
    return get_instance.GetInstance.new().reload(S, {tag: tag, key: key, force: force});
  };
  extension_instance['Inst|get#reload'] = function Inst$124get$35reload($this) {
    if ($this == null) dart.nullFailed(I[53], 124, 8, "#this");
    return dart.fn((S, opts) => {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let key = opts && 'key' in opts ? opts.key : null;
      let force = opts && 'force' in opts ? opts.force : false;
      if (force == null) dart.nullFailed(I[53], 124, 50, "force");
      return extension_instance['Inst|reload'](S, $this, {tag: tag, key: key, force: force});
    }, T$.__Tovoid$4());
  };
  extension_instance['Inst|isRegistered'] = function Inst$124isRegistered(S, $this, opts) {
    if ($this == null) dart.nullFailed(I[53], 129, 8, "#this");
    let tag = opts && 'tag' in opts ? opts.tag : null;
    return get_instance.GetInstance.new().isRegistered(S, {tag: tag});
  };
  extension_instance['Inst|get#isRegistered'] = function Inst$124get$35isRegistered($this) {
    if ($this == null) dart.nullFailed(I[53], 129, 8, "#this");
    return dart.fn((S, opts) => {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      return extension_instance['Inst|isRegistered'](S, $this, {tag: tag});
    }, T$.__Tobool());
  };
  extension_instance['Inst|isPrepared'] = function Inst$124isPrepared(S, $this, opts) {
    if ($this == null) dart.nullFailed(I[53], 135, 8, "#this");
    let tag = opts && 'tag' in opts ? opts.tag : null;
    return get_instance.GetInstance.new().isPrepared(S, {tag: tag});
  };
  extension_instance['Inst|get#isPrepared'] = function Inst$124get$35isPrepared($this) {
    if ($this == null) dart.nullFailed(I[53], 135, 8, "#this");
    return dart.fn((S, opts) => {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      return extension_instance['Inst|isPrepared'](S, $this, {tag: tag});
    }, T$.__Tobool());
  };
  extension_instance['Inst|replace'] = function Inst$124replace(P, $this, child, opts) {
    let t191;
    if ($this == null) dart.nullFailed(I[53], 140, 8, "#this");
    let tag = opts && 'tag' in opts ? opts.tag : null;
    let info = get_instance.GetInstance.new().getInstanceInfo(P, {tag: tag});
    let permanent = (t191 = info.isPermanent, t191 == null ? false : t191);
    extension_instance['Inst|delete'](P, $this, {tag: tag, force: permanent});
    extension_instance['Inst|put'](P, $this, child, {tag: tag, permanent: permanent});
  };
  extension_instance['Inst|get#replace'] = function Inst$124get$35replace($this) {
    if ($this == null) dart.nullFailed(I[53], 140, 8, "#this");
    return dart.fn((P, child, opts) => {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      return extension_instance['Inst|replace'](P, $this, child, {tag: tag});
    }, T$.P__Tovoid());
  };
  extension_instance['Inst|lazyReplace'] = function Inst$124lazyReplace(P, $this, builder, opts) {
    let t193, t193$;
    if ($this == null) dart.nullFailed(I[53], 154, 8, "#this");
    if (builder == null) dart.nullFailed(I[53], 154, 50, "builder");
    let tag = opts && 'tag' in opts ? opts.tag : null;
    let fenix = opts && 'fenix' in opts ? opts.fenix : null;
    let info = get_instance.GetInstance.new().getInstanceInfo(P, {tag: tag});
    let permanent = (t193 = info.isPermanent, t193 == null ? false : t193);
    extension_instance['Inst|delete'](P, $this, {tag: tag, force: permanent});
    extension_instance['Inst|lazyPut'](P, $this, builder, {tag: tag, fenix: (t193$ = fenix, t193$ == null ? permanent : t193$)});
  };
  extension_instance['Inst|get#lazyReplace'] = function Inst$124get$35lazyReplace($this) {
    if ($this == null) dart.nullFailed(I[53], 154, 8, "#this");
    return dart.fn((P, builder, opts) => {
      if (builder == null) dart.nullFailed(I[53], 154, 50, "builder");
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let fenix = opts && 'fenix' in opts ? opts.fenix : null;
      return extension_instance['Inst|lazyReplace'](P, $this, builder, {tag: tag, fenix: fenix});
    }, T$.Fn__Tovoid$3());
  };
  const _is_RouterReportManager_default = Symbol('_is_RouterReportManager_default');
  router_report.RouterReportManager$ = dart.generic(T => {
    class RouterReportManager extends core.Object {
      printInstanceStack() {
        let t195, t194;
        t194 = get_main.Get;
        t195 = dart.toString(router_report.RouterReportManager._routesKey);
        t194.log(t195);
      }
      static reportCurrentRoute(newRoute) {
        if (newRoute == null) dart.nullFailed(I[54], 25, 40, "newRoute");
        router_report.RouterReportManager._current = newRoute;
      }
      static reportDependencyLinkedToRoute(depedencyKey) {
        if (depedencyKey == null) dart.nullFailed(I[54], 31, 52, "depedencyKey");
        if (router_report.RouterReportManager._current == null) return;
        if (dart.test(router_report.RouterReportManager._routesKey[$containsKey](router_report.RouterReportManager._current))) {
          dart.nullCheck(router_report.RouterReportManager._routesKey[$_get](dart.nullCheck(router_report.RouterReportManager._current)))[$add](depedencyKey);
        } else {
          router_report.RouterReportManager._routesKey[$_set](router_report.RouterReportManager._current, T$.JSArrayOfString().of([depedencyKey]));
        }
      }
      static clearRouteKeys() {
        router_report.RouterReportManager._routesKey[$clear]();
        router_report.RouterReportManager._routesByCreate[$clear]();
      }
      static appendRouteByCreate(i) {
        let t195, t194, t194$;
        if (i == null) dart.nullFailed(I[54], 45, 52, "i");
        t194 = router_report.RouterReportManager._routesByCreate;
        t195 = router_report.RouterReportManager._current;
        t194[$_get](t195) == null ? t194[$_set](t195, new (T$._HashSetOfFunction()).new()) : null;
        dart.nullCheck(router_report.RouterReportManager._routesByCreate[$_get](router_report.RouterReportManager._current)).add((t194$ = i.onDelete, t194$ == null ? null : dart.bind(t194$, 'call')));
      }
      static reportRouteDispose(disposed) {
        if (disposed == null) dart.nullFailed(I[54], 51, 40, "disposed");
        if (get_main.Get.smartManagement != smart_management.SmartManagement.onlyBuilder) {
          dart.nullCheck(binding.WidgetsBinding.instance).addPostFrameCallback(dart.fn(_ => {
            if (_ == null) dart.nullFailed(I[54], 53, 54, "_");
            router_report.RouterReportManager._removeDependencyByRoute(disposed);
          }, T$.DurationTovoid()));
        }
      }
      static reportRouteWillDispose(disposed) {
        let t194;
        if (disposed == null) dart.nullFailed(I[54], 59, 44, "disposed");
        let keysToRemove = T$.JSArrayOfString().of([]);
        t194 = router_report.RouterReportManager._routesKey[$_get](disposed);
        t194 == null ? null : t194[$forEach](dart.bind(keysToRemove, $add));
        if (dart.test(router_report.RouterReportManager._routesByCreate[$containsKey](disposed))) {
          for (let onClose of dart.nullCheck(router_report.RouterReportManager._routesByCreate[$_get](disposed))) {
            dart.dcall(onClose, []);
          }
          dart.nullCheck(router_report.RouterReportManager._routesByCreate[$_get](disposed)).clear();
          router_report.RouterReportManager._routesByCreate[$remove](disposed);
        }
        for (let element of keysToRemove) {
          get_instance.GetInstance.new().markAsDirty(dart.dynamic, {key: element});
        }
        keysToRemove[$clear]();
      }
      static _removeDependencyByRoute(routeName) {
        let t194, t194$;
        if (routeName == null) dart.nullFailed(I[54], 88, 46, "routeName");
        let keysToRemove = T$.JSArrayOfString().of([]);
        t194 = router_report.RouterReportManager._routesKey[$_get](routeName);
        t194 == null ? null : t194[$forEach](dart.bind(keysToRemove, $add));
        if (dart.test(router_report.RouterReportManager._routesByCreate[$containsKey](routeName))) {
          for (let onClose of dart.nullCheck(router_report.RouterReportManager._routesByCreate[$_get](routeName))) {
            dart.dcall(onClose, []);
          }
          dart.nullCheck(router_report.RouterReportManager._routesByCreate[$_get](routeName)).clear();
          router_report.RouterReportManager._routesByCreate[$remove](routeName);
        }
        for (let element of keysToRemove) {
          let value = get_instance.GetInstance.new().delete(dart.dynamic, {key: element});
          if (dart.test(value)) {
            t194$ = router_report.RouterReportManager._routesKey[$_get](routeName);
            t194$ == null ? null : t194$[$remove](element);
          }
        }
        keysToRemove[$clear]();
      }
    }
    (RouterReportManager.new = function() {
      ;
    }).prototype = RouterReportManager.prototype;
    dart.addTypeTests(RouterReportManager);
    RouterReportManager.prototype[_is_RouterReportManager_default] = true;
    dart.addTypeCaches(RouterReportManager);
    dart.setMethodSignature(RouterReportManager, () => ({
      __proto__: dart.getMethods(RouterReportManager.__proto__),
      printInstanceStack: dart.fnType(dart.void, [])
    }));
    dart.setLibraryUri(RouterReportManager, I[55]);
    return RouterReportManager;
  });
  router_report.RouterReportManager = router_report.RouterReportManager$();
  dart.defineLazy(router_report.RouterReportManager, {
    /*router_report.RouterReportManager._routesKey*/get _routesKey() {
      return new (T$.LinkedMapOfRouteN$ListOfString()).new();
    },
    /*router_report.RouterReportManager._routesByCreate*/get _routesByCreate() {
      return new (T$.LinkedMapOfRouteN$HashSetOfFunction()).new();
    },
    /*router_report.RouterReportManager._current*/get _current() {
      return null;
    },
    set _current(_) {}
  }, false);
  dart.addTypeTests(router_report.RouterReportManager, _is_RouterReportManager_default);
  var isPermanent$ = dart.privateName(get_instance, "InstanceInfo.isPermanent");
  var isSingleton$ = dart.privateName(get_instance, "InstanceInfo.isSingleton");
  var isRegistered$ = dart.privateName(get_instance, "InstanceInfo.isRegistered");
  var isPrepared$ = dart.privateName(get_instance, "InstanceInfo.isPrepared");
  var isInit$ = dart.privateName(get_instance, "InstanceInfo.isInit");
  get_instance.InstanceInfo = class InstanceInfo extends core.Object {
    get isPermanent() {
      return this[isPermanent$];
    }
    set isPermanent(value) {
      super.isPermanent = value;
    }
    get isSingleton() {
      return this[isSingleton$];
    }
    set isSingleton(value) {
      super.isSingleton = value;
    }
    get isRegistered() {
      return this[isRegistered$];
    }
    set isRegistered(value) {
      super.isRegistered = value;
    }
    get isPrepared() {
      return this[isPrepared$];
    }
    set isPrepared(value) {
      super.isPrepared = value;
    }
    get isInit() {
      return this[isInit$];
    }
    set isInit(value) {
      super.isInit = value;
    }
    get isCreate() {
      return !dart.nullCheck(this.isSingleton);
    }
  };
  (get_instance.InstanceInfo.new = function(opts) {
    let isPermanent = opts && 'isPermanent' in opts ? opts.isPermanent : null;
    let isSingleton = opts && 'isSingleton' in opts ? opts.isSingleton : null;
    let isRegistered = opts && 'isRegistered' in opts ? opts.isRegistered : null;
    if (isRegistered == null) dart.nullFailed(I[56], 17, 19, "isRegistered");
    let isPrepared = opts && 'isPrepared' in opts ? opts.isPrepared : null;
    if (isPrepared == null) dart.nullFailed(I[56], 18, 19, "isPrepared");
    let isInit = opts && 'isInit' in opts ? opts.isInit : null;
    this[isPermanent$] = isPermanent;
    this[isSingleton$] = isSingleton;
    this[isRegistered$] = isRegistered;
    this[isPrepared$] = isPrepared;
    this[isInit$] = isInit;
    ;
  }).prototype = get_instance.InstanceInfo.prototype;
  dart.addTypeTests(get_instance.InstanceInfo);
  dart.addTypeCaches(get_instance.InstanceInfo);
  dart.setGetterSignature(get_instance.InstanceInfo, () => ({
    __proto__: dart.getGetters(get_instance.InstanceInfo.__proto__),
    isCreate: core.bool
  }));
  dart.setLibraryUri(get_instance.InstanceInfo, I[57]);
  dart.setFieldSignature(get_instance.InstanceInfo, () => ({
    __proto__: dart.getFields(get_instance.InstanceInfo.__proto__),
    isPermanent: dart.finalFieldType(dart.nullable(core.bool)),
    isSingleton: dart.finalFieldType(dart.nullable(core.bool)),
    isRegistered: dart.finalFieldType(core.bool),
    isPrepared: dart.finalFieldType(core.bool),
    isInit: dart.finalFieldType(dart.nullable(core.bool))
  }));
  var _insert = dart.privateName(get_instance, "_insert");
  var _getKey = dart.privateName(get_instance, "_getKey");
  var _startController = dart.privateName(get_instance, "_startController");
  var _initDependencies = dart.privateName(get_instance, "_initDependencies");
  var _getDependency = dart.privateName(get_instance, "_getDependency");
  get_instance.GetInstance = class GetInstance extends core.Object {
    static new() {
      let t194;
      t194 = get_instance.GetInstance._getInstance;
      return t194 == null ? get_instance.GetInstance._getInstance = new get_instance.GetInstance.__() : t194;
    }
    call(T) {
      return this.find(T);
    }
    injector(S, fn, opts) {
      if (fn == null) dart.nullFailed(I[56], 41, 32, "fn");
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let fenix = opts && 'fenix' in opts ? opts.fenix : false;
      if (fenix == null) dart.nullFailed(I[56], 43, 10, "fenix");
      this.lazyPut(S, dart.fn(() => fn(this), dart.fnType(S, [])), {tag: tag, fenix: fenix});
    }
    putAsync(S, builder, opts) {
      if (builder == null) dart.nullFailed(I[56], 58, 37, "builder");
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let permanent = opts && 'permanent' in opts ? opts.permanent : false;
      if (permanent == null) dart.nullFailed(I[56], 60, 10, "permanent");
      return async.async(S, (function* putAsync() {
        return this.put(S, yield builder(), {tag: tag, permanent: permanent});
      }).bind(this));
    }
    put(S, dependency, opts) {
      let t194;
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let permanent = opts && 'permanent' in opts ? opts.permanent : false;
      if (permanent == null) dart.nullFailed(I[56], 78, 10, "permanent");
      let builder = opts && 'builder' in opts ? opts.builder : null;
      this[_insert](S, {isSingleton: true, name: tag, permanent: permanent, builder: (t194 = builder, t194 == null ? dart.fn(() => dependency, dart.fnType(S, [])) : t194)});
      return this.find(S, {tag: tag});
    }
    lazyPut(S, builder, opts) {
      let t194;
      if (builder == null) dart.nullFailed(I[56], 112, 32, "builder");
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let fenix = opts && 'fenix' in opts ? opts.fenix : null;
      let permanent = opts && 'permanent' in opts ? opts.permanent : false;
      if (permanent == null) dart.nullFailed(I[56], 115, 10, "permanent");
      this[_insert](S, {isSingleton: true, name: tag, permanent: permanent, builder: builder, fenix: (t194 = fenix, t194 == null ? get_main.Get.smartManagement == smart_management.SmartManagement.keepFactory : t194)});
    }
    create(S, builder, opts) {
      if (builder == null) dart.nullFailed(I[56], 143, 32, "builder");
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let permanent = opts && 'permanent' in opts ? opts.permanent : true;
      if (permanent == null) dart.nullFailed(I[56], 145, 10, "permanent");
      this[_insert](S, {isSingleton: false, name: tag, builder: builder, permanent: permanent});
    }
    [_insert](S, opts) {
      let isSingleton = opts && 'isSingleton' in opts ? opts.isSingleton : null;
      let name = opts && 'name' in opts ? opts.name : null;
      let permanent = opts && 'permanent' in opts ? opts.permanent : false;
      if (permanent == null) dart.nullFailed(I[56], 159, 10, "permanent");
      let builder = opts && 'builder' in opts ? opts.builder : null;
      if (builder == null) dart.nullFailed(I[56], 160, 41, "builder");
      let fenix = opts && 'fenix' in opts ? opts.fenix : false;
      if (fenix == null) dart.nullFailed(I[56], 161, 10, "fenix");
      let key = this[_getKey](dart.wrapType(S), name);
      if (dart.test(get_instance.GetInstance._singl[$containsKey](key))) {
        let dep = get_instance.GetInstance._singl[$_get](key);
        if (dep != null && dart.test(dep.isDirty)) {
          get_instance.GetInstance._singl[$_set](key, new (get_instance._InstanceBuilderFactory$(S)).new(isSingleton, builder, permanent, false, fenix, name, {lateRemove: get_instance._InstanceBuilderFactory$(S).as(dep)}));
        }
      } else {
        get_instance.GetInstance._singl[$_set](key, new (get_instance._InstanceBuilderFactory$(S)).new(isSingleton, builder, permanent, false, fenix, name));
      }
    }
    [_initDependencies](S, opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let key = this[_getKey](dart.wrapType(S), name);
      let isInit = dart.nullCheck(get_instance.GetInstance._singl[$_get](key)).isInit;
      let i = null;
      if (!dart.test(isInit)) {
        i = this[_startController](S, {tag: name});
        if (dart.nullCheck(dart.nullCheck(get_instance.GetInstance._singl[$_get](key)).isSingleton)) {
          dart.nullCheck(get_instance.GetInstance._singl[$_get](key)).isInit = true;
          if (get_main.Get.smartManagement != smart_management.SmartManagement.onlyBuilder) {
            router_report.RouterReportManager.reportDependencyLinkedToRoute(this[_getKey](dart.wrapType(S), name));
          }
        }
      }
      return i;
    }
    getInstanceInfo(S, opts) {
      let t194, t194$, t194$0, t194$1, t194$2;
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let build = this[_getDependency](S, {tag: tag});
      return new get_instance.InstanceInfo.new({isPermanent: (t194 = build, t194 == null ? null : t194.permanent), isSingleton: (t194$ = build, t194$ == null ? null : t194$.isSingleton), isRegistered: this.isRegistered(S, {tag: tag}), isPrepared: !dart.test((t194$1 = (t194$0 = build, t194$0 == null ? null : t194$0.isInit), t194$1 == null ? true : t194$1)), isInit: (t194$2 = build, t194$2 == null ? null : t194$2.isInit)});
    }
    [_getDependency](S, opts) {
      let t194, t196, t195, t194$;
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let key = opts && 'key' in opts ? opts.key : null;
      let newKey = (t194 = key, t194 == null ? this[_getKey](dart.wrapType(S), tag) : t194);
      if (!dart.test(get_instance.GetInstance._singl[$containsKey](newKey))) {
        t194$ = get_main.Get;
        t195 = "Instance \"" + dart.str(newKey) + "\" is not registered.";
        t196 = true;
        t194$.log(t195, {isError: t196});
        return null;
      } else {
        return get_instance.GetInstance._singl[$_get](newKey);
      }
    }
    markAsDirty(S, opts) {
      let t194;
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let key = opts && 'key' in opts ? opts.key : null;
      let newKey = (t194 = key, t194 == null ? this[_getKey](dart.wrapType(S), tag) : t194);
      if (dart.test(get_instance.GetInstance._singl[$containsKey](newKey))) {
        let dep = get_instance.GetInstance._singl[$_get](newKey);
        if (dep != null) {
          dep.isDirty = true;
        }
      }
    }
    [_startController](S, opts) {
      let t195, t194, t195$, t194$;
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let key = this[_getKey](dart.wrapType(S), tag);
      let i = S.as(dart.nullCheck(get_instance.GetInstance._singl[$_get](key)).getDependency());
      if (lifecycle.GetLifeCycleBase.is(i)) {
        i.onStart.call();
        if (tag == null) {
          t194 = get_main.Get;
          t195 = "Instance \"" + dart.str(dart.wrapType(S)) + "\" has been initialized";
          t194.log(t195);
        } else {
          t194$ = get_main.Get;
          t195$ = "Instance \"" + dart.str(dart.wrapType(S)) + "\" with tag \"" + dart.str(tag) + "\" has been initialized";
          t194$.log(t195$);
        }
        if (!dart.nullCheck(dart.nullCheck(get_instance.GetInstance._singl[$_get](key)).isSingleton)) {
          router_report.RouterReportManager.appendRouteByCreate(i);
        }
      }
      return i;
    }
    putOrFind(S, dep, opts) {
      if (dep == null) dart.nullFailed(I[56], 266, 45, "dep");
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let key = this[_getKey](dart.wrapType(S), tag);
      if (dart.test(get_instance.GetInstance._singl[$containsKey](key))) {
        return S.as(dart.nullCheck(get_instance.GetInstance._singl[$_get](key)).getDependency());
      } else {
        return get_instance.GetInstance.new().put(S, dep(), {tag: tag});
      }
    }
    find(S, opts) {
      let t194;
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let key = this[_getKey](dart.wrapType(S), tag);
      if (dart.test(this.isRegistered(S, {tag: tag}))) {
        let dep = get_instance.GetInstance._singl[$_get](key);
        if (dep == null) {
          if (tag == null) {
            dart.throw("Class \"" + dart.str(dart.wrapType(S)) + "\" is not registered");
          } else {
            dart.throw("Class \"" + dart.str(dart.wrapType(S)) + "\" with tag \"" + dart.str(tag) + "\" is not registered");
          }
        }
        let i = this[_initDependencies](S, {name: tag});
        t194 = i;
        return t194 == null ? S.as(dep.getDependency()) : t194;
      } else {
        dart.throw("\"" + dart.str(dart.wrapType(S)) + "\" not found. You need to call \"Get.put(" + dart.str(dart.wrapType(S)) + "())\" or \"Get.lazyPut(()=>" + dart.str(dart.wrapType(S)) + "())\"");
      }
    }
    [_getKey](type, name) {
      if (type == null) dart.nullFailed(I[56], 311, 23, "type");
      return name == null ? dart.toString(type) : dart.notNull(dart.toString(type)) + dart.notNull(name);
    }
    resetInstance(opts) {
      let clearFactory = opts && 'clearFactory' in opts ? opts.clearFactory : true;
      if (clearFactory == null) dart.nullFailed(I[56], 323, 25, "clearFactory");
      let clearRouteBindings = opts && 'clearRouteBindings' in opts ? opts.clearRouteBindings : true;
      if (clearRouteBindings == null) dart.nullFailed(I[56], 323, 51, "clearRouteBindings");
      if (dart.test(clearRouteBindings)) router_report.RouterReportManager.clearRouteKeys();
      get_instance.GetInstance._singl[$clear]();
      return true;
    }
    delete(S, opts) {
      let t194, t196, t195, t194$, t194$0, t196$, t195$, t194$1, t195$0, t194$2, t195$1, t194$3, t196$0, t195$2, t194$4, t195$3, t194$5;
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let key = opts && 'key' in opts ? opts.key : null;
      let force = opts && 'force' in opts ? opts.force : false;
      if (force == null) dart.nullFailed(I[56], 348, 50, "force");
      let newKey = (t194 = key, t194 == null ? this[_getKey](dart.wrapType(S), tag) : t194);
      if (!dart.test(get_instance.GetInstance._singl[$containsKey](newKey))) {
        t194$ = get_main.Get;
        t195 = "Instance \"" + dart.str(newKey) + "\" already removed.";
        t196 = true;
        t194$.log(t195, {isError: t196});
        return false;
      }
      let dep = get_instance.GetInstance._singl[$_get](newKey);
      if (dep == null) return false;
      let builder = null;
      if (dart.test(dep.isDirty)) {
        builder = (t194$0 = dep.lateRemove, t194$0 == null ? dep : t194$0);
      } else {
        builder = dep;
      }
      if (dart.test(builder.permanent) && !dart.test(force)) {
        t194$1 = get_main.Get;
        t195$ = "\"" + dart.str(newKey) + "\" has been marked as permanent, SmartManagement is not authorized to delete it.";
        t196$ = true;
        t194$1.log(t195$, {isError: t196$});
        return false;
      }
      let i = builder.dependency;
      if (lifecycle.GetxServiceMixin.is(i) && !dart.test(force)) {
        return false;
      }
      if (lifecycle.GetLifeCycleBase.is(i)) {
        i.onDelete.call();
        t194$2 = get_main.Get;
        t195$0 = "\"" + dart.str(newKey) + "\" onDelete() called";
        t194$2.log(t195$0);
      }
      if (dart.test(builder.fenix)) {
        builder.dependency = null;
        builder.isInit = false;
        return true;
      } else {
        if (dep.lateRemove != null) {
          dep.lateRemove = null;
          t194$3 = get_main.Get;
          t195$1 = "\"" + dart.str(newKey) + "\" deleted from memory";
          t194$3.log(t195$1);
          return false;
        } else {
          get_instance.GetInstance._singl[$remove](newKey);
          if (dart.test(get_instance.GetInstance._singl[$containsKey](newKey))) {
            t194$4 = get_main.Get;
            t195$2 = "Error removing object \"" + dart.str(newKey) + "\"";
            t196$0 = true;
            t194$4.log(t195$2, {isError: t196$0});
          } else {
            t194$5 = get_main.Get;
            t195$3 = "\"" + dart.str(newKey) + "\" deleted from memory";
            t194$5.log(t195$3);
          }
          return true;
        }
      }
    }
    deleteAll(opts) {
      let force = opts && 'force' in opts ? opts.force : false;
      if (force == null) dart.nullFailed(I[56], 411, 24, "force");
      let keys = get_instance.GetInstance._singl[$keys][$toList]();
      for (let key of keys) {
        this.delete(dart.dynamic, {key: key, force: force});
      }
    }
    reloadAll(opts) {
      let force = opts && 'force' in opts ? opts.force : false;
      if (force == null) dart.nullFailed(I[56], 418, 24, "force");
      get_instance.GetInstance._singl[$forEach](dart.fn((key, value) => {
        let t195, t194, t195$, t194$;
        if (key == null) dart.nullFailed(I[56], 419, 21, "key");
        if (value == null) dart.nullFailed(I[56], 419, 26, "value");
        if (dart.test(value.permanent) && !dart.test(force)) {
          t194 = get_main.Get;
          t195 = "Instance \"" + dart.str(key) + "\" is permanent. Skipping reload";
          t194.log(t195);
        } else {
          value.dependency = null;
          value.isInit = false;
          t194$ = get_main.Get;
          t195$ = "Instance \"" + dart.str(key) + "\" was reloaded.";
          t194$.log(t195$);
        }
      }, T$.StringAnd_InstanceBuilderFactoryTovoid()));
    }
    reload(S, opts) {
      let t194, t196, t195, t194$, t195$, t194$0, t195$0, t194$1;
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let key = opts && 'key' in opts ? opts.key : null;
      let force = opts && 'force' in opts ? opts.force : false;
      if (force == null) dart.nullFailed(I[56], 433, 10, "force");
      let newKey = (t194 = key, t194 == null ? this[_getKey](dart.wrapType(S), tag) : t194);
      let builder = this[_getDependency](S, {tag: tag, key: newKey});
      if (builder == null) return;
      if (dart.test(builder.permanent) && !dart.test(force)) {
        t194$ = get_main.Get;
        t195 = "Instance \"" + dart.str(newKey) + "\" is permanent. Use [force = true] to force the restart.";
        t196 = true;
        t194$.log(t195, {isError: t196});
        return;
      }
      let i = builder.dependency;
      if (lifecycle.GetxServiceMixin.is(i) && !dart.test(force)) {
        return;
      }
      if (lifecycle.GetLifeCycleBase.is(i)) {
        i.onDelete.call();
        t194$0 = get_main.Get;
        t195$ = "\"" + dart.str(newKey) + "\" onDelete() called";
        t194$0.log(t195$);
      }
      builder.dependency = null;
      builder.isInit = false;
      t194$1 = get_main.Get;
      t195$0 = "Instance \"" + dart.str(newKey) + "\" was restarted.";
      t194$1.log(t195$0);
    }
    isRegistered(S, opts) {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      return get_instance.GetInstance._singl[$containsKey](this[_getKey](dart.wrapType(S), tag));
    }
    isPrepared(S, opts) {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let newKey = this[_getKey](dart.wrapType(S), tag);
      let builder = this[_getDependency](S, {tag: tag, key: newKey});
      if (builder == null) {
        return false;
      }
      if (!dart.test(builder.isInit)) {
        return true;
      }
      return false;
    }
  };
  (get_instance.GetInstance.__ = function() {
    ;
  }).prototype = get_instance.GetInstance.prototype;
  dart.addTypeTests(get_instance.GetInstance);
  dart.addTypeCaches(get_instance.GetInstance);
  dart.setMethodSignature(get_instance.GetInstance, () => ({
    __proto__: dart.getMethods(get_instance.GetInstance.__proto__),
    call: dart.gFnType(T => [T, []], T => [dart.nullable(core.Object)]),
    injector: dart.gFnType(S => [dart.void, [dart.fnType(S, [get_instance.GetInstance])], {fenix: core.bool, tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    putAsync: dart.gFnType(S => [async.Future$(S), [dart.fnType(async.Future$(S), [])], {permanent: core.bool, tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    put: dart.gFnType(S => [S, [S], {builder: dart.nullable(dart.fnType(S, [])), permanent: core.bool, tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    lazyPut: dart.gFnType(S => [dart.void, [dart.fnType(S, [])], {fenix: dart.nullable(core.bool), permanent: core.bool, tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    create: dart.gFnType(S => [dart.void, [dart.fnType(S, [])], {permanent: core.bool, tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    [_insert]: dart.gFnType(S => [dart.void, [], {fenix: core.bool, isSingleton: dart.nullable(core.bool), name: dart.nullable(core.String), permanent: core.bool}, {builder: dart.fnType(S, [])}], S => [dart.nullable(core.Object)]),
    [_initDependencies]: dart.gFnType(S => [dart.nullable(S), [], {name: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    getInstanceInfo: dart.gFnType(S => [get_instance.InstanceInfo, [], {tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    [_getDependency]: dart.gFnType(S => [dart.nullable(get_instance._InstanceBuilderFactory), [], {key: dart.nullable(core.String), tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    markAsDirty: dart.gFnType(S => [dart.void, [], {key: dart.nullable(core.String), tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    [_startController]: dart.gFnType(S => [S, [], {tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    putOrFind: dart.gFnType(S => [S, [dart.fnType(S, [])], {tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    find: dart.gFnType(S => [S, [], {tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    [_getKey]: dart.fnType(core.String, [core.Type, dart.nullable(core.String)]),
    resetInstance: dart.fnType(core.bool, [], {clearFactory: core.bool, clearRouteBindings: core.bool}, {}),
    delete: dart.gFnType(S => [core.bool, [], {force: core.bool, key: dart.nullable(core.String), tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    deleteAll: dart.fnType(dart.void, [], {force: core.bool}, {}),
    reloadAll: dart.fnType(dart.void, [], {force: core.bool}, {}),
    reload: dart.gFnType(S => [dart.void, [], {force: core.bool, key: dart.nullable(core.String), tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    isRegistered: dart.gFnType(S => [core.bool, [], {tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    isPrepared: dart.gFnType(S => [core.bool, [], {tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(get_instance.GetInstance, I[57]);
  dart.defineLazy(get_instance.GetInstance, {
    /*get_instance.GetInstance._getInstance*/get _getInstance() {
      return null;
    },
    set _getInstance(_) {},
    /*get_instance.GetInstance._singl*/get _singl() {
      return new (T$.IdentityMapOfString$_InstanceBuilderFactory()).new();
    }
  }, false);
  var dependency = dart.privateName(get_instance, "_InstanceBuilderFactory.dependency");
  var builderFunc$ = dart.privateName(get_instance, "_InstanceBuilderFactory.builderFunc");
  var lateRemove$ = dart.privateName(get_instance, "_InstanceBuilderFactory.lateRemove");
  var _showInitLog = dart.privateName(get_instance, "_showInitLog");
  const _is__InstanceBuilderFactory_default = Symbol('_is__InstanceBuilderFactory_default');
  get_instance._InstanceBuilderFactory$ = dart.generic(S => {
    var SN = () => (SN = dart.constFn(dart.nullable(S)))();
    var VoidToS = () => (VoidToS = dart.constFn(dart.fnType(S, [])))();
    var _InstanceBuilderFactoryOfS = () => (_InstanceBuilderFactoryOfS = dart.constFn(get_instance._InstanceBuilderFactory$(S)))();
    var _InstanceBuilderFactoryNOfS = () => (_InstanceBuilderFactoryNOfS = dart.constFn(dart.nullable(_InstanceBuilderFactoryOfS())))();
    class _InstanceBuilderFactory extends core.Object {
      get dependency() {
        return this[dependency];
      }
      set dependency(value) {
        this[dependency] = SN().as(value);
      }
      get builderFunc() {
        return this[builderFunc$];
      }
      set builderFunc(value) {
        this[builderFunc$] = VoidToS().as(value);
      }
      get lateRemove() {
        return this[lateRemove$];
      }
      set lateRemove(value) {
        this[lateRemove$] = _InstanceBuilderFactoryNOfS().as(value);
      }
      [_showInitLog]() {
        let t195, t194, t195$, t194$;
        if (this.tag == null) {
          t194 = get_main.Get;
          t195 = "Instance \"" + dart.str(dart.wrapType(S)) + "\" has been created";
          t194.log(t195);
        } else {
          t194$ = get_main.Get;
          t195$ = "Instance \"" + dart.str(dart.wrapType(S)) + "\" has been created with tag \"" + dart.str(this.tag) + "\"";
          t194$.log(t195$);
        }
      }
      getDependency() {
        if (dart.nullCheck(this.isSingleton)) {
          if (this.dependency == null) {
            this[_showInitLog]();
            this.dependency = this.builderFunc();
          }
          return dart.nullCheck(this.dependency);
        } else {
          return this.builderFunc();
        }
      }
    }
    (_InstanceBuilderFactory.new = function(isSingleton, builderFunc, permanent, isInit, fenix, tag, opts) {
      if (builderFunc == null) dart.nullFailed(I[56], 523, 10, "builderFunc");
      if (permanent == null) dart.nullFailed(I[56], 524, 10, "permanent");
      if (isInit == null) dart.nullFailed(I[56], 525, 10, "isInit");
      if (fenix == null) dart.nullFailed(I[56], 526, 10, "fenix");
      let lateRemove = opts && 'lateRemove' in opts ? opts.lateRemove : null;
      this[dependency] = null;
      this.permanent = false;
      this.isInit = false;
      this.isDirty = false;
      this.isSingleton = isSingleton;
      this[builderFunc$] = builderFunc;
      this.permanent = permanent;
      this.isInit = isInit;
      this.fenix = fenix;
      this.tag = tag;
      this[lateRemove$] = lateRemove;
      ;
    }).prototype = _InstanceBuilderFactory.prototype;
    dart.addTypeTests(_InstanceBuilderFactory);
    _InstanceBuilderFactory.prototype[_is__InstanceBuilderFactory_default] = true;
    dart.addTypeCaches(_InstanceBuilderFactory);
    dart.setMethodSignature(_InstanceBuilderFactory, () => ({
      __proto__: dart.getMethods(_InstanceBuilderFactory.__proto__),
      [_showInitLog]: dart.fnType(dart.void, []),
      getDependency: dart.fnType(S, [])
    }));
    dart.setLibraryUri(_InstanceBuilderFactory, I[57]);
    dart.setFieldSignature(_InstanceBuilderFactory, () => ({
      __proto__: dart.getFields(_InstanceBuilderFactory.__proto__),
      isSingleton: dart.fieldType(dart.nullable(core.bool)),
      fenix: dart.fieldType(core.bool),
      dependency: dart.fieldType(dart.nullable(S)),
      builderFunc: dart.fieldType(dart.fnType(S, [])),
      permanent: dart.fieldType(core.bool),
      isInit: dart.fieldType(core.bool),
      lateRemove: dart.fieldType(dart.nullable(get_instance._InstanceBuilderFactory$(S))),
      isDirty: dart.fieldType(core.bool),
      tag: dart.fieldType(dart.nullable(core.String))
    }));
    return _InstanceBuilderFactory;
  });
  get_instance._InstanceBuilderFactory = get_instance._InstanceBuilderFactory$();
  dart.addTypeTests(get_instance._InstanceBuilderFactory, _is__InstanceBuilderFactory_default);
  bindings_interface.Bindings = class Bindings extends core.Object {};
  (bindings_interface.Bindings.new = function() {
    ;
  }).prototype = bindings_interface.Bindings.prototype;
  dart.addTypeTests(bindings_interface.Bindings);
  dart.addTypeCaches(bindings_interface.Bindings);
  dart.setLibraryUri(bindings_interface.Bindings, I[58]);
  var builder$8 = dart.privateName(bindings_interface, "BindingsBuilder.builder");
  const _is_BindingsBuilder_default = Symbol('_is_BindingsBuilder_default');
  bindings_interface.BindingsBuilder$ = dart.generic(T => {
    class BindingsBuilder extends bindings_interface.Bindings {
      get builder() {
        return this[builder$8];
      }
      set builder(value) {
        super.builder = value;
      }
      static put(builder, opts) {
        if (builder == null) dart.nullFailed(I[59], 44, 58, "builder");
        let tag = opts && 'tag' in opts ? opts.tag : null;
        let permanent = opts && 'permanent' in opts ? opts.permanent : false;
        if (permanent == null) dart.nullFailed(I[59], 45, 26, "permanent");
        return new (bindings_interface.BindingsBuilder$(T)).new(dart.fn(() => get_instance.GetInstance.new().put(T, builder(), {tag: tag, permanent: permanent}), T$.VoidTovoid()));
      }
      dependencies() {
        this.builder();
      }
    }
    (BindingsBuilder.new = function(builder) {
      if (builder == null) dart.nullFailed(I[59], 53, 24, "builder");
      this[builder$8] = builder;
      ;
    }).prototype = BindingsBuilder.prototype;
    dart.addTypeTests(BindingsBuilder);
    BindingsBuilder.prototype[_is_BindingsBuilder_default] = true;
    dart.addTypeCaches(BindingsBuilder);
    dart.setMethodSignature(BindingsBuilder, () => ({
      __proto__: dart.getMethods(BindingsBuilder.__proto__),
      dependencies: dart.fnType(dart.void, [])
    }));
    dart.setLibraryUri(BindingsBuilder, I[58]);
    dart.setFieldSignature(BindingsBuilder, () => ({
      __proto__: dart.getFields(BindingsBuilder.__proto__),
      builder: dart.finalFieldType(dart.fnType(dart.void, []))
    }));
    return BindingsBuilder;
  });
  bindings_interface.BindingsBuilder = bindings_interface.BindingsBuilder$();
  dart.addTypeTests(bindings_interface.BindingsBuilder, _is_BindingsBuilder_default);
  get_reset['GetResetExt|reset'] = function GetResetExt$124reset($this, opts) {
    if ($this == null) dart.nullFailed(I[60], 4, 8, "#this");
    let clearFactory = opts && 'clearFactory' in opts ? opts.clearFactory : true;
    if (clearFactory == null) dart.nullFailed(I[60], 5, 25, "clearFactory");
    let clearRouteBindings = opts && 'clearRouteBindings' in opts ? opts.clearRouteBindings : true;
    if (clearRouteBindings == null) dart.nullFailed(I[60], 5, 51, "clearRouteBindings");
    get_instance.GetInstance.new().resetInstance({clearRouteBindings: clearRouteBindings});
    extension_navigation['NavTwoExt|clearRouteTree'](get_main.Get);
    internacionalization$['LocalesIntl|clearTranslations'](get_main.Get);
    extension_navigation['GetNavigation|resetRootNavigator'](get_main.Get);
  };
  get_reset['GetResetExt|get#reset'] = function GetResetExt$124get$35reset($this) {
    if ($this == null) dart.nullFailed(I[60], 4, 8, "#this");
    return dart.fn(opts => {
      let clearFactory = opts && 'clearFactory' in opts ? opts.clearFactory : true;
      if (clearFactory == null) dart.nullFailed(I[60], 5, 25, "clearFactory");
      let clearRouteBindings = opts && 'clearRouteBindings' in opts ? opts.clearRouteBindings : true;
      if (clearRouteBindings == null) dart.nullFailed(I[60], 5, 51, "clearRouteBindings");
      return get_reset['GetResetExt|reset']($this, {clearFactory: clearFactory, clearRouteBindings: clearRouteBindings});
    }, T$.__Tovoid$5());
  };
  dart.trackLibraries("packages/get/get_navigation/src/root/get_material_app.dart", {
    "package:get/get_navigation/src/root/get_material_app.dart": get_material_app,
    "package:get/get_navigation/src/root/get_cupertino_app.dart": get_cupertino_app,
    "package:get/get_navigation/src/nav2/router_outlet.dart": router_outlet,
    "package:get/get_navigation/src/nav2/get_router_delegate.dart": get_router_delegate,
    "package:get/get_navigation/src/nav2/get_nav_config.dart": get_nav_config,
    "package:get/get_navigation/src/nav2/get_information_parser.dart": get_information_parser,
    "package:get/get_navigation/src/routes/route_middleware.dart": route_middleware,
    "package:get/get_navigation/src/routes/get_transition_mixin.dart": get_transition_mixin,
    "package:get/get_navigation/src/routes/default_route.dart": default_route,
    "package:get/get_navigation/src/snackbar/snack.dart": snack,
    "package:get/get_navigation/src/snackbar/snack_route.dart": snack_route,
    "package:get/get_navigation/src/routes/observers/route_observer.dart": route_observer,
    "package:get/get_state_manager/src/simple/simple_builder.dart": simple_builder,
    "package:get/get_state_manager/src/simple/mixin_state.dart": mixin_state,
    "package:get/get_state_manager/src/simple/get_state.dart": get_state,
    "package:get/get_state_manager/src/simple/get_view.dart": get_view,
    "package:get/get_state_manager/src/simple/get_responsive.dart": get_responsive,
    "package:get/get_state_manager/src/simple/get_controllers.dart": get_controllers,
    "package:get/get_state_manager/src/rx_flutter/rx_ticket_provider_mixin.dart": rx_ticket_provider_mixin,
    "package:get/instance_manager.dart": instance_manager,
    "package:get/get_state_manager/src/rx_flutter/rx_notifier.dart": rx_notifier,
    "package:get/get_state_manager/src/rx_flutter/rx_getx_widget.dart": rx_getx_widget,
    "package:get/get_state_manager/get_state_manager.dart": get_state_manager,
    "package:get/get_navigation/src/root/root_controller.dart": root_controller,
    "package:get/get_navigation/src/routes/get_route.dart": get_route,
    "package:get/get_navigation/src/root/parse_route.dart": parse_route,
    "package:get/get_navigation/src/dialog/dialog_route.dart": dialog_route,
    "package:get/get_navigation/src/extension_navigation.dart": extension_navigation,
    "package:get/get_navigation/src/bottomsheet/bottomsheet.dart": bottomsheet$,
    "package:get/get_navigation/get_navigation.dart": get_navigation,
    "package:get/route_manager.dart": route_manager,
    "package:get/get_instance/src/extension_instance.dart": extension_instance,
    "package:get/get_navigation/src/router_report.dart": router_report,
    "package:get/get_instance/src/get_instance.dart": get_instance,
    "package:get/get_instance/src/bindings_interface.dart": bindings_interface,
    "package:get/get_instance/get_instance.dart": get_instance$,
    "package:get/get_common/get_reset.dart": get_reset,
    "package:get/get.dart": get
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["get_material_app.dart","get_cupertino_app.dart","../nav2/router_outlet.dart","../nav2/get_nav_config.dart","../nav2/get_router_delegate.dart","../nav2/get_information_parser.dart","../routes/route_middleware.dart","../routes/get_transition_mixin.dart","../routes/default_route.dart","../snackbar/snack.dart","../snackbar/snack_route.dart","../routes/observers/route_observer.dart","../../../get_state_manager/src/simple/simple_builder.dart","../../../get_state_manager/src/simple/get_state.dart","../../../get_state_manager/src/simple/mixin_state.dart","../../../get_state_manager/src/simple/get_view.dart","../../../get_state_manager/src/simple/get_responsive.dart","../../../get_state_manager/src/simple/get_controllers.dart","../../../get_state_manager/src/rx_flutter/rx_notifier.dart","../../../get_state_manager/src/rx_flutter/rx_ticket_provider_mixin.dart","../../../get_state_manager/src/rx_flutter/rx_getx_widget.dart","root_controller.dart","../routes/get_route.dart","parse_route.dart","../dialog/dialog_route.dart","../extension_navigation.dart","../bottomsheet/bottomsheet.dart","../../../get_instance/src/extension_instance.dart","../router_report.dart","../../../get_instance/src/get_instance.dart","../../../get_instance/src/bindings_interface.dart","../../../get_common/get_reset.dart"],"names":[],"mappingsmC;;;;;;IACQ;;;;;;IAC3B;;;;;;IACoB;;;;;;IACpB;;;;;;IACM;;;;;;IACW;;;;;;IACX;;;;;;IACW;;;;;;IACN;;;;;;IACZ;;;;;;IACW;;;;;;IACP;;;;;;IACA;;;;;;IACD;;;;;;IACQ;;;;;;IACX;;;;;;IAC2B;;;;;;IACpB;;;;;;IACC;;;;;;IACP;;;;;;IACA;;;;;;IACkC;;;;;;IACZ;;;;;;IACJ;;;;;;IACT;;;;;;IACZ;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACuB;;;;;;IACZ;;;;;;IACL;;;;;;IACA;;;;;;IACgB;;;;;;IACtB;;;;;;IACmB;;;;;;IACZ;;;;;;IACN;;;;;;IACQ;;;;;;IACA;;;;;;IACA;;;;;;IACR;;;;;;IACa;;;;;;IACb;;;;;;IACU;;;;;;IACN;;;;;;IACA;;;;;;IACJ;;;;;;IACS;;;;;;IACN;;;;;;IACiB;;;;;;IACM;;;;;;IACR;;;;;;IACF;;;;;;;UAyEW;AACrC,YAAO,AAA6D,kDAAtC,QAAQ,gBAAgB;IACxD;;UAEkD;AAChD,YAAO,yBACL,AAGE,iDAFU,uCAAoB,IAAI,kBACpB;IAGpB;mBAEmC,SAAiB;;UAAjB;AACjC,YAAO,+CACwB,yBAAd,uBACV,AAAa,mDAAa,gDAAJ,eAAI,oBAAQ,qBACf,uBACA,mCACjB,AAAQ,wBACF,MAAN,KAAK,EAAL,cAAS,4FACH,AAAC,eAAR,cAAS,OAAO,GAAQ,OAAN,KAAK,EAAL,eAAS;IAErC;;UAG0B;AAAY,qEACxB,yDAAJ,wBACG,QAAC;;;eACR;8BAAW;0EAEF,QAAC;;;UACA,AAAE,eAAR,iDAAJ,oCAAiC,QAAC;;;iBAChC;gCAAS;;AAEX,cAAI,qBAAoB,gDAAJ,cAAa;AAEjC,cAAI,6BAA4B,wDAAJ,cAAqB;AAEjD,cAAI;YACE,qDAAJ,cAAgC,AAAE,eAAd;gBACf,KAAI;YACL,qDAAJ,cAAoC,eAAhB;;UAGlB,2DAAJ,cAAuB;eAEvB;8BAAgB;AAChB,cAAI;YACE,2CAAJ,cAAqB,eAAR;;UAIf,AAAI,+BAAkB;gBACtB;+BAAQ;UAEJ,6CAAJ,2BACuB,uBAAV,eAAa,AAAI,qDACT,4CACkB,+BAAlB,eAAyB,4DAAJ,4CACR,yBAAZ,eAAmB,+DAAJ,2CACL,wBAAX,eAAkB,6DAAJ,mDAEV,gCAAnB,eAA0B,oEAAJ;wEAGrB,QAAC;;;AAAM,+CACE,4CACoB,eAAd,8CAC8B,eAAtB,oDACF,iDACA,qDACI,oCACrB,AAAE,CAAD,kBACG,0CACF,6BACU,6BACV,oBACiB,OAAT,KAAR,AAAE,CAAD,QAAC,aAAS,kBAAH,cAAsB,oDAEC,QAAT,QAAb,OAAZ,AAAE,CAAD,YAAC,eAAa,wBAAH,eAAgB,oBAAH,eAAsB,qDAC5B,OAAZ,AAAE,CAAD,YAAC,eAAa,iCACP,OAAP,gDAAJ,eAAI,eAAU,6CACE,2DACM,6DACJ,iDACR,8CACK,oDACC,4DACO,iEACF,yDACN,wDACK,4CACjB,gCACK,iFAElB,8BACO,AAAE,CAAD,uBAED,AAAa,4BAAc,8CAAJ,gBAAc,6CAAJ,cAAuB,eAAZ,2CAC3B,iCAChB,oBACS,oBAAP,oDACM,oCACI,wBAAmB,+BAAY,+CACvB,AAAS,yBAAW,oBACxC,+BACA,0DACU,0CAEZ,OADiB,AAAmB,kCACf,oCACjB,mCAAY,sBAAqB,kDAAJ,mBAEZ,oCACjB,mCAAY,sBAAqB,kDAAJ;cAEjC,cAAyB,eAAlB;;4BACF,0CACF,6BACU,6BACV,oBACiB,QAAT,OAAR,AAAE,CAAD,QAAC,eAAS,oBAAH,eAAsB,qDAEC,SAAT,SAAb,OAAZ,AAAE,CAAD,YAAC,eAAa,wBAAH,gBAAgB,qBAAH,gBAAsB,sDAC5B,QAAZ,AAAE,CAAD,YAAC,gBAAa,kCACP,QAAP,gDAAJ,eAAI,gBAAU,8CACE,2DACM,6DACJ,iDACR,8CACK,oDACC,4DACO,iEACF,yDACN,wDACK,4CACjB,gCACK;;IAEhB;;;QAxUL;QACA;QACA;QACA;QAC2C;;QAE3C;QACA;QACA;QACA;QACwB;;QAExB;QACA;QACA;;QACA;QACA;QACA;QACA;QACA;;QACA;QACA;QACA;QACA;QACA;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QACA;QACA;QACA;QACA;QACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKD,mEAAW,GAAG;;EAAC;;;QA4Dd;QACA;QACA;QAC2B;QACR;QACnB;QACA;QACA;;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QACA;QACA;QACA;QACA;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QACA;QACA;QACA;QACA;QACA;QACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAC+B,KAAf,cAAc,EAAC,aAAf,iBAAuB,iDAAJ,8BACnB,YAAY;qCAGF,MAAvB,sBAAsB,EAAC,cAAvB,yBAA+B,0DAAJ,8BACM,YAArB,QAAQ,EAAR,oBAAU,AAAM,kBAAhB;;;;;;;;AAUhB,mEAAW,GAAG;IAClB,AAAI,8BAAiB,cAAc;IACnC,AAAI,sCAAyB,sBAAsB;EACrD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICpIiC;;;;;;IACnB;;;;;;IACoB;;;;;;IACpB;;;;;;IACM;;;;;;IACW;;;;;;IACX;;;;;;IACW;;;;;;IACN;;;;;;IACZ;;;;;;IACW;;;;;;IACA;;;;;;IACX;;;;;;IAC2B;;;;;;IACpB;;;;;;IACC;;;;;;IACP;;;;;;IACA;;;;;;IACkC;;;;;;IACZ;;;;;;IACJ;;;;;;IACT;;;;;;IACZ;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACuB;;;;;;IACjB;;;;;;IACA;;;;;;IACgB;;;;;;IACP;;;;;;IACR;;;;;;IACN;;;;;;IACQ;;;;;;IACA;;;;;;IACA;;;;;;IACR;;;;;;IACa;;;;;;IACb;;;;;;IACU;;;;;;IACN;;;;;;IACA;;;;;;IACJ;;;;;;IACS;;;;;;IACN;;;;;;IACiB;;;;;;IACM;;;;;;IACR;;;;;;IACF;;;;;;IACF;;;;;;;UAmEa;AACrC,YAAO,AAA6D,kDAAtC,QAAQ,gBAAgB;IACxD;;UAEkD;AAChD,YAAO,yBACL,AAGE,iDAFU,uCAAoB,IAAI,kBACpB;IAGpB;mBAEmC,SAAiB;;UAAjB;AACjC,YAAO,+CACwB,yBAAd,uBACV,AAAa,mDAAa,gDAAJ,eAAI,oBAAQ,qBACf,uBACA,mCACjB,AAAQ,wBACF,MAAN,KAAK,EAAL,cAAS,8FACH,AAAC,eAAR,cAAS,OAAO,GAAQ,OAAN,KAAK,EAAL,eAAS;IAErC;;UAG0B;AAAY,qEACtB,yDAAJ,wBACG,QAAC;;;eACR;8BAAW;0EAEF,QAAC;;;UACA,AAAE,eAAR,iDAAJ,oCAAiC,QAAC;;;iBAChC;gCAAS;;AAEX,cAAI,qBAAoB,gDAAJ,cAAa;AAEjC,cAAI,6BAA4B,wDAAJ,cAAqB;AAEjD,cAAI;YACE,qDAAJ,cAAgC,AAAE,eAAd;gBACf,KAAI;YACL,qDAAJ,cAAoC,eAAhB;;UAGlB,2DAAJ,cAAuB;eAEvB;8BAAgB;AAChB,cAAI;YACE,2CAAJ,cAAqB,eAAR;;UAGf,AAAI,+BAAkB;gBACtB;+BAAQ;UAEJ,6CAAJ,2BACuB,uBAAV,eAAa,AAAI,qDACT,4CACkB,+BAAlB,eAAyB,4DAAJ,4CACR,yBAAZ,eAAmB,+DAAJ,2CACL,wBAAX,eAAkB,6DAAJ,mDAEV,gCAAnB,eAA0B,oEAAJ;wEAGrB,QAAC;;;AAAM,+CACG,8CACmB,eAAd,8CAC8B,eAAtB,oDACF,qDACI,oCACrB,AAAE,CAAD,gBACC,qBACE,0CACF,6BACU,6BACV,qBACY,KAAP,gDAAJ,eAAI,aAAU,2CACE,2DACM,6DACJ,iDACR,+CACM,4DACO,iEACF,yDACN,wDACK,4CACjB,4EAEb,gCACO,AAAE,CAAD,gBACC,0BACQ,AAAa,4BAClB,8CAAJ,gBACI,6CAAJ,cAAuB,eAAZ,2BACX,oBACS,mBAAP,kDACM,oCAET,wBAAmB,+BAAY,+CACV,AAAS,yBAAW,oBACxC,+BACA,0DACU,0CAEZ,OADiB,AAAmB,kCACf,oCACjB,mCAAY,sBAAqB,kDAAJ,mBAEZ,oCACjB,mCAAY,sBAAqB,kDAAJ;cAEjC,cAAyB,eAAlB;;4BACF,0CACF,6BACU,6BACV,qBACY,OAAP,gDAAJ,eAAI,eAAU,6CACE,2DACM,6DACJ,iDACR,+CACM,4DACO,iEACF,yDACN,wDACK,4CACjB;;IAGpB;;;QA9SE;QACA;QACA;QACA;QAC2C;;QAE3C;QACA;QACA;QACA;QACwB;;QAExB;QACA;QACA;QACA;QACA;;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;QACA;;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKD,qEAAW,GAAG;;EAAC;;;QAuDd;QACA;QACA;QAC2B;QACR;QACnB;QACA;QACA;;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QACA;QACA;QACA;QACA;QACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAC+B,KAAf,cAAc,EAAC,aAAf,iBAAuB,iDAAJ,8BACnB,YAAY;sCAGF,MAAvB,sBAAsB,EAAC,cAAvB,yBAA+B,0DAAJ,8BACM,YAArB,QAAQ,EAAR,oBAAU,AAAM,kBAAhB;;;;;;;;;AAUhB,qEAAW,GAAG;IAClB,AAAI,8BAAiB,cAAc;IACnC,AAAI,sCAAyB,sBAAsB;EACrD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MChLgB;;;;;;MAKd;;;;;;;AA+BE;MAAkC;;;;UA3BzB;UACG;;;;8BACgB,KAAT,QAAQ,EAAR,aAAwC,eAAxB,yDAAJ;AAC7B;;IAAO;;UAGA;UAC4C;;UAMnD;;;gDAEW,SAAC,SAAS,WAAW;;cAApB;cAAS;AACb,uBACA,AAAc,aAAD,kBAAkB,AAAS,SAAA,CAAC,aAAa;AAC1D,cAAmB,MAAf,MAAM,EAAN,oBAAQ;YACV;;AAEF,gBAAO,AAAW,YAAA,CAAC,OAAO,EAAE,SAAS,EAAE,MAAM;+DAErC,QAAQ;IACnB;;;;;;;;;;;;;;;;;;;;;;;;;MAsBJ;;;;;;;AAduB,cAAA,AAAO;MAAc;;QAGvC;QACN;QACA,AAAS,0BAAY;MACvB;;QAIE,AAAS,6BAAe;QAClB;MACR;;QAIE,oBAAe,AAAS;MAC1B;;QAGE,cAAS;MACX;YAG0B;;;AACxB,aAAO;aAAe,OAAO;aAAE;aAAU;cAApB,4CAAP;MAChB;;;MAZG;;;IAaL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICrDsB;;;;;;;AACQ,YAAA,AAAkB;IAAI;;;UAYjC;UACE;UACA;AAEjB,YAAO,0DACgC,KAAlB,iBAAiB,EAAjB,aAA0B,yCAC1B,MAAT,QAAQ,EAAR,cAAiB,8BACd,OAAN,KAAK,EAAL,eAAc;IAEzB;;UAEsC;AAC9B,gBAAU,AAAU,gDAAd,yBAAyB,KAAK;AAC1C,oBAAI,AAAI,AAAW,GAAZ,wBAAqB;AAC5B,YAAO,yDACc,AAAI,GAAD,uBACZ,KAAK;IAGnB;;AAGqB,YAC8F,2DAAxE,uDAAiC;IAAuC;;;QAhCnG;;QACG;QACA;;AACd,oEACa,QAAQ,SACX,KAAK;;EACb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICkBkB;;;;;;IACX;;;;;;IACqB;;;;;;IAErB;;;;;;IAEiB;;;;;;IACI;;;;;;;AAEW,YAAI,+CAAJ;IAAO;;UAmBJ;AAAd;AAC3B,0BAAc,AAAO,AAAkB,AAAK,MAAxB;AAC1B,YAAI,AAAY,WAAD;AACb,gBAAO,OAAM;;AAEX,uBAAW,MAAM;AACrB,iBAAS,OAAQ,YAAW;AACtB,mCAAoB,AAAK,IAAD,kBAAkB,QAAQ;AACtD,cAAI,AAAY,WAAD,UAAU;UACzB,WAAW,WAAW;;AAExB,cAAO,SAAQ;MACjB;;;UAE4C;AAAd;AACtB,yBAAY,mBAAc,MAAM;AACtC,YAAI,AAAI,GAAD,UAAU;QACjB,AAAQ,mBAAI,GAAG;MACjB;;;UAE+C;AAAd;AAC3B,oBAAQ,AAAQ,uBAAQ,MAAM;AAClC,YAAU,aAAN,KAAK,cAAa,6BAAuB,KAAK;MACpD;;;UAEiD;AAAL;AAC1C,YAAI,AAAM,KAAD,KAAmB,aAAf,AAAQ,8BAA6B,aAAf,AAAQ;AAEnC,wBAAU,AAAO,oBAAgB,aAAf,AAAQ;AAC1B,qCAAsB,mBAAc,OAAO;AACjD,cAAI,AAAc,aAAD,UAAU;UAC3B,AAAO,oBAAgB,aAAf,AAAQ,4BAAc,aAAa;;AAE7C,cAAO,AAAQ,yBAAS,KAAK;MAC/B;;;;AAGE,YAAoD,4DAA7C,KAAsB,gBAAtB,oBAAmC;IAC5C;;;AAGE,kEAAO,KAAsB,gBAAtB,oBAAmC;YAAnC,eAAiD;IAC1D;;UAQe;UACR;;AAFiB;cAKhB,mBAAa,MAAM;AACzB,sBAAI,YAAY;UACd;;MAEJ;;;UAE8C;AAAd;cACxB,2BAAqB,KAAK;MAClC;;;UAEuC;AAAd;AACvB,sBAAsB,AAAE,eAApB,AAAO,MAAD;AACF,mCACF,AAAQ,0BAAW;gBAAC;AAAY,kBAAA,AAAQ,AAAS,QAAV,aAAa,AAAO,MAAD;;AAC9D,cAAuB,aAAnB,kBAAkB;oBACZ;;;sBAEE,eAAyB,eAAf,AAAO,MAAD,sBAA6B;AACnD;;;;sBAEM,6BAAuB,kBAAkB;sBACzC,wBAAkB,MAAM;AAC9B;;;;;AAGA;;;AAEJ;;;cAGE,wBAAkB,MAAM;MAChC;;;AAOiC;AAC/B,uBAAK,yBAAkB;AACvB,qBAAa;MACf;;;AAEmC;AACjC,qBAAa,6BAAsC,aAAf,AAAQ;MAC9C;;;AAE8B;AAC5B,uBAAK,sBAAe;AACpB,qBAAa;MACf;;;UAEmC;AAAT;AACxB,gBAAQ,IAAI;;;AAER,yBAAa;;;;AAEb,yBAAa;;;;AAEb;;;MAEN;;;AAGgC;;AACxB,6DAAgB,oBAAsB;AAC5C,YAAI,aAAa,YAAiC,aAArB,AAAc,aAAD;AAElC,0BAAY,AAAc,aAAD,QAA2B,aAArB,AAAc,aAAD;AAC5C,iCACa,aAAf,AAAQ,6BAAa,AAAO,oBAAgB,aAAf,AAAQ;AAGzC,cAAI,gBAAgB;AAEZ,8BAAc,AAAU,AAAK,SAAN;AACvB,+BAAe,AAAiB,gBAAD;AACrC,gBAAI,AAAY,WAAD,IAAI,YAAY;AAE7B,2BAAa;;;AAKX,2BAAY;gBACZ,mBACJ,wDACqB,AAAU,SAAD,uBAClB,AAAU,AAAK,SAAN;AAIvB,gBAAO,IAAG;;AAGV,uBAAa;;MAEjB;;;AAEgC;AAC9B,qBAAa;MACf;;;AAGE,YAAsB,cAAf,AAAQ;IACjB;;AAGE,YAAO,wCAAkB;IAC3B;;;AAGQ,+DAAoB,oBAAsB;AAChD,UAAI,AAAkB,iBAAD,UAAU;AAC/B,YAAgC,cAAzB,AAAkB,iBAAD,wBAAqB;IAC/C;;AAGE,YAAO,wCAAkB;IAC3B;;UAEqB;AACnB,cAAQ,IAAI;;;AAER,gBAAO;;;;;AAGP,gBAAO;;;IAEb;;AAMQ,2BAAiB;AACvB,UAAI,AAAe,cAAD,UAAU,MAAgB;AAEtC,gBAAM,AAAe,AACtB,cADqB,2BACf;YAAC;AAAM,cAAA,AAAE,EAAD;;AACnB,UAAI,AAAI,AAAO,GAAR;AAEL,cAAO,AAAQ,AAA2B,uCAAvB;cAAC;AAAM,gBAAa,gBAAb,AAAE,CAAD;;;AAG3B,cAAO,AACF,AACA,IAFK,SACC;cAAC;AAAY,gBAAA,AAAQ,AAA4B,QAA7B;;;IAGnC;UAG0B;;;AAClB,kBAAQ;AACd,UAAI,AAAM,AAAO,KAAR,iBAAc,MAAgB;AACjC,2BAAiB;AACvB,YAAO,gDACA,8BACM,2CACJ,KAAK;AACD,uDACT;AACA,cAAI,cAAc,sBAAa,cAAc;;mCAGxB,8BAAnB;IAER;;qCAW0C;;AAAd;cACpB,iBAAY,aAAa;MACjC;;;AAIE,oBAAI,AAAQ,yBAAS;AACf,kBAAQ,AAAQ;AACtB,YAAO,MAAK;IACd;;UAGS;UACC;UACa;AAHH;AAKlB,YAAI,UAAU;AACN,oBAAM,qBAAU,IAAI,mBAAmB,UAAU;UACvD,OAAW,cAAJ,GAAG;;AAGN,sBAAc,AAAU,gDAAd,yBAAyB,IAAI,cAAa;QAC1D,AAAQ,OAAD,kBAAkB;AAEnB,wBAAY;AAElB,YAAI,AAAQ,OAAD;UACT,AAAc,4BAAc,eAAb,AAAQ,OAAD,SAAW,SAAS;gBACpC,iBACJ,wDACqB,AAAQ,OAAD,uBAChB,IAAI;AAKlB,gBAAO,AAAU,UAAD;;AAIhB,gBAAc;;MAElB;;;UAGS;UACC;UACH;UACG;UACa;UACb;;AANkB;AAQ1B,YAAI,UAAU;AACN,oBAAM,qBAAU,IAAI,mBAAmB,UAAU;UACvD,OAAW,cAAJ,GAAG;;cAGN,uBAAiB,MAAM;AAC7B,cAAO,gCAAQ,IAAI,cAAa,wBAAuB,UAAU;MACnE;;;UAGS;UACC;UACa;AAHF;QAKnB,AAAQ;AACR,cAAO,iBAAW,IAAI,cAAa,wBAAuB,UAAU;MACtE;;;UAMS;UACC;;AAFY;AAKhB,uBAAW;AACf,yBAAO,cAAQ,OAAO,MAClB,QAAQ,YACR,AAAS,QAAD,aAAa,SAAS;gBAC1B,WAAK,OAAO;UAElB,WAAW;;QAEb;MACF;;;UAGU;AADoB;AAGrB;QACkB,AAAE,eAA3B,AAAa,yCAAuB;cAAC;UACnC,eAAe,KAAK;AACpB;;AAEF,YAAiB,qBAAb,YAAY;AACd,uBAAsC,AAAE,eAA3B,AAAa,sDAAuB,MAAM;;AAEzD;MACF;;;UAIU;UACA;;AAFW;AAKb,8BAAiB,gCAA0B,MAAM;AACvD,sBAAI,QAAQ,GAAE;AACR,6BAAgB,WAAK,OAAO;QAClC;AACA,YAAI,OAAO;AAET;;AAEF;MACF;;wBAIsC,OAAe;;UAAf;AAC9B,mBAAS,AAAM,KAAD,QAAQ,MAAM;AAClC,qBAAK,MAAM;AACT;;AAEI,qBAAW,AAAM,KAAD;AACtB,UAAa,qBAAT,QAAQ;AACJ,qBAAS,AAAQ,AAAsB,qDACvC,QAAC;;AAAY,gBAAqB,mBAArB,OAAO,EAAP,oBAAS,iBAAe,QAAQ;+CACrC;AAEd,YAAI,MAAM;UACR,0BAAoB,MAAM;;AAE5B,sBAAI,AAAe,mCAAY,QAAQ;eACrC,AAAc,4BAAC,QAAQ;UAAT,oBAAY,YAAS,AAAM,KAAD;;;MAG5C;AAEA;IACF;;;;QAvYW;QACJ;QACA;QACA;;QACA;;IAhBkB,gBAAwB;IA4X3C,uBAAqC;;;;;4BA1WR,KAAd,aAAa,EAAb,aACX,+CAEQ,cAAM,iCACJ;AAXpB;UAcE;;IAAO;EACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QFGU;QACQ;;QAC2C;QAChC;QACd;;mEAEI;YAAC;AACiB;AAC3B,YAAI,AAAY,WAAD;AAEP,uBAAa,AAAoB,AAAa,eAA3B,YAAY;AAErC,gBAAO,AAAO,AACT,AACA,AACA,OAHQ,0BACH,MAAM,SACN,MAAM;;QAGlB,MAA+B,6CAAzB,AAAO,MAAD,oBAAkC,WAAW;AACzD,YAAI,WAAW;UACb,MAAM,AAAW,WAAA,CAAC,GAAG;;AAEvB,cAAO,IAAG;2DAED,QAAC;;;AACR,aAAI,AAAU,AAAyB,gDAAvC,yBAAyB,YAAY;cAAE,cACvC,AAAS,QAAD;0CACP,GAAG,YACE,QAAQ;EACnB;;;QAEkC;QACC;QAC0B;;QAC1B;QACb;QACd;;AACV,yEACgB,SAAC,SAAS,WAAW;;YAApB;YAAS;AACf,sBAIJ;AAJwB;AACpB,wBAAK;AAAL;AACJ,cAAI,AAAM,KAAD,YAAY,AAAM,AAAO,KAAR,gCACxB,SAAS,EAAT,oBAAW,GAAK,SAAS;;;AAG7B,YAAmB,aAAf,AAAQ,OAAD;AACT,gBAAO,uDACgB,MAAV,SAAS,EAAT,cACP,SAAC,OAAO;kBAAP;AACO,2BAAS,AAAM,KAAD,QAAQ,MAAM;AAClC,6BAAK,MAAM;AACT;;AAEF;0DAEC,AAAQ,OAAD,kBACT,GAAG;;AAGZ,uBAAQ,WAAW,EAAX,sBAAa,KAAK,SAAS;cAA3B,gBAAyC;mFAExC,SAAS,aACD,KAAT,QAAQ,EAAR,aAAgB,mDAAJ;;EACvB;;QAQD;;QACS;;AACJ,yEACM,OAAO,YACN,cAAc;;EACzB;;;;0FAI8B;;;AACnC,UAAO,mBAAU;UAAC;AAChB,YAAO,AAAM,MAAD,SAAS,KAAK;;EAE9B;;;AAJkB;UAAmB;AAAnB,mEAAK;;EAIvB;gGAEwC;;;AACtC,UAAO,AAAmB,kDAAP,KAAK;EAC1B;;;AAFkB;UAAsB;AAAtB,sEAAK;;EAEvB;;;;IExIF;;;QAHK;;;;;EAGL;;;;;;;;;;;;;;;;IAgBA;;;QAZK;;;;;EAYL;;;;;;;;;;;;;;;;;QA4Z+B;QACa;QACpB;;QACK;QACpB;;QACe;;AACjB,oEAEQ,GAAG,cACa,KAAV,SAAS,EAAT,aACP,SAAC,OAAO;YAAP;AACO,qBAAS,AAAM,KAAD,QAAQ,MAAM;AAClC,uBAAK,MAAM;AACT;;AAEF;wEAEsB,0BAA0B,SAC/C,KAAK;AACD;AAET,YAAI,SAAS,sBAAa,SAAS;;iCAGd,KAAnB,kBAAkB,EAAlB;;EACL;;;;;;IC9dM;;;;;;0BASM;;;MAEjB,WAA0E,oDAA3B,AAAiB,gBAAD;AAC3D,qBAAW,AAAiB,gBAAD;AAC/B,UAAI,AAAS,QAAD;AAGV,uBAAS,AAAU,AAAO,gDAArB,2BAAyB;cAAC;AAAY,gBAAA,AAAQ,AAAK,QAAN;;UAChD,WAAW;;;AAIT,wBAAkB,AAAU,gDAAd,0BAAkC,KAAT,QAAQ,EAAR,aAAY;AAEzD,YAAO,gDACL,wDACqB,AAAY,WAAD,uBACpB,QAAQ,SACX,AAAiB,gBAAD;IAG7B;;qCAGsD;;AACpD,YAAO,4CACK,AAAO,MAAD,kBACT,AAAO,MAAD;IAEjB;;;;QAnCO;;;AADP;SAGE;;IAAO;EACT;;;;;;;;;;;;;;;ICQK;;EAuEP;;;;;;;;;;IAQO;;;;;;aAK2B;AAAU;IAAI;iBAGf;AAAS,iBAAI;;oBAGI;AAAa,qBAAQ;;qBAGpB;AAAS,iBAAI;;;UAGpC;AAAS,iBAAI;;;IAGjB;;UAG8B;AAChD,6DAAkB,KAAK;IAAC;;;QAtBR;IAFf;;;EAEyB;;;;;;;;;;;;;;;;;;;;;;;;AA+BtB,gBAAkB,0BAAb,aAA+B;AAC1C,YAAO,EAAE;;QACL,WACA,SAAC,GAAG;;cAAH;cAAG;AAAM,gBAAkB,EAAN,KAAX,AAAE,CAAD,WAAC,kCAAoC,MAAX,AAAE,CAAD,WAAC;;;;IAE9C;oBAEkC;MAChC,AAAkB,kCAAQ;YAAC;QACzB,OAAO,AAAQ,OAAD,cAAc,IAAI;;AAElC,YAAO,KAAI;IACb;gBAEmC;;AAClB;eACJ,UAAW;QACpB,KAAK,AAAQ,OAAD,UAAU,KAAK;AAC3B,YAAI,EAAE;AACJ;;;WAGJ;WAAyB,0BAAH,EAAE;MAAjB;AACP,YAAO,GAAE;IACX;uBAEmD;MACjD,AAAkB,kCAAQ;YAAC;QACzB,WAAW,AAAQ,OAAD,iBAAiB,QAAQ;;AAE7C,YAAO,SAAQ;IACjB;wBAEoD;MAClD,AAAkB,kCAAQ;YAAC;QACzB,OAAO,AAAQ,OAAD,kBAAkB,IAAI;;AAEtC,YAAO,KAAI;IACb;;UAE6B;MAC3B,AAAkB,kCAAQ;YAAC;QACzB,OAAO,AAAQ,OAAD,aAAa,IAAI;;AAEjC,YAAO,KAAI;IACb;;AAGI,YAAA,AAAkB,mCAAQ;YAAC;AAAY,cAAA,AAAQ,QAAD;;IAAiB;;oDArD7C;;;EAAa;;;;;;;;;;;;;;;;;;;;;;;IAyD1B;;;;;;IACA;;;;;;IACM;;;;;;IACV;;;;;;;;AAWH,uBAAO;;AACD,eAAuC,yBAAjC,kBAAY,oBAAe;AACvC,YAAO,iDACC,AAAG,EAAD,kBACG,AAAG,EAAD,iCACH,kBACJ,uCACQ,AAAG,EAAD,kBACW,AAAE,eAAV,6BAEb,sBACC,AAAG,EAAD,gBACD,AAAG,EAAD,gCACa,AAAG,EAAD,sCACX,AAAG,EAAD,iCACE,AAAG,EAAD,4BACX,AAAG,EAAD,oBACD,AAAG,EAAD,gCAEc,KAAtB,AAAG,EAAD,qBAAC,aAA0B,oEAAJ,iCACjB,AAAG,EAAD,yBACF,AAAG,EAAD,+BACI,AAAG,EAAD,gCACP,AAAG,EAAD;IAEnB;sBAG0C,KAAc;;UAAd;AACxC,uBAAO;;AACD,eAA4B,yBAAtB,kBAAY,GAAG,GAAG,GAAG;AAEjC,YAAO,iDACC,AAAG,EAAD,kBACG,AAAG,EAAD,wBACF,AAAG,EAAD,mBACN,AAAG,EAAD,uBACM,AAAG,EAAD,2BACN,AAAG,EAAD,iBACH,EAAE,SACL,AAAG,EAAD,+BACc,AAAG,EAAD,sCACX,AAAG,EAAD,uBACR,AAAG,EAAD,2BACQ,AAAG,EAAD,4BACX,AAAG,EAAD,oBACD,AAAG,EAAD,gCAEc,KAAtB,AAAG,EAAD,qBAAC,aAA0B,oEAAJ,iCACjB,AAAG,EAAD,yBACF,AAAG,EAAD,+BACI,AAAG,EAAD,gCACP,AAAG,EAAD;IAEnB;;AAIE,UAAI,AAAS,yBAAW;QACtB,gBAAW;;AAEP,kBAAY,AAAU,gDAAd,yBAAuC,eAAN,AAAE,eAAV;MACnC,qDAAJ,cAAiB,AAAM,KAAD;AAGtB,UAAI,AAAM,AAAM,KAAP;QACP;AACA;;AAGI,mBAAS,0CAA4B,AAAE,eAAb,AAAM,KAAD;MACrC,aAAQ,AAAO,MAAD,iBAAiB,AAAM,KAAD;MACpC,sBAAsB,eAAL;AAGjB,UAAe,AAAE,AAAY,eAAzB,AAAM,KAAD,yCAAuD,AAAE,eAAf,AAAE,eAAb,AAAM,KAAD;AAC3C;;AAEI,wBAAc,AAAO,MAAD,aAAqB,AAAE,eAAV;AACvC,UAAI,AAAY,WAAD;AACb;;MAEF,gBAAW,WAAW;AACtB;IACF;;UAE8B;AAC5B,UAAI,AAAM,AAAW,KAAZ,qBAAqB;AAExB,uBAAiB,qDAAJ;MACnB,AAAW,UAAD,cAA4B,AAAE,eAAlB,AAAM,KAAD;MACvB,qDAAJ,cAAiB,UAAU;IAC7B;;;QApGO;QACA;QACA;;QACA;;;;;;EACL;;;;;;;;;;;;;;;;;;;;;;;;;YCpFoD;AACpD,cAAsB,AAAE,gBAAjB,AAAM,KAAD;MACd;;YAwBiD;AAG/C,sBAAI,AAAM,KAAD,WAAU;AAInB,sBAAI,AAAM,KAAD,2BAA0B;AAGnC,sBAAI,AAAM,KAAD,4BAA2B;AAEpC,sBAAI,AAAM,KAAD,oBAAmB;AAE5B,YAAmB,AAAE,eAAjB,AAAM,KAAD,sBAAsC,qCAAW;AAI1D,YAA4B,AAAE,eAA1B,AAAM,KAAD,+BAA+C;AACtD;;AAGF,sBAAI,wEAAuB,KAAK,IAAG;AAGnC;MACF;;YAkBiB;uBACR,yEAAqB,KAAK;AAEjC,cAAO,+EACqB,eAAf,AAAM,KAAD,yBACY,eAAhB,AAAM,KAAD;MAErB;qCAiBe,UACA,SACK,WACA,oBACX;;YAJM;YACA;YACK;YACA;YACX;AAOD,oBAAiB,kCAAT,QAAQ;AAChB,+BAAmB,wEAAuB,KAAK;AAC/C,0BAAyB,KAAZ,AAAM,KAAD,QAAC,aAAa,iEAAJ;AAC5B,uBAAW,AAAM,KAAD;AACtB,sBAAI,AAAM,KAAD,sBAAqB,AAAM,AAAW,KAAZ;AACjC,gBAAO,4EACkB,QAAQ,GACzB,4CAAwB,SAAS,SAAS,UAAU,KACpD,SAAS,2BACU,kBAAkB,SACpC,KAAK,oBACM,gBAAgB;;AAGpC,cAAI,AAAM,KAAD;AACP,kBAA6B,AAAE,gBAAxB,AAAM,KAAD,mCACV,OAAO,EACP,UAAU,EACV,AAAM,KAAD,YACL,SAAS,EACT,kBAAkB,aACD,MAAjB,AAAM,KAAD,aAAC,cAAkB,4DAAJ,wBACd,gFAEwC,eAAlC,AAAM,KAAD,eAAC,sBAAc,KAAK,OAAO,IAA1B,4CACO,cAAM,yEAAwB,KAAK,wCACjC,cAAM,qEAAoB,KAAK,qFAC3C,KAAK,gEACd,KAAK;;AAKT,6BAAe,SAAS;UAC9B,YAAY,4CAAwB,SAAS,SAAS,UAAU;AAEhE,kBAAyB,QAAjB,AAAM,KAAD,aAAC,gBAAkB,4DAAJ;;;AAExB,oBAAO,AAAsB,oEACzB,OAAO,EACP,AAAM,KAAD,QACL,AAAM,KAAD,YACL,SAAS,EACT,kBAAkB,aACD,OAAjB,AAAM,KAAD,aAAC,eAAkB,4DAAJ,yBACd,gFACkD,eAAlC,AAAM,KAAD,eAAC,sBAAc,KAAK,OAAO,IAA1B,4CAEH,cAAM,yEAAwB,KAAK,wCACjC,cAAM,qEAAoB,KAAK,qFAC3C,KAAK,gEACd,KAAK;;;;AAGf,oBAAO,AAAsB,oEACzB,OAAO,EACP,AAAM,KAAD,QACL,AAAM,KAAD,YACL,SAAS,EACT,kBAAkB,aACD,OAAjB,AAAM,KAAD,aAAC,eAAkB,4DAAJ,yBACd,gFACkD,eAAlC,AAAM,KAAD,eAAC,sBAAc,KAAK,OAAO,IAA1B,4CAEH,cAAM,yEAAwB,KAAK,wCACjC,cAAM,qEAAoB,KAAK,qFAC3C,KAAK,gEACd,KAAK;;;;AAGf,oBAAO,AAAqB,mEACxB,OAAO,EACP,AAAM,KAAD,QACL,AAAM,KAAD,YACL,SAAS,EACT,kBAAkB,aACD,OAAjB,AAAM,KAAD,aAAC,eAAkB,4DAAJ,yBACd,gFACkD,gBAAlC,AAAM,KAAD,eAAC,sBAAc,KAAK,OAAO,IAA1B,8CAEH,cAAM,yEAAwB,KAAK,wCACjC,cAAM,qEAAoB,KAAK,qFAC3C,KAAK,gEACd,KAAK;;;;AAGf,gCAAwB,QAAjB,AAAM,KAAD,aAAC,gBAAkB,4DAAJ,0BACrB,gFAEwC,iBAAlC,AAAM,KAAD,eAAC,uBAAc,MAAK,OAAO,IAA1B,8CACO,cAAM,yEAAwB,KAAK,wCACjC,cAAM,qEAAoB,KAAK,qFAC3C,KAAK,gEACd,KAAK;;;;AAGX,oBAAO,AAAuB,qEAC1B,OAAO,EACP,AAAM,KAAD,QACL,AAAM,KAAD,YACL,SAAS,EACT,kBAAkB,aACD,QAAjB,AAAM,KAAD,aAAC,gBAAkB,4DAAJ,0BACd,gFACkD,iBAAlC,AAAM,KAAD,eAAC,uBAAc,MAAK,OAAO,IAA1B,8CAEH,cAAM,yEAAwB,KAAK,wCACjC,cAAM,qEAAoB,KAAK,qFAC3C,KAAK,gEACd,KAAK;;;;AAGf,oBAAO,AAAmB,iEACtB,OAAO,EACP,AAAM,KAAD,QACL,AAAM,KAAD,YACL,SAAS,EACT,kBAAkB,aACD,QAAjB,AAAM,KAAD,aAAC,gBAAkB,4DAAJ,0BACd,gFACkD,iBAAlC,AAAM,KAAD,eAAC,uBAAc,MAAK,OAAO,IAA1B,8CAEH,cAAM,yEAAwB,KAAK,wCACjC,cAAM,qEAAoB,KAAK,qFAC3C,KAAK,gEACd,KAAK;;;;AAGf,oBAAO,AAAmB,iEACtB,OAAO,EACP,AAAM,KAAD,QACL,AAAM,KAAD,YACL,SAAS,EACT,kBAAkB,aACD,QAAjB,AAAM,KAAD,aAAC,gBAAkB,4DAAJ,0BACd,gFACkD,iBAAlC,AAAM,KAAD,eAAC,uBAAc,MAAK,OAAO,IAA1B,8CAEH,cAAM,yEAAwB,KAAK,wCACjC,cAAM,qEAAoB,KAAK,qFAC3C,KAAK,gEACd,KAAK;;;;AAGf,oBAAO,AAA4B,0EAC/B,OAAO,EACP,AAAM,KAAD,QACL,AAAM,KAAD,YACL,SAAS,EACT,kBAAkB,aACD,QAAjB,AAAM,KAAD,aAAC,gBAAkB,4DAAJ,0BACd,gFACkD,iBAAlC,AAAM,KAAD,eAAC,uBAAc,MAAK,OAAO,IAA1B,8CAEH,cAAM,yEAAwB,KAAK,wCACjC,cAAM,qEAAoB,KAAK,qFAC3C,KAAK,gEACd,KAAK;;;;AAGf,oBAAO,AAA4B,0EAC/B,OAAO,EACP,AAAM,KAAD,QACL,AAAM,KAAD,YACL,SAAS,EACT,kBAAkB,aACD,QAAjB,AAAM,KAAD,aAAC,gBAAkB,4DAAJ,0BACd,gFACkD,iBAAlC,AAAM,KAAD,eAAC,uBAAc,MAAK,OAAO,IAA1B,8CAEH,cAAM,yEAAwB,KAAK,wCACjC,cAAM,qEAAoB,KAAK,qFAC3C,KAAK,gEACd,KAAK;;;;AAGf,oBAAO,gEACkB,SAAS,2BACP,kBAAkB,oBACzB,gBAAgB,SAC3B,gFAEiC,iBAAlC,AAAM,KAAD,eAAC,uBAAc,MAAK,OAAO,IAA1B,8CACO,cAAM,yEAAwB,KAAK,wCACjC,cAAM,qEAAoB,KAAK,qFAC3C,KAAK;;;;AAKhB,oBAAO,AAAkB,gEACrB,OAAO,EACI,eAAX,AAAM,KAAD,SACL,AAAM,KAAD,YACL,SAAS,EACT,kBAAkB,aACD,QAAjB,AAAM,KAAD,aAAC,gBAAkB,4DAAJ,0BACd,gFACkD,iBAAlC,AAAM,KAAD,eAAC,uBAAc,MAAK,OAAO,IAA1B,8CAEH,cAAM,yEAAwB,KAAK,wCACjC,cAAM,qEAAoB,KAAK,qFAC3C,KAAK,gEACd,KAAK;;;;AAGf,oBAAO,AAAoC,wFACvC,KAAK,EACL,OAAO,EACP,SAAS,EACT,kBAAkB,aACD,QAAjB,AAAM,KAAD,aAAC,gBAAkB,4DAAJ,0BACd,gFACkD,iBAAlC,AAAM,KAAD,eAAC,uBAAc,MAAK,OAAO,IAA1B,8CAEH,cAAM,yEAAwB,KAAK,wCACjC,cAAM,qEAAoB,KAAK,qFAC3C,KAAK,gEACd,KAAK;;;;AAGf,oBAAO,AAA6B,iFAChC,KAAK,EACL,OAAO,EACP,SAAS,EACT,kBAAkB,aACD,QAAjB,AAAM,KAAD,aAAC,gBAAkB,4DAAJ,0BACd,gFACkD,iBAAlC,AAAM,KAAD,eAAC,uBAAc,MAAK,OAAO,IAA1B,8CAEH,cAAM,yEAAwB,KAAK,wCACjC,cAAM,qEAAoB,KAAK,qFAC3C,KAAK,gEACd,KAAK;;;;AAGf,oBAAO,AAAuB,2EAC1B,KAAK,EACL,OAAO,EACP,YAAY,EACZ,kBAAkB,aACD,QAAjB,AAAM,KAAD,aAAC,gBAAkB,4DAAJ,0BACd,gFACkD,iBAAlC,AAAM,KAAD,eAAC,uBAAc,MAAK,OAAO,IAA1B,8CAEH,cAAM,yEAAwB,KAAK,wCACjC,cAAM,qEAAoB,KAAK,qFAC3C,KAAK,gEACd,KAAK;;;;AAGf,kBAAQ,2DAAJ;AACF,sBAA2B,AAAE,gBAAlB,2DAAJ,+BAAsC,OAAO,EAAE,AAAM,KAAD,QACvD,AAAM,KAAD,YAAY,SAAS,EAAE,kBAAkB,EAAE,KAAK;;AAG3D,oBAAO,AAAuB,2EAC1B,KAAK,EACL,OAAO,EACP,YAAY,EACZ,kBAAkB,aACD,QAAjB,AAAM,KAAD,aAAC,gBAAkB,4DAAJ,0BACd,gFACkD,iBAAlC,AAAM,KAAD,eAAC,uBAAc,MAAK,OAAO,IAA1B,8CAEH,cAAM,yEAAwB,KAAK,wCACjC,cAAM,qEAAoB,KAAK,qFAC3C,KAAK,gEACd,KAAK;;;;MAGvB;;;;cA3aI;AAIF,cAAqB,gBAAd;MACT;wBAGuC;AAC/B,kCAAoC,wCAAd,aAAa,IACnC,AAAc,aAAD;AAEnB,YAAI,AAAe;UACjB,uBAAiB,sCAAuB,mBAAmB;;UAE7C,AAAE,eAAhB,8BAAwB,mBAAmB;;QAEvC,wBAAkB,aAAa;MACvC;;AAImC;MAAiC;;AAGzC;MAAI;;AAGH;MAAI;;YAKc;AAI5C,cAAiB,qDAAV,SAAS,gBACX,AAAU,SAAD,gCACV,AAAU,SAAD;MACf;;AAwBiC;MAA4B;;AAW/B;MAA0B;gBA+B1B,SAA2B,WACnC;YADQ;YAA2B;YACnC;AACd,oBAAQ,kBAAa,OAAO;AACrB,qBAAS,6EAGb,KAAK;AAEd,cAAO,OAAM;MACf;uBA2TqC,SAA2B,WAC1C,oBAA2B;YADZ;YAA2B;YAC1C;YAA2B;AAC/C,cAAO,gFACG,OAAO,EAAE,SAAS,EAAE,kBAAkB,EAAE,KAAK;MACzD;;;MApcwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAgdX;;;;;;MACA;;;;;;MAEW;;;;;;MAE6B;;;;;;;AAIjD;MAAsC;;;UAhBnC;UACS;;UACA;;UACA;;UACA;;;;;;;AACX,kEAAW,GAAG;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBiB;MAAW;;;QAAX;;MAAW;;;QAIxC;QACN,0BAAc;UACV,aAAU;UACV,cAAW;UACX,WAAQ;UACR,cAAW;;;MACjB;;QAIE,AAAY;QACN;MACR;;YAEuC;uBAC9B;cACA,AAAuB;QAC9B,+BAAyB,AAAwB;MACnD;;YAEyC;uBAChC;cACA;QACe,AAAE,eAAxB,yCACI,wBAAsC,AAAE,eAAtB,AAAQ,OAAD,8BAA6B,AAAE,eAAd,AAAQ;MACxD;;YAEmC;uBAC1B;cACA;QACe,AAAE,eAAxB,sCAAgC,wBACQ,aAApC,AAAQ,AAAS,AAAgB,OAA1B,6CAA2C,AAAE,eAAd,AAAQ;QAClD;MACF;;;uBAGS;aAIP;4BAAwB;QACxB;MACF;;YAEyC;AACvC,sBAAI,AAAsB,gCAAI,AAAY,6BAAW,KAAK;MAC5D;;YAEgC;AAC9B,gBAAuB,wBAAG;;;AAEtB,kBAAO,eAAC,KAAK;;;;AAEb,kBAAO,MAAK;;;;uBAJhB;;;MAMF;;YAG0B;uBACjB,kCAA4B,OAAO;AAGtC,4BAA+B,AAAY,wBAAT,OAAO,KAAmB,uBAC/C,AAAY,AAAQ,0BAAjB,OAAO,iBACV,AAAY,AAAQ,0BAAjB,OAAO;QAC3B,gBAAgB,sBAAI,aAAa,EAAE,AAAO;AAC1C,cAAO,2BACS,sCACI,yBAChB,AAAO,mBACP,wDAES,aAAa,gCAGb,uCACU,+CACW;MAKpC;;;MAxFmC;MAEE;;;;IAuFvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAa4B;;;;;;MACL;;;;;;iBAIE;;;aACrB;QAAW,WAAM,aAAN,yBAAS,KAAK;MAC3B;;YAIoB;AAON;AACD;AAKX,YAAI,AAAS,AAAM,QAAP;UACV,iBAA0B,aAAT,QAAQ;;UAEzB,iBAAkC,aAAjB,AAAW;;AAG9B,sBAAI,cAAc;AAIV,gDAAkC,mBAEiC,AAClE,eAFL,sBACsD,AAAW;UAInE,AAAW,0CACG,qCAAuB,+BAA+B,WACzD,cAAc;;UAGzB,AAAU;AAIV,wBAAI,AAAW;AAEP,+CACiE,AAClE,eAFgC,sBACiB,AAAW;YAEjE,AAAW,4CACG,qCAAuB,4BAA4B,WACtD,cAAc;;;AAI7B,sBAAI,AAAW;AAIgB;;;;;;;;;;;;UAC7B,8BAA0B;gBAAC;YACzB,AAAU;YACV,AAAW,qCAAqB;;UAElC,AAAW,kCAAkB;;UAE7B,AAAU;;MAEd;;;UA/EgB;;UACA;;;;MAEd,AAAU;IACZ;;;;;;;;;;;;;;;;;;;;MA9lBW,uCAAkB;;;MAClB,uCAAkB;;;MAKrB,8DAAyC;;;MAIzC,+CAA0B;;;;;;;;;QCV1B;QACc;MACtB;;QAIQ;QACc;MACtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAmCe;;;;;;MACO;;;;;;MACR;;;;;;MAEU;;;;;;MACR;;;;;;MACW;;;;;;MACL;;;;;;MAGX;;;;;;MAGA;;;;;;MACC;;;;;;MAGD;;;;;;MACO;;;;;;MACL;;;;;;MACI;;;;;;MACU;;;;;;MAGd;;;;;;MAGC;;;;;;MAGH;;;;;;MAqCG;;;;;;MAM+B;;;;;;;QAvCrC;AACA,+BAAmB,0CAAiB;QAC1C,AAAiB,gBAAD;MAClB;;AAKE,YAAI,sBAAgB,MAAa,gBAAN;AACrB,+BAAmB,0CAAiB;AAEpC;AAAgB;AACpB,cAAI,oCAA6B,eAAR;AACzB,cAAI,mCAAoB,2BAAQ,eAAP;;;AAErB,6BAAiB,AAAiB,gBAAD,oBAAoB,aAAa;AACxE,YAAI,cAAc;AAChB,mBAAW,UAAW,eAAc;YAClC,AAAQ,OAAD;;;AAIL,0BAAwD,eAA1C,AAAiB,gBAAD,qBAAqB;QACzD,eAAS,AAAiB,gBAAD,gBAAgB,AAAW,WAAA;AACpD,cAAa,gBAAN;MACT;;YAGiC;AAC/B,cAAO;MACT;;AAMyB,cAAuC,UAA9B,mCAAc,AAAS;MAAO;;;UA/F/C;UACV;;UACA;;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UACA;UACA;;UACA;;UACA;MA2CC;;;;;;;;;;;;;;;;;;;;;AA1CH,uDAAgB,QAAQ,oBAAoB,gBAAgB;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCArC;;;;;;MAGf;;;;;;MAGA;;;;;;MAIA;;;;;;MAIA;;;;;;MAGF;;;;;;MAKC;;;;;;MAMU;;;;;;MAGP;;;;;;MAKF;;;;;;MAGH;;;;;;MAGG;;;;;;MAID;;;;;;MAIG;;;;;;MAGL;;;;;;MAIgB;;;;;;MAGd;;;;;;MAGW;;;;;;MAOb;;;;;;MAGG;;;;;;MAGG;;;;;;MAIA;;;;;;MAKJ;;;;;;MAKA;;;;;;MAGC;;;;;;MAKM;;;;;;MAKQ;;;;;;MAOX;;;;;;MAIL;;;;;;MAIA;;;;;;MAGG;;;;;;MAKD;;;;;;MAKD;;;;;;MAKA;;;;;;MAID;;;;;;;AAIO;AACjB,gBAAW,2DAAJ;QACT;;;AAIE,cAAO;MACT;;;;UA/LO;UACA;UACA;UACA;UACA;UACA;UACA;;UACA;UACA;;UACA;;UACA;;UACA;UACA;UACA;;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UACA;;UACA;;UACA;UACA;UACA;UACA;;UACA;;UACA;;UACA;;UACA;;UACA;UACA;;UACA;UACA;UACmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BACa,MAAf,cAAc,EAAd,cAAkB,QAAC;;AACrC,4CAAW,GAAG;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkKE;MAAc;;;QAAd;;MAAc;;;AAQ3B;MAAe;;;QAAf;;MAAe;;;AACb;MAAiB;;;QAAjB;;MAAiB;;;AAGR;MAAgB;;;QAAhB;;MAAgB;;;QAI7B;cAGF,AAAO,qCACD,AAAO,+BAAiC,AAAE,eAAhB,AAAO,qCAC/B,AAAO;QAKnB,wBAAmB,AAAO,6BAAiB,AAAO;QAClD,oCAAoB,+BAAwB,AAAO,AAAQ;QAE3D;QACA;AAEA,YAAI,AAAO,sCAAgB,AAAO;UAChC;gBACA;+BAAiB;;QAGnB,mBAAa;QACb,yBAA6B,AAAE,eAAZ,yBAAmB;MACxC;;;cAIE;6BAAiB;eAEjB,AAAO;QAAA,sBAA6B,oBAAe;gBACnD,AAAO;QAAA,uBAA6B;QAEpC,AAAiB;QACP,AAAE,eAAZ;QACM;MACR;;QAK2B,AAAE,eAAV,yDACf;cAAC;AACO,2BAAa,AAAiB;AAEpC,cAAI,UAAU;AACN,sBAAoC,kBAA9B,AAAW,UAAD;YACtB,AAAoB,mCAAS,AAAI,GAAD;;;MAIxC;;QAGE,wBACI,yEAA2C;QAC/C,uBAAiB,AAAkD,qCAArC,4BAAsB,8BAClD,4CACyB,eAAf,+BACM;QAIH,AAAE,eAAjB,yCAAmC;cAAC;AAClC,cAAI,AAAO,MAAD,IAAoB;YACb,AAAE,eAAjB;;AAEF,cAAI,AAAO,MAAD,IAAoB;YACb,AAAE,eAAjB;;;QAIW,AAAE,eAAjB;MACF;;;AAEkB;MAAiB;;;QAAjB;;MAAiB;;AAGjC,sBAAI,AAAO,sCACP,AAAO;UACT,0BAAoB;YAClB,cAAS;;;UAEuB,AAAE,eAApC,AAAO,qDAAyC;UAEhD,2BAAqB,2CACH,8BAAkD,eAAlC,AAAO;;MAE7C;;YAG0B;AACxB,cAAO,gDAEE,kCACE,AAAO,AAAW,0BAAc,4BAC1B,4BACP,AAAO,oCACN,qCACI,AAAO,AAAc,6BAAiB,6BAC9B,yCAMU,AAAY,AAAW,0BAApB,OAAO,wBACpB,sCAAqB,AAAY,AAAQ,0BAAjB,OAAO,yBACxC,AAAO,AAAc,6BAAiB,iCACzC,AAAO,AAAc,6BAAiB,2DAGpC;MAIf;;AAGS;AAEP,YAAI,AAAO;UACT,QAAQ;;UAER,QAAQ;;AAGV,cAAO,gCACK,yBACR,4CACU,AAAoB,2CACnB,SAAC,SAAS;oBAAT;oBAAS;AACjB,8BAAI,AAAS,QAAD;AACV,sBAAI,AAAO,AAAQ;AACjB,0BAAO;;AAET,wBAAO,wCACsB,wCAAS,AAAO,kCACpC,sCACe,6BACM,eAAd,AAAO,8BAAgC,eAAd,AAAO,+BACrC,qCACgB,AAAE,eAAf,AAAS,QAAD,sBACI,AAAE,eAAf,AAAS,QAAD,0BACH,6CACI,yCACa,wCAAS,AAAO;;AAMnD,wBAAO;;gIAIb,KAAK;MAGX;;AAGE,cAAO,mCACA,oCACQ,AAAO,+BACd,uCAAwC,eAAf,AAAO,4CAE1B,6CACH,AAAO,uCACJ,AAAO,2CACN,AAAO,sCACS,wCAAS,AAAO,mCACnC,AAAO,kCACF,8BAA6B,eAAlB,AAAO,iCAAuC,eAAlB,AAAO,4CAGtD,0DAGE,uCACsB,eAApB,AAAO,kCACR;MAKd;;;AAEqB;MAAkB;;;QAAlB;;MAAkB;;AAIrC,cAAO,mCACA,oCACQ,AAAO,+BACd,uCAAwC,eAAf,AAAO,4CAE1B,6CACH,AAAO,uCACJ,AAAO,2CACN,AAAO,sCACS,wCAAS,AAAO,mCACnC,AAAO,kCACF,8BAA6B,eAAlB,AAAO,iCAAuC,eAAlB,AAAO,4CAGtD,oCACsB,iCACjB,mCACR,AAAO,qCACD,2DACS,AAAO,kDACR,AAAmB,wDAER,AAAO,0DACZ,AAAO,uGAErB,oBACN,iCAC6B,iCACjB;MAKpB;;;AAGS;AACH;AACJ,YAAyB,AAAK,aAA1B,AAAO,AAAQ;UACjB;;UAEA,qBAA0C,aAArB,AAAO,AAAQ;;AAGtC,YAAwB,aAApB,AAAO,AAAQ;UACjB,cAAc,AAAO,AAAQ;;AAG/B,YAAI,AAAO,AAAK,4BAAW,AAAO,AAAW;AAC3C,gBAAO,0BACL,gCACA,wCAES,0CACkC,+CACZ,iCACT,mCACf,yBACK,gCACsB,sCACb,AAAO,AAAQ,+BACd,AAAO,AAAQ,iCACd,AAAO,AAAQ,oCAEjB,qFAET,oBACN,gCACsB,sCACb,+BACC,AAAO,AAAQ,iCACd,AAAO,AAAQ,mCACd,AAAO,AAAQ,sCAEC,MAAnB,AAAO,yBAAA,cAAe;cAMlC,KAAI,AAAO,4BAAgB,AAAO,AAAW;AAClD,gBAAe,0BACb,gCACA,2CAC8B,yCAAqB,oBAAE,WAAW,YACvD,+EAET,wCAES,0CACkC,+CACZ,iCACT,mCACf,yBACK,gCACsB,sCACb,AAAO,AAAQ,2CAEb,AAAO,AAAQ,mCAEjB,qFAET,oBACN,gCACsB,sCACb,2CAEE,AAAO,AAAQ,mCACd,AAAO,AAAQ,sCAEC,OAAnB,AAAO,yBAAA,eAAe;cAMlC,KAAI,AAAO,AAAK,4BAAW,AAAO;AACvC,gBAAe,0BACb,gCACA,wCAES,0CACkC,+CACZ,iCACT,mCACf,yBACK,gCACsB,sCACb,AAAO,AAAQ,+BACd,AAAO,AAAQ,iCACd,AAAO,AAAQ,oCAEjB,qFAET,oBACN,gCACsB,sCACb,+BACC,AAAO,AAAQ,8CAEb,AAAO,AAAQ,sCAEC,QAAnB,AAAO,yBAAA,gBAAe,uOAKrC,gCACsB,wCAAY,kBAAkB,WAC3C;;AAIX,gBAAe,0BACb,gCACA,2CAC8B,yCAAqB,oBAAE,WAAW,YACvD,+EAET,wCAES,0CACkC,+CACZ,iCACT,mCACf,yBACK,gCACsB,sCACb,AAAO,AAAQ,yDAIf,qFAET,oBACN,gCACsB,sCACb,wDAGG,AAAO,AAAQ,sCAEC,QAAnB,AAAO,yBAAA,gBAAe,uOAKrC,gCACsB,wCAAY,kBAAkB,WAC3C;;MAIf;;AAGE,YAAI,AAAO;AACT,gBAAO,6CACG,AAAoB,2CACnB,SAAC,cAAc;kBAAd;kBAAc;AACtB,4BAAI,AAAS,QAAD;AACV,sBAAO,qCACE,AAAO,uDAEO,AAAE,eAAf,AAAS,QAAD;;AAGlB,sBAAO;;;;AAKb,gBAAO;;MAEX;;AAGE,YAAI,AAAO,4BAA4B,aAAZ,AAAO,+BAAgB,AAAO;AACvD,gBAAO,8CACI,6BACF,AAAO;cAEX,KAAI,AAAO;AAChB,gBAAO,AAAO;;AAEd,gBAAO;;MAEX;;;AAGE,cAAO,AAAO;cAAA,eACV,mBACe,MAAb,AAAO,mBAAA,iCACA,qDAC2B,iCAA8B;MAExE;;;AAGE,cAAO,oBACU,MAAf,AAAO,qBAAA,iCACA,qDAAwC;MAEnD;;AAGE,cAAO,AAAO;MAChB;;;MAzcgB;MAEK;MACE;;MAEV,qBAAe;MACf;MACA;MAEE,gCAA0B;MAE/B;;MACE;;MAEI;MACK;;MAyCC,4BAAsB;MAqC1B;;MAiHG;;MACX,wBAAmB;;;IA2P/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGiC;;;QAA5B;;;;;EAA4B;;;;;;;;;;;;;;;;IAGI;;;QAAhC;;;;;EAAgC;;;;;;;;;;;;;;;;IAKa;;;QAA7C;;;;;EAA6C;;;;;;;;;;;;;;;;IAUG;;;QAAhD;;;;;EAAgD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCpoB5C;;;;;;MAqEA;;;;;;MAsHS;;;;;;;;AA9NO;MAAoB;;;QAApB;;MAAoB;;;AACpB;MAAqB;;;QAArB;;MAAqB;;YAiBV;gBACxB,AAAM;;;;cAGR,0BAAoB,4BAAU,MAAM;cACpC,sBAAgB,4BAAU,MAAM;AAChC;;;;;;cAIA,0BAAoB,4BAAU;cAC9B,sBAAgB,4BAAU;AAC1B;;;;;uBAXN;;;MAcF;;;AAO4B;MAAe;;;QAAf;;MAAe;;AAQxB;MAAK;;AAItB;AAAqB;AACnB,cAAsB,aAAlB,AAAM,4CAAsB,+BAC9B,uCACW;oBAAC;AACR,sBAAO,kDACE;AACL,kCAAI,AAAM,wCAAkB;sBAC1B;sBACI,yDAAJ;;8CAGG,gDACM,qCACF,SAAC,SAAS;0BAAT;AACR,4BAAO,uCACe,6BACR,AAAqB,0CACrB,AAAqB,2CAC1B,0CACuB,yCACrB,AAAsB;;oFAQjC;oBAGZ,uCACW;kBAAC;AACK,mCAAiB,gCACrB,gDACgB,eAAV,oCACJ,AAAM,4BACP,2BAAqB,kBACrB;AAMV,oBAAO,eAAc;yEAGf;;;MAGd;6BAIoC;AAClC,cAAO,6CACM,oEAEK;gBAAC;AACf,gBAAI,AAAc,sBAAkB,gCAChC,AAAc,sBAAkB;AAClC,oBAAc;;AAEhB,kBAAc;yDAEX,gCAAI,sCACI;gBAAC;YACZ,yBAAkB,aAAlB;YACA;YACA;AAEA,0BAAI;cACO,AAAE,eAAX;;cAES,AAAE,eAAX;;kDAGG;MAEX;;AAGE,cAAO,sCACG,AAAM,0BACP;MAEX;;AAGE,YAAI,AAAM,AAAiB,+BAAyB;AAClD,gBAAwB;;AAExB,cAAI,AAAM,AAAc,4BAAiB;AACvC,kBAAwB;;AAE1B,gBAAwB;;MAE5B;;AAII,cAAW,AAAE,AAAO,gBAApB,6BAAuC;MAAS;;wBAe1C,AAAqB,2DACwB,6BAAhC;uBACd,AAAM,AAAkB,mCAAY;AAC3C,cAAO,6DACK,AAAM,0CACJ,wBACI,eAAT;MAEX;;wBAMU,AAAqB,2DACwB,6BAAhC;cACd;AACP,cAAO,AAA6D,uCAAvC,8BAAwB,8BACnD,4CACqB,eAAX,2BACD,AAAM,gDACC,AAAM;MAG1B;;AAGE,cAAO,AAA0C,gDAAnB,AAAM,iCAClC,4CACqB,eAAX,2BACD,2CAGS;MAItB;;AAGE,cAAO,AACF,kCADoB,0BAAwB,AAAM,kCAErD,4CACqB,eAAX,2BACD,2CAGS;MAItB;6BAK0C;;;gBAChC,MAAM;;;YAEV,qBAA+B;kBACf;YAAD;AACf,0BAAI,AAAe,mCAAY,AAAe,AAAM,qCAAS;AAE7D;;;;YAEA,qBAA+B;mBACf;YAAD;AACf;;;;YAEA,qBAA+B;oBACf;YAAD;AACf,0BAAI,AAAe,mCAAY,AAAe,AAAM;AACpD;;;;4BAEQ,AAAe,AAAM;YAK7B,qBAA+B;oBACf;YAAD;AAEf,2BAAK;cACM,AAAE,eAAX;;AAGF;;;;uBA7BJ;;;QA+BA;MACF;;wBAIU,AAAqB,2DAC0B,+BAAhC;QACvB,oBAAc;cACP,8CACsD,SAAvD;QACN,6BAAuB;QACvB,8BAAwB;QACxB,mBAAa;cACN,6CAAmE,SAA7C;QACvB;MACR;;QAIQ;cAEJ,8CAEkF,SAAhF;wBAGD,AAAqB,2DAC2B,6BAAhC;QAET,AAAE,eAAZ,oCAA8B;QAC9B;AACA,cAAkB,AAAE,gBAAb;MACT;iBAGgC;cAE5B,8CAEqF,SAAnF;wBAGD,AAAqB,2DAC2B,6BAAhC;AAGnB,YAAa,0BAAT,QAAQ;UACC,AAAE,eAAb,2BAAyC,AAAE,eAAtB,AAAS,QAAD;;QAErB,AAAE,eAAZ,oCAA8B;QACxB,iBAAW,QAAQ;MAC3B;;gBAGe;cAEX,8CAEiF,SAA/E;wBAGD,AAAqB,2DAC2B,6BAAhC;QAGnB,gBAAU,MAAM;QAChB;AAEA,sBAAI;UACF,gBAAM,4CAA6B;YACtB,AAAE,eAAb;;UAGF;;UAEW,AAAE,eAAb;;AAGF,cAAa,cAAO,MAAM;MAC5B;;AAGE,YAAI,AAAM;AACR,cAAI,kCAAwB,AAAE,eAAR;YACd,AAAE,eAAR;;UAEF,eAAS,gBAAoB,eAAd,AAAM,sBAAW;AAC9B,0BAAI;cACO,AAAE,eAAX;kBACK,eAAI;cACA,AAAE,eAAX;;;;AAIJ,cAAI;YACI,AAAE,eAAR;;;MAGN;;AAGE,YAAI,kCAAwB,AAAE,eAAR;UACd,AAAE,eAAR;;MAEJ;;YAKyC;AAAc;MAAI;;YAMhB;AAAkB;MAAI;;;wBAIvD,AAAqB,2DACa,+BAAnB;cACvB;6BAAa;QACb,AAAqB,oCAAS;QACxB;MACR;;AAGyB,cAAc,UAAZ;MAAY;;;UA3XvB;;UACC;MALM;;MACA;;MAmCd;MAEU,6BAAuB;MAEd;;MACjB;MACA;MACN;MACA;MAEE;MA0DA;MAqDe;MAKD;MA2DlB;MACa;;AAxNX,qDAAgB,QAAQ;MAC3B,iBAAW,gCAAiB;cAAC;AAC3B,gBAAO,kDACE,mBACA,AAAM,2BAAgB,cAAiB,AAAC,eAAZ,AAAM,kBAAO;;MAIpD,0BAAoB,AAAM;MAC1B,wBAAkB,AAAM;IAC1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICbO;;;;;;IACA;;;;;;IACC;;;;;;IACD;;;;;;IACS;;;;;;IACV;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;;UAcW;MACf,AAAE,EAAA;IACJ;;;QAbO;;QACA;;QACA;QACA;;QACA;QACA;QACA;QACA;QACA;;;;;;;;;;;EACL;;;;;;;;;;;;;;;;;;;;;mBA6CgC;AAChC,YAAO,0CACC,iCAAkB,KAAK,mBACP,8BAAN,KAAK,eACH,0BAAN,KAAK,aACD,+BAAN,KAAK,kBACM,yCAAN,KAAK;IAExB;;;QAfgB;QACA;;QACA;;QACA;;QACA;;;;;;;;EACd;;;;;;;;;;;;;;;IAcwB;;;;;;YAOP,OAAc;;UAAd;MACX,cAAQ,KAAK,EAAE,aAAa;AAC5B,qBAAsB,kCAAQ,KAAK;AAEzC,oBAAI,AAAS,QAAD;cAEV;;QAAO;YACF,eAAI,AAAS,QAAD,6BAAkB,AAAS,QAAD;eAC3C;eAA+B,mBAAf,AAAS,QAAD;QAAjB;YACF,eAAI,AAAS,QAAD;gBACjB;gBAAyC,6BAAf,AAAS,QAAD;QAA3B;;MAGW,qDAAmB,KAAK;cAC5C;6BAAY,aAAO,QAAC;;;AAElB,YAAU,mBAAN,KAAK;UACP,AAAM,KAAD,YAAyB,MAAd,AAAS,QAAD,OAAC;;QAG3B,AAAM,KAAD,QAAQ,AAAM,AAAS,KAAV;QAClB,AAAM,KAAD,SAAS,KAAK;QACnB,AAAM,KAAD;QACL,AAAM,KAAD;QACL,AAAM,KAAD,aAA6C,OAAjC,iCAAkB,aAAa,GAA/B;QACjB,AAAM,KAAD,wBAAc,AAAS,QAAD,uBAAsC,QAAjB,AAAM,KAAD,aAAC;QACtD,AAAM,KAAD,2BACD,AAAS,QAAD,0BAA4C,QAApB,AAAM,KAAD,gBAAC;QAC1C,AAAM,KAAD,sBAAY,AAAS,QAAD,qBAAkC,QAAf,AAAM,KAAD,WAAC;;AAGpD,UAAI;QACK,AAAC,eAAR,cAAS;;IAEb;WAGkB,OAAc;;UAAd;MACV,aAAO,KAAK,EAAE,aAAa;AAC3B,yBAA0B,kCAAQ,KAAK;AACvC,qBAAsB,kCAAQ,aAAa;AAEjD,oBAAI,AAAa,YAAD;cAEd;;QAAO;YACF,eAAI,AAAa,YAAD,6BAAkB,AAAa,YAAD;eACnD;eAAoC,oBAAnB,AAAa,YAAD;QAAtB;YACF,eAAI,AAAa,YAAD;gBACrB;gBAA6C,6BAAnB,AAAa,YAAD;QAA/B;;AAET,UAAI,aAAa;QACK,qDAAmB,aAAa;;cAMtD;6BAAY,aAAO,QAAC;;;AAElB,YAAkB,mBAAd,aAAa;UACf,AAAM,KAAD,YAA4C,MAAjC,iCAAkB,aAAa,GAA/B;;QAGlB,AAAM,KAAD,gBAAQ,aAAa,EAAb,sBAAe,AAAS;QACrC,AAAM,KAAD,SAAS,aAAa;QAC3B,AAAM,KAAD;QACL,AAAM,KAAD;QACL,AAAM,KAAD,aAA0B,QAAd,AAAS,QAAD,OAAC;QAC1B,AAAM,KAAD,cAAc,AAAS,QAAD;QAC3B,AAAM,KAAD,iBAAiB,AAAS,QAAD;QAC9B,AAAM,KAAD,YAAY,AAAS,QAAD;;cAK3B;6BAAS,MAAK;IAChB;;;UAGwB;UAAiB;MACjC,4BAAqB,QAAQ,YAAY,QAAQ;AACjD,oBAAU,iCAAkB,QAAQ;AACpC,oBAAU,iCAAkB,QAAQ;AACpC,yBAA0B,kCAAQ,QAAQ;YAEhD;YAAgC,4BAAR,OAAO;MAAxB;aACP;aAA4B,wBAAR,OAAO;MAApB;AAEP,UAAI,QAAQ;QACU,qDAAmB,QAAQ;;cAGjD;6BAAY,aAAO,QAAC;;;AAElB,YAAa,mBAAT,QAAQ;UACV,AAAM,KAAD,YAAmB,MAAR,OAAO,EAAP;;QAGlB,AAAM,KAAD,gBAAQ,QAAQ,EAAR,sBAAU,AAAS;QAChC,AAAM,KAAD,SAAS,QAAQ;QACtB,AAAM,KAAD;QACL,AAAM,KAAD;QACL,AAAM,KAAD,YAAsB,SAAR,OAAO;QAC1B,AAAM,KAAD,wBAAc,AAAa,YAAD,uBAAsB,AAAM,KAAD;QAC1D,AAAM,KAAD,2BACD,AAAa,YAAD,0BAAyB,AAAM,KAAD;QAC9C,AAAM,KAAD,sBAAY,AAAa,YAAD,qBAAoB,AAAM,KAAD;;AAExD,UAAa,8BAAT,QAAQ;QACU,yDAAuB,QAAQ;;cAGrD;6BAAS,MAAK;IAChB;cAGqB,OAAc;;UAAd;MACb,gBAAU,KAAK,EAAE,aAAa;AAC9B,sBAAY,iCAAkB,KAAK;AACnC,yBAA0B,kCAAQ,KAAK;YAE7C;YAAmC,6BAAV,SAAS;MAA3B;aAEP;4BAAY,YAAO,QAAC;;;QAClB,AAAM,KAAD,SAAS,aAAa;QAC3B,AAAM,KAAD;QACL,AAAM,KAAD,YAAqB,MAAV,SAAS,EAAT;QAChB,AAAM,KAAD,aAAsB,OAAV,SAAS,EAAT;QACjB,AAAM,KAAD,wBAAc,AAAa,YAAD,uBAAsB,AAAM,KAAD;QAC1D,AAAM,KAAD,2BACD,AAAa,YAAD,0BAAyB,AAAM,KAAD;QAC9C,AAAM,KAAD,sBAAY,AAAa,YAAD,qBAAoB,AAAM,KAAD;;AAGxD,UAAU,8BAAN,KAAK;QACa,yDAAuB,KAAK;;cAElD;6BAAS,MAAK;IAChB;;6CA/IkB,gBAAc;;;AAAhC;;EAA4C;;;;;;;;;gEAlDb;;AAC/B,eAAI,KAAK,EAAL,qBAAO,AAAS;AAClB,YAAY,AAAE,AAAS,gBAAhB,KAAK;;AAGd,QAAU,8BAAN,KAAK;AACP,YAAO,AAAM,MAAD;;AAGd,QAAU,+BAAN,KAAK;AACP,YAAiC,sBAAV,cAAN,KAAK;;AAGxB,QAAU,yCAAN,KAAK;AACP,YAAsC,2BAAV,cAAN,KAAK;;AAG7B;EACF;;;;;;;;;MCjCW;;;;;;MACoB;;;;;;MACN;;;;;;MACC;;;;;;;AAWe;MAAuB;;;UARvD;UACA;UACA;UACA;UACS;;;;;;;AACX,kDAAW,GAAG;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAOjB;;;;;;;QAIK;QACN,aAAQ,AAAO;MACjB;YAG0B;;;AAAY;cAAe;cAAO;cAAR,sBAAP;MAAuB;;gBAEpD;AACd,2BAAI,AAAO;UACM,AAAC,8BAAhB,AAAO,uBAAU,QAAQ;;QAE3B,cAAS;UACP,aAAQ,QAAQ;;MAEpB;;;QAIQ;cACN,AAAO;QAAA,qBAAW;AAClB,YAAU,kCAAN;iBACK,wBAAN;UAAwB,sBAAG;cACvB,KAAU,0BAAN;kBACF,0BAAN;UAA0B,uBAAG;;QAEhC;MACF;;;MA9BG;;;IA+BL;;;;;;;;;;;;;;;;;;;;IAIsC;;;;;;;AAKC;IAAqB;;;QAHhC;QAAmB;;;;AAAY,gEAAW,GAAG;;EAAC;;;;;;;;;;;;;;;;;AC3DtE,sBAAI,eAAS,cAAS;;MACxB;;;;;;;;;;;;;;;;;;;;;;MDsEQ;AACN,eAAW,WAAY;QACrB,AAAQ,QAAA;;IAEZ;;UAG0B;AACxB,YAAmB,AAAS,6CAC1B,gBACA,8BACA,AAAO,qBACP,OAAO;IAEX;;;IAlBM,iBAAsB;;;EAmB9B;;;;;;;;;;;;;;;;;;;;;;;;;;MErG2B;;;;;;MACd;;;;;;MACG;;;;;;MACH;;;;;;MACuB;;;;;;MAAW;;;;;;MAAS;;;;;;MACE;;;;;;MAC/C;;;;;;;YAgBiB;AACxB,cAAO,kCACG,mBACE,yBACI,4BACD,yBACF,kBACL,gCACmB,6CACN,+BACR;gBAAC;AAAe,6CAAI,cAAM,AAAQ,aAAK,UAAU;;MAChE;;;UAxBO;UACA;UACA;;UACS;;UACT;;UACA;UACA;UACA;UACA;UACA;;;;;;;;;;;AACF,kDAAW,GAAG;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MD6BU;;;;;;MACnB;;;;;;MACG;;;;;;MACA;;;;;;MACH;;;;;;MACA;;;;;;MACqB;;;;;;MACe;;;;;;MAC3C;;;;;;MACA;;;;;;MAEA;;;;;;MACK;;;;;;;AAsC2B;MAAoB;;;UAnCjD;UACA;UACA;;UACS;;UACT;;UACA;;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;;;;;;;;;;;;;AACF,gDAAW,GAAG;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA2BjB;;;;;;;;QAQK;6CACN,AAAO;QAAA,qBAAW;AAEd,2BAAe,AAAc,qDAAqB,AAAO;AAE7D,sBAAI,AAAO;AACT,wBAAI,YAAY;AACd,0BAAI,AAAc,mDAAmB,AAAO;cAC1C;;cAEA;;YAEF,kBAAa,AAAc,6CAAa,AAAO;;YAE/C,kBAAa,AAAO;YACpB;YACA,AAAc,sCAAiB,eAAV,wBAAkB,AAAO;;;UAGhD,kBAAa,AAAO;UACpB;iBACA;gCAAmB;;AAGrB,4BAAI,AAAO;UACT,gBAAuB,AAAC,+BAAd,AAAO,qBAAkB,eAAV;;QAG3B;MACF;;;cAME;6BAAS;QACT,gBAAW,AAAO,AAAG,kDACf,sBAAY,iBACV,wBAAkB,iCAAgB,2DAEpC,uBAAY,oBACV,AAAO,gBACP,wBAAkB,iCAAgB;MAE5C;;AAGM,wBAAyB,AAAC,+BAAd,AAAO,qBAAkB,eAAV;AAC/B,yBAAI,SAAS,EAAI;UACf,gBAAU,SAAS;UACnB;;MAEJ;;;QAIQ;6CACN,AAAO;QAAA,qBAAS;AAChB,YAAc,eAAV,+BAAe,AAAO;AACxB,wBAAI,AAAO,qCAAc,AAAc,qDAAqB,AAAO;YACjE,AAAc,+CAAe,AAAO;;;eAIxC;8BAAS;QAET;QACA;QACA;QACA;MACF;;;QAIQ;6CACN,AAAO;QAAA,qBAAuB;MAChC;sBAGgC;;;;QACxB,sBAA0B,mBAAV,SAAS;AAE/B,yBAAI,AAAU,SAAD,KAAO,AAAO;UACzB;;0EAEF,AAAO;QAAA,qBAAiB,IAAK,SAAS;MACxC;YAG0B;;;AAKxB,cAAO;cAAyB,eAAV;cAAD,gBAAP;MAChB;;;MAvGG;MACG;MACQ;MACN;;;IAqGV;;;;;;;;;;;;;;;;;;;;;;;;;;MElLgB;;;;;;;AAEM,cAA+B,gBAA/B,AAAc,6CAAa;MAAK;;;UAJhC;;MAEN;AAFc,6CAAW,GAAG;;IAAC;;;;;;;;;;;;;;;;;;;;;;MAoB7B;;;;;;;AAEM,cAAuB,MAAb,AAAM;MAAW;;AAUZ;MAAc;;;UAf3B;;MAGR;AAHgB,+CAAW,GAAG;;IAAC;;;;;;;;;;;;;;;;;;;;;MAShC,yBAAM;YAAG;;;;;;;;;;QAepB,YAAO,AAAc,wDAA8B,AAAE,eAAR;QAE7C,8BAAiB,AAAE,eAAN,oCAAwB,AAAE,eAAN;AAEjC,sBAAQ,AAAE,eAAN;UACF,qBAAkB,mCAAJ,oBAAuB,AAAE,eAAR;;QAGvB,AAAM,+BAAO,eAAN,cAAW;QACtB;MACR;;AAIE,sBAAI;UACE,uDAAJ,cAAS;;YACW,AAAU,eAAtB,AAAE,eAAR;kBACA;kBAA8D,gBAA/B,iBAAb,AAAE,eAAR;YAAL;mBACP;mBAAiE,gBAAlC,iBAAb,AAAE,eAAR;YAAL;YACG,AAAM,+BAAO,eAAN;;;QAGrB;QACM;MACR;;YAG0B;AACxB,cAAa,AAAE,gBAAR,mBAAc,OAAO;MAC9B;;;MAlCG;MACE;MACS;;;IAiChB;;;;;;;;;;;;;;;;;;;;;UC9F4B;;;MACxB,AAAO,sBAAU,OAAO;AAChB;AACR,oBAAI;QACF,SAAS;AACT,YAAI,MAAM,UAAU,MAAO,OAAM;;AAEnC,oBAAI,AAAO;QACT,UAAmB,sBAAV,cAAa,MAAM;AAC5B,YAAI,MAAM,UAAU,MAAO,OAAM;;AAEnC,oBAAI,AAAO;QACT,UAAkB,sBAAT,eAAY;AACrB,YAAI,MAAM,UAAU,MAAO,OAAM;;AAEnC,oBAAI,AAAO;QACT,UAA6B,SAAZ,sBAAR,gBAAW,wBAAH,gBAAe;AAChC,YAAI,MAAM,UAAU,MAAO,OAAM;;AAEnC,eAAsC,SAAZ,SAAX,sBAAR,gBAAW,uBAAH,gBAAc,wBAAH,gBAAe;YAAH,iBAAyB,eAAT;IACxD;;AAEqB;IAAI;;AAEJ;IAAI;;AAEN;IAAI;;AAEH;IAAI;;AAEL;IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAiBZ;;;;;;MAGY;;;;;;;;UAGhB;;UACoB;;UACpB;;;qBACQ,wCAAiB,QAAQ;AAClC,uDAAW,GAAG;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;MAMV;;;;;;MAGY;;;;;;;;UAGhB;;UACoB;;UACpB;;;sBACQ,wCAAiB,QAAQ;AAClC,yDAAW,GAAG;;IAAC;;;;;;;;;;;;;;;;;;IAMR;;;;;;IAMA;;;;;;IAMA;;;;;;;;QAGH;;QACD;;QACA;;;;;;EAAwB;;;;;;;;;;;;;;;;;;IAKF;;;;;;;;AADb;IAAO;;;MAAP;;IAAO;;;AAGf;IAAkB;;;MAAlB;;IAAkB;;AAKP,YAAQ,qDAAR;IAAc;;AACf,YAAQ,oDAAR;IAAa;;AAGX,YAAC,AAAW,oBAAc;IAAQ;;AAGnC,YAAC,AAAW,oBAAc;IAAO;;AAGlC,YAAC,AAAW,oBAAc;IAAM;;AAGhC,YAAC,AAAW,oBAAc;IAAM;;AAGlD,oBAAI;AACF,cAAO;;AAET,YAAe,qEAAR;IACT;;AAGQ,wBAAc;AACpB,UAAgB,aAAZ,WAAW,kBAAI,AAAS,mCAAoB,MAAkB;AAClE,UAAgB,aAAZ,WAAW,kBAAI,AAAS,kCAAmB,MAAkB;AACjE,UAAgB,aAAZ,WAAW,iBAAG,AAAS,iCAAkB,MAAkB;AAC/D,YAAkB;IACpB;;UASK;UACA;UACA;UACA;AAEH,oBAAI,mBAAa,OAAO,UAAU,MAAO,QAAO;AAChD,oBAAI,kBAAY,MAAM,UAAU,MAAO,OAAM;AAC7C,oBAAI,iBAAW,MAAM,UAAU,MAAO,OAAM;AAC5C,YAAO,MAAK;IACd;;;QAlDsB;IAJJ;;IAGR;;;IAER,2BAAiC;EACnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAwDF;;;QALK;;;;;EAKL;;;;;;;;;;;;;;;;;;;;;;;;;;;WC5J6B;UAAU;AACnC,qBAAK,SAAS;AACZ;;AAEF,UAAI,AAAI,GAAD;QACL;;AAEA,iBAAW,KAAM,IAAG;UAClB,kBAAa,EAAE;;;IAGrB;;;;;EACF;;;;;;;;;;;;;;;IAGyB;;;;;;;MAIf;MACN,AAAO,wBAAY;IACrB;;AAOE,oBAAI,AAAO,AAAS;QAClB;;IAEJ;;AAEgC;AAC9B,YAAI,AAAO,AAAS,AAAO;AACzB,yBAAK,qBAAc;UACnB;gBACM;UACN;;AAEA,yBAAK,wBAAiB;UACtB;gBACM;UACN;;MAEJ;;;MAQE,AAAO,2BAAe;MAChB;IACR;;;IAxCuB,eAAS;IAQ3B;IAEA;;;;;;;;;;;;;;;;;;;;;EAiCkD;;;;;;;;;;;;;EAQzB;;;;;;;MAMtB;MACiB,AAAE,eAAV;IACjB;;MAKyB,AAAE,eAAV;MACT;IACR;;UAIkD;cACxC,KAAK;;;UAET;AACA;;;;UAEA;AACA;;;;UAEA;AACA;;;;UAEA;AACA;;;;qBAZJ;;;IAcF;;;;;;;;;;;;;;;;;;;;;MC3GG;;;;;;MACO;;;;;;uBAEkB;AAC1B,YAAI,AAAI,GAAD,UAAU;AACb;AACJ,YAAQ,iBAAJ,GAAG;UACL,SAAS,AAAI,GAAD;cACP,KAAQ,OAAJ,GAAG;UACZ,SAAS,AAAI,GAAD;cACP,KAAQ,YAAJ,GAAG;UACZ,SAAS,AAAI,GAAD;;AAEd,cAAO,OAAM;MACf;;QAGE,2BAAU,qBAAe,kBAAmB,iCAAqB;MACnE;;;QAGE;AACA,cAAO;cAAQ,eAAR,iBAAY,iBAAmB;MACxC;;AAEgB;MAAK;;QAInB;AACA,cAAO;MACT;;gBAGa;AACX,YAAW,YAAP,eAAU,QAAQ,GAAE;QACxB,gBAAS,QAAQ;QACjB;MACF;;gBAGe;YAAqB;AAC9B;AACJ,YAAI,MAAM;UACR,iBAAU,MAAM;UAChB;;AAEF,yBAAI,QAAQ,EAAI;UACd,gBAAS,QAAQ;UACjB;;AAEF,YAAI,UAAU;UACZ;;MAEJ;;sBAEiC;;YAAiB;AAC1C,sBAAU,AAAI,IAAA;QACpB,AAAO,AAAG,OAAH,mBAAQ,QAAC;UACd,YAAO,QAAQ,WAAmB;iCACxB,QAAC;;YACX,YAAO,qBAAwB,4BAAmB,MAAb,YAAY,EAAZ,cAAoB,cAAJ,GAAG;;MAE5D;;;MA/DG;MACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IDmE2B;;;;;;;;;;;;UErDF;AAAW,mCAAO,MAAM;IAAC;;;;;;;;;;;;;;;;;;;;;QD6D1D;AACA,cAAO;MACT;;gBAGa;AACX,YAAW,YAAP,eAAU,QAAQ,GAAE;QACxB,gBAAS,QAAQ;QACjB;MACF;;gBAEY;AACV,YAAI,CAAC;UACH,aAAQ,CAAC;;AAEX,cAAO;MACT;;YAEiB;QACf,AAAE,EAAA,CAAC;QACH;MACF;;AAGqB,cAAM,eAAN;MAAgB;;;AAEjB,cAAC;cAAgB,sBAAG;MAAQ;;0BAjCxC;AAAR;MACE,gBAAS,GAAG;MACZ;IACF;;;;;;;;;;;;;;;;;;;;8CAHQ;;;;;;;;QAkDA;cACW;6BAAU,yBAAqB;cAAC;AAAM;;MACzD;;gCATc;AAAW,2CAAM,OAAO;MACpC;IACF;;;;;;;;;;;;;;;;IAmCW;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACG;;;;;;;AAYZ,YAAgB;IAClB;;AAGE,YAAgB;IAClB;;AAGE,YAAgB;IAClB;iBAEgC;AAC9B,YAAgB,2DAA+B,OAAO;IACxD;;AAGE,YAAgB;IAClB;;;QA1BO;;QACA;;QACA;;QACA;;QACA;QACA;;;;;;;;;EACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAzDuB;EAAc;mEAoBjB;;;QACY;QACxB;QACA;AAER,UAAO,gDAAuB,QAAC;;;AAC7B,sBAAI,AAAO;AACT,gBAAO,SAAS;gBAAT;cACF,eAAI,AAAO;AAChB,gBAAO,QAAO,WACR,AAAO,OAAA,CAAC,AAAO,6BACf,6BAAc,kBAA+C,gCAArB,AAAO;cAChD,eAAI,AAAO;AAChB,gBAAO,QAAO,WACR,OAAO,GACE;;AAEjB,cAAO,AAAM,OAAA,CAAC;;EAElB;;;AApBO;UACe;UACY;UACxB;UACA;AAJH,yDACR,YADQ,OACP,aADO,SACL,WADK,OACP;;EAmBA;;;;;;;;;;;;;;;;;;ME5I+B;;;;;;MACpB;;;;;;MAIA;;;;;;MACA;;;;;;MAC8B;;;;;;MACrC;;;;;;MACA;;;;;;MACqD;;;;;;MAChD;;;;;;MACK;;;;;;0BAkBuC;;;QAC7C,0BAAoB,UAAU;cACpC,UAAU;;UACN,QACA,iDAAqC;UAErC,QAAI,kDAAmC;UACvC,QACE,qDAA4D;;;MACpE;;AAG8B;MAAc;;;UA3BrC;UACS;;UACT;;UACA;;UACA;UACA;;UAEA;UACA;UACA;UACA;;;;;;;;;;;;AAXD;;IAaJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAoBC;;;;;;;;AAEqB;MAAK;;;QAAL;;MAAK;;;AAKrB,2BAAe,AAAc,qDAAqB,AAAO;AAE/D,sBAAI,AAAO;AACT,wBAAI,YAAY;YACd,qBAAa,AAAc,mDAAmB,AAAO;YACrD,kBAAa,AAAc,6CAAa,AAAO;;YAE/C,kBAAa,AAAO;YACpB;YACA,AAAc,sCAAiB,eAAV,wBAAkB,AAAO;;;UAGhD,kBAAa,AAAO;UACpB;gBACA;+BAAmB;;wCAErB,AAAO;QAAA,sBAAW;AAClB,sBAAI,AAAO,uBAAU,AAAI,AAAgB,gCAAmB;kBAC1D;iCAAmB;;QAErB,cAAQ,AAAU,uBAAO,QAAC,QAAS,cAAS;;QACtC;MACR;;QAIQ;AACN,qCAAI,AAAO;UACmB,AAAC,wCAA7B,AAAO;;MAEX;sBAG0B;;;;QAClB,sBAA0B,aAAV,SAAS;mEAC/B,AAAO;QAAA,qBAAiB,IAAK,SAAS;MACxC;;AAIE,qCAAI,AAAO,8BAA+B,AAAC,wCAAf,AAAO;AACnC,YAAc,eAAV,iCAAe,AAAO;AACxB,wBAAI,AAAO,qCAAc,AAAc,qDAAqB,AAAO;YACjE,AAAc,+CAAe,AAAO;;;QAGxC,AAAM;QACN,AAAU;QACV;QACA;QACM;MACR;;YAGqD;QAC7C,0BAAoB,UAAU;QACpC,AAAW,UAAD,KAAK,iDAAqC;MACtD;;YAG0B;AAAY,cAAY,uDAC5C,iBACA;;AAAM;gBAAyB,eAAV;gBAAD,gBAAP;;MACd;;;MAvEC,kBAAY;MACf;MACG;MACkB;;;;IAqE1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC5HO;;;;;;IACA;;;;;;IACM;;;;;;IACA;;;;;;IACA;;;;;;IAEN;;;;;;IACA;;;;;;IAEO;;;;;;IACH;;;;;;IACH;;;;;;IAEA;;;;;;IAEG;;;;;;IAEH;;;;;;IAEe;;;;;;IAEH;;;;;;IAWsB;;;;;;;AAPH;IAAI;;UAEmB;MAC1D,aAAO,MAAM;AACb,YAAO;IACT;;UAIwB;AACtB,UAAI,AAAU;QACZ,aAAQ,KAAK;;AAEb,YAAI,AAAM,AAAW,KAAZ,eAA0B;UACjC,aAAQ,KAAK;;UAEb,iBAAY,KAAK;;;MAGrB;IACF;;UAE4B;MAC1B,iBAAY,KAAK;MACjB;IACF;;MAGE,cAAS;MACT;IACF;;;IAvDK;IACA;IACM;IACA;IACA;IAEN,0BAAgC;IAChC;IAEO;IACH,kCAA4B;IAC/B,+BAAgC;IAEhC,qCAAsC;IAEnC,wCAAkC;IAErC,gBAAU;IAEK,mBAAa;IAEhB;IAEd,aAAO;IAS6B,aAAO;;;EAwBjD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IClDe;;;;;;IACO;;;;;;;UAGI;AACtB,UAAI,SAAgB,KAAK,EAAG;AAE5B,YAAa,0BAAN,KAAK,KACI,YAAZ,AAAM,KAAD,QAAU;IACrB;;AAGoB,YAAM,eAAN;IAAc;;wCAbX,OAAY;QAAZ;QAAY;;;;EAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAiBnB;;;;;;MACT;;;;;;MACe;;;;;;MACb;;;;;;MACI;;;;;;MACN;;;;;;MACA;;;;;;MACK;;;;;;MACN;;;;;;MACA;;;;;;MACkC;;;;;;MAC7B;;;;;;MACK;;;;;;MACG;;;;;;MACR;;;;;;MACL;;;;;;MACA;;;;;;MAQG;;;;;;MAGD;;;;;;MAEO;;;;;;MACO;;;;;;MACT;;;;;;MACH;;;;;;MACJ;;;;;;;YAqC4B;AACjC,mBAAgB;AAEpB,iBAAO;cAAe;AAChB,uBAAS;AAEb,cAAI,AAAO,OAAA,kBAAa,AAAO,MAAD;UAC9B,AAAO,MAAD;AACN,cAAI,AAAO,OAAA,kBAAa,AAAO,MAAD;UAE9B,AAAK,IAAD,OAAK,AAAO,OAAA;AAChB,gBAAgB,UAAP,MAAM;;;AAGb,yBACC,AACA,CADD,SADe,IAAI,6BACD,wCAA6B,QAAQ;AAG3D,cAAO,+BAAY,gBAAuB,MAAb,UAAU,SAAM,IAAI;MACnD;;;YAGU;YACQ;YACV;YACe;YACb;YACI;YACL;YACI;YACL;YACA;YACI;YACM;YACE;YACR;YACJ;YACS;YACA;YACN;YACY;YACf;YACuC;YACvC;YACE;YACF;AAEN,cAAO,uDAE2B,MAA5B,2BAA2B,EAA3B,cAAoC,6DACH,OAAlB,iBAAiB,EAAjB,eAA0B,uCAClC,QAAL,IAAI,EAAJ,gBAAa,2BACR,QAAL,IAAI,EAAJ,gBAAa,iCACI,QAAX,UAAU,EAAV,gBAAmB,uCACR,QAAX,UAAU,EAAV,gBAAmB,kCAClB,QAAN,KAAK,EAAL,gBAAc,kCACE,QAAX,UAAU,EAAV,gBAAmB,kCAClB,QAAN,KAAK,EAAL,gBAAc,iCACA,QAAV,SAAS,EAAT,gBAAkB,yCACA,QAAd,aAAa,EAAb,gBAAsB,sCACtB,QAAP,MAAM,EAAN,gBAAe,gCACN,SAAR,OAAO,EAAP,iBAAgB,mCACN,SAAT,QAAQ,EAAR,iBAAiB,4CACQ,SAAjB,gBAAgB,EAAhB,iBAAyB,sDACJ,SAAnB,kBAAkB,EAAlB,iBAA2B,sDACZ,SAAjB,gBAAgB,EAAhB,iBAAyB,4CACxB,SAAT,QAAQ,EAAR,iBAAiB,wCACA,SAAb,YAAY,EAAZ,iBAAqB,2CACV,SAAZ,WAAW,EAAX,iBAAoB,2CACN,SAAb,YAAY,EAAZ,iBAAqB,yCACd,qBAAV,iBAAkB,kDAEH,SAAtB,qBAAqB,EAArB,iBAA8B;MAEtC;;;AAEgB;MAAM;;;;QAAN;;MAAM;;YAGY;AAE1B,oBAAQ,AAIZ,kFADc,4CACU;QAE1B,cAAS,AAAM,KAAD;AACd,cAAO,MAAK;MACd;;;UA3HgB;;UACA;;UACT;UACA;UACA;UAEA;;UACA;;UACA;UACA;UACA;;UACA;UACA;UACA;UACA;;UACA;UACA;UACA;;UACA;;UACA;UACA;UACA;UACA;;UACA;;MAuFS;;;;;;;;;;;;;;;;;;;;;;;;;mBAtFH,+BAAa,IAAI;WACjB,AAAK,IAAD,sCAC2D,mDAA3B,IAAI,mCAAkB,IAAI;AACrE,6CACO,gCAAS,IAAI,SACZ,IAAI,aACK,oDAAJ;;IACZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC7Fa;;;;;;IAEM;;;;;;IACZ;;;;;;;AAFQ,uBAAA,AAAW,oCAAiB,AAAW;IAAI;qBAQnC;AACtB,mBAAS;AACf,UAAI,MAAM;AACF,oBAAQ,AAAW,0BAAQ,MAAM;QACvC,AAAU,uBAAC,KAAK,EAAI,AAAO,MAAD,kBAAiB;;IAE/C;sBAE+B;AACvB,mBAAS;AACf,UAAI,MAAM;AACF,oBAAQ,AAAW,0BAAQ,MAAM;QACvC,AAAU,uBAAC,KAAK,EAAI,AAAO,MAAD,mBAAkB;;IAEhD;;2CAlBO,YACA,YACA;QAFA;QACA;;;;;EAEN;;;;;;;;;;;;;;;;;;;;;;;;;IAuBmB;;;;;;;UAEW;UAAe;AACtC,gBAAU,eAAM,IAAI;AAEpB,kBAAQ,AAAI,AAAK,AAAW,GAAjB,2BAAuB;YAAC;AAAY,cAAA,AAAQ,QAAD;;AACxD;AACE,4BAA0B;AAGhC,eAAS,OAAQ,MAAK;AACpB,YAAI,AAAQ,OAAD;UACT,UAAA,AAAQ,OAAD,GAAW,SAAL,IAAI;;UAEjB,UAAA,AAAQ,OAAD,IAAY,eAAL,IAAI;;QAEpB,AAAgB,eAAD,OAAK,OAAO;;AAGvB,uBAAa,AACd,AACA,AACA,AACA,eAJ6B,uCACzB;YAAC;AAAM,uDAAS,CAAC,EAAE,iBAAW,CAAC;0DAC7B;YAAC;AAAY,cAAA,AAAQ,QAAD;qFACtB;YAAC;AAAM,sDAAS,AAAE,CAAD,MAAa,eAAP,AAAE,CAAD;;AAG3B,mBAAS,uCAAyB,AAAI,GAAD;AAC3C,oBAAI,AAAW,UAAD;AAEN,wBAAY,AAAW,UAAD;AACtB,2BAAe,mBAAa,IAAI,EAAE,AAAU,AAAM,SAAP;AACjD,sBAAI,AAAa,YAAD;UACd,AAAO,MAAD,UAAQ,YAAY;;AAGtB,+BAAmB,AACpB,AASA,UAV8B,0BAE7B;cAAC;AAAM,gBAAA,AAAE,AAAM,EAAP;AACM;AACV,kBAAI,AAAE,AAAM,CAAP,2BAAgD,+BAAlB,AAAE,AAAM,CAAP;oCAAiB;AAClD,oCAAM;oCAAN;;wBAEC,AAAE,CAAD;;AAIf,cAAO,kCACL,gBAAgB,EAChB,MAAM,EACN;;AAKJ,YAAO,kCACL,AAAW,AAAoB,UAArB,0BAAK;YAAC;AAAM,cAAA,AAAE,EAAD;8DACvB,MAAM,EACN;IAEJ;;UAE6B;AAC3B,eAAW,QAAS,SAAQ;QAC1B,cAAS,KAAK;;IAElB;;UAEsB;MACpB,AAAO,kBAAI,KAAK;AAGhB,eAAS,OAAQ,oBAAa,KAAK;QACjC,cAAS,IAAI;;IAEjB;;UAEmC;AAC3B,mBAAkB;AACxB,oBAAI,AAAM,AAAS,KAAV;AACP,cAAO,OAAM;;AAGT,uBAAa,AAAM,KAAD;AACxB,eAAS,OAAQ,AAAM,MAAD;AAEd;AAAoB;AACxB,cAAI,AAAK,IAAD,mCAAyC,eAAhB,AAAK,IAAD;AACrC,cAAI,AAAM,KAAD,mCAA0C,eAAjB,AAAM,KAAD;;;QAEzC,AAAO,MAAD,OACJ,gBACE,IAAI,EACJ,UAAU,EACV,iBAAiB;AAIf,uBAAW,mBAAa,IAAI;AAClC,iBAAS,QAAS,SAAQ;UACxB,AAAO,MAAD,OAAK,gBACT,KAAK,EACL,UAAU;AACV,kDACK,iBAAiB;AACpB,gBAAI,AAAM,KAAD,mCAA0C,eAAjB,AAAM,KAAD;;;;;AAK/C,YAAO,OAAM;IACf;gBAIgB,QAAe,YAAgC;UAA/C;UAAe;UAAgC;AAC3D,YAAA,AAAO,OAAD,oBACS,WAAW,QACS,CAAf,aAAX,UAAU,iBAAG,AAAO,MAAD;IAC3B;;UAEsB;AACzB,YAAc,kEAAP,aACL;YAAC;AAAU,cAAA,AAAM,AAAK,AAAM,MAAZ,qBAAqB,IAAI;;IAE7C;mBAEwC,MAAkB;UAAlB;UAAkB;AAClD,mBAAyB;AAC3B,gBAAM,AAAK,IAAD;AACd,UAAI,AAAI,GAAD,GAAG;QACR,OAAO,AAAK,IAAD,gBAAc,GAAG;AACtB,kBAAU,kBAAS,IAAI;AAC7B,YAAI,GAAG;UACL,AAAO,MAAD,UAAQ,AAAI,GAAD;;;AAGjB,wBAAc,AAAU,AAAM,SAAP,kBAAkB,IAAI;AAEjD,eAAS,OAAO,AAAE,CAAD,gBAAG,AAAU,AAAK,SAAN,iBAAc,IAAA,AAAC,CAAA;AACtC,oBAAY,8BAAwC,eAAR,AAAC,eAAZ,WAAW,OAAE,AAAE,CAAD;QACnD,AAAM,MAAA,QAAkB,eAAjB,AAAU,AAAI,SAAL,aAAM,CAAC,IAAM,KAAK;;AAEpC,YAAO,OAAM;IACf;;;QAjJgB;;;;EACd;;;;;;;;;;;;;;;;;;uGAqJ2C;;;AAC3C,aAAS;AACP,oBAAI,AAAI,IAAA,CAAC,OAAO,IAAG,MAAO,QAAO;;AAEnC;EACF;;;AALG;UAA0C;AAA1C,yEAAI;;EAKP;;;;;;;;;;MCrKuB;;;;;;;AAGQ;MAAmB;;QAK5B;QACd;MACR;;AAG4B;MAAa;;AAIf;MAAa;;AAIJ;MAAmB;gBAMxB,SAA2B,WACnC;;YADQ;YAA2B;YACnC;AACpB,cAAO,wCACS,OAAO,QAAE,SAAS,QAAE,kBAAkB,EAAvC;MAIjB;uBAGqC,SAA2B,WAC1C,oBAA2B;YADZ;YAA2B;YAC1C;YAA2B;AAC/C,YAAI,AAAmB;AACrB,gBAAO,8CACM,4CACC,SAAS,SACH,+BAET,KAAK;;AAElB,cAAyB,AAAC,gBAAnB,0BAAoB,OAAO,EAAE,SAAS,EAAE,kBAAkB,EAAE,KAAK;MAC1E;;;UAjE4B;;UACrB;;UACG;UACF;;UACG;;UACgB;UACV;qBACF,WAAW;kCACE,kBAAkB;4BACxB,YAAY;4BACZ,YAAY;kCACN,kBAAkB;iCACnB,iBAAiB;AACtC,yDAAgB,QAAQ;MACR;IACtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCJU;QACA;QACA;QACA;QACA;QACH;;QACA;;QACG;QACG;;QACA;;QACJ;;QACA;QACA;;QACD;;QACC;QACU;QACP;QACF;QACD;QACE;;QACJ;;QACiB;;QACjB;;QACgB;QACd;QACW;QACJ;;QACH;;QACL;;QACA;;QACG;;QACe;QAChB;QACD;;QACA;QACD;AApCQ;AAsCR,mBAAS,+CACG,cAAc,SACvB,KAAK,WACH,OAAO,aACL,SAAS,eACP,WAAW,iBACT,aAAa,gBACd,YAAY,UAClB,MAAM,YACJ,QAAQ,WACT,OAAO,mBACC,eAAe,QAC1B,IAAI,mBACO,eAAe,YACtB,QAAQ,WACT,OAAO,eACH,WAAW,eACX,WAAW,yBACD,qBAAqB,cAChC,UAAU,sBACF,kBAAkB,cAC1B,UAAU,SACf,KAAK,iBACG,aAAa,oBACV,gBAAgB,yBACX,qBAAqB,+BACf,2BAA2B,oCACtB,gCAAgC,+BACrC,2BAA2B,cAC5C,UAAU,yBACC,qBAAqB,yBACrB,qBAAqB,qBACzB,iBAAiB,eACvB,WAAW,gBACV,YAAY,iBACX,aAAa;AAG9B,oBAAI,WAAW;QACb,AAAO,MAAD;;QAEmB,AAAE,eAAV,yDAA+B;cAAC;UAC/C,AAAO,MAAD;;;IAGZ;;;;AAnFK;UACK;UACA;UACA;UACA;UACA;UACH;;UACA;;UACG;UACG;;UACA;;UACJ;;UACA;UACA;;UACD;;UACC;UACU;UACP;UACF;UACD;UACE;;UACJ;;UACiB;;UACjB;;UACgB;UACd;UACW;UACJ;;UACH;;UACL;;UACA;;UACG;;UACe;UAChB;UACD;;UACA;UACD;AApCH,uFAAK,WAAL,OAAO,aAAP,SAAS,eAAT,WAAW,QAAX,IAAI,eAAJ,WAAW,mBAAX,eACN,YADM,QAAQ,UAAR,MAAM,WAAN,OAAO,gBAAP,YAAY,eAAZ,WAAW,eAAX,WAAW,mBAAX,eACN,yBADM,qBACA,cADA,UAAU,sBAAV,kBACH,cADG,UAAU,SAAV,KAAK,YAAL,QAAQ,iBAAR,aAAa,oBAAb,gBACL,yBADK,qBACA,+BADA,2BACM,oCADN,gCACW,+BADX,2BACM,iBADN,aAAa,cAAb,UAAU,yBAAV,qBACA,yBADA,qBACA,qBADA,iBACJ,kBADI,cACP,WADO,OAAO,eAAP,WAAW,gBAAX,YAAY,iBAAZ,aAAa;;EAmFlB;gHAEmC;;;;AACjC,UAAO,AAAI;UAAA,sBAAc,YAAK,6CAAqB,QAAQ;EAC7D;;;AAFY;UAAuB;AAAvB,sFAAQ;;EAEpB;wGAGS,OACA;;QADA;QACA;QACA;QACG;QAGL;;QACU;QACP;QACA;QACA;QACF;QACE;QACI;QACA;QACJ;QACD;QACC;QACD;QACA;QACU;QACP;QACE;QACL;QACD;QACA;QACiB;QACF;QACd;QACW;QACN;QACL;QACA;QACG;QACF;QACA;QACgB;QACjB;QACD;AAvCQ;;AAyCR,mBAAS,+CACK,cAAc,cACT,MAAV,SAAS,EAAT,cACP,kBACE,KAAK,UACE,sCACyB,QAAb,MAAV,SAAS,EAAT,cAAa,mEAAH,eAAuB,yCACjB,wHAIN,OAAZ,WAAW,EAAX,eACT,kBACE,OAAO,UACA,sCACyB,SAAb,QAAV,SAAS,EAAT,gBAAa,qEAAH,gBAAuB,0CACjB,2HAIF,QAAd,aAAa,EAAb,gBAA+B,iDACnB,QAAb,YAAY,EAAZ,wCACC,QAAP,MAAM,EAAN,gBAAqB,8EACV,QAAT,QAAQ,EAAR,gBAAY,wDACL,QAAR,OAAO,EAAP,gDACwB,QAAhB,eAAe,EAAf,gBAA0B,AAAK,oDAC1C,IAAI,oBACuB,QAAhB,eAAe,EAAf,yCACP,QAAQ,YACD,QAAR,OAAO,EAAP,gBAAsB,4DAClB,WAAW,eACX,WAAW,yBACD,qBAAqB,cAChC,UAAU,sBACF,kBAAkB,cAC1B,UAAU,SACf,KAAK,kBACiB,QAAd,aAAa,EAAb,kDACoB,QAAjB,gBAAgB,EAAhB,gBAA0C,uEACf,SAAtB,qBAAqB,EAArB,+DACM,2BAA2B,oCACtB,gCAAgC,+BACrC,2BAA2B,eACjC,SAAX,UAAU,EAAV,iBAAyB,6DACQ,SAAtB,qBAAqB,EAArB,iBAAgC,6DACV,SAAtB,qBAAqB,EAArB,iBAAgC,yDAClB,SAAlB,iBAAiB,EAAjB,iBAAqB,6DACf,SAAZ,WAAW,EAAX,+CACc,SAAb,YAAY,EAAZ,iBAAuB,oDACtB,aAAa;AAEhC,oBAAI,WAAW;QACb,iEAAgB,MAAM;;QAEtB,AAAQ;QACiB,AAAE,eAAV,yDAA+B;cAAC;UAC/C,iEAAgB,MAAM;;;IAG5B;;;;AApGK,uBACI,OACA;UADA;UACA;UACA;UACG;UAGL;;UACU;UACP;UACA;UACA;UACF;UACE;UACI;UACA;UACJ;UACD;UACC;UACD;UACA;UACU;UACP;UACE;UACL;UACD;UACA;UACiB;UACF;UACd;UACW;UACN;UACL;UACA;UACG;UACF;UACA;UACgB;UACjB;UACD;AAvCH,+EAAK,EAAL,OAAO,cAAP,SAAS,YAAT,QAAQ,eAAR,WAAW,iBAAX,aACP,aADO,SAAS,eAAT,WAAW,QAAX,IAAI,mBAAJ,eACL,YADK,QAAQ,UAAR,MAAM,WAAN,OAAO,gBAAP,YAAY,eAAZ,WAAW,eAAX,WAAW,mBAAX,eACL,yBADK,qBACC,cADD,UAAU,sBAAV,kBACF,cADE,UAAU,SAAV,KAAK,iBAAL,aACP,yBADO,qBACC,oBADD,gBACJ,+BADI,2BACO,oCADP,gCAEN,+BAFM,2BACO,cADP,UAAU,yBAAV,qBACC,yBADD,qBACC,qBADD,iBACH,WADG,OAAO,eAAP,WAAW,kBAAX,cACN,gBADM,YAAY,iBAAZ,aACP;;EAmGE;;;QAKgC;;QACxB;;QACE;QACD;;AAJe;AAMhB,2BACQ,uBAAqB,eAAd,yDAAJ;AACX,yBAAqC,eAAtB,AAAe,cAAD;AAE7B,gCAAsB,uCAAsB;cAAC;AACjD,gBAAO,iCACM,OAAO,SACT,oCACE,YAAY;;AAGrB,+BAAqB,uCAAsB,QAAC;;;AAChD,gBAAO,aAAa;gBAAb,eACH,6BACW,+DAGF;;MAGf,AAAa,YAAD,QAAQ,mBAAmB;MACvC,AAAa,YAAD,QAAQ,kBAAkB;AAEpC;;QAGA,cAAa,AAAa,aAAA;;YACN;AAApB;UACA,AAAmB,kBAAD;UAClB,AAAoB,mBAAD;UACnB;;;;MAGF,AAAmB,kBAAD;MAClB,AAAoB,mBAAD;AACnB,YAAO,KAAI;IACb;;;;AA1CU;UACsB;;UACxB;;UACE;UACD;;AAJC,mGAAa,gBAAb,YAAY,iBAAZ,aAAa,WAAb,OAAO;;EA0CjB;gGASS;;;;QACF;;QACE;QACF;;QACsB;QACnB;QACE;QACH;QACC;QACO;mBAER,0CAA0C,eAAP;AAGpC,gBAAc,gBAAU,eAAP;AACvB,UAAO,+EACQ,SAAC,cAAc,WAAW;YAAzB;YAAc;YAAW;AAC/B,wBAAY,MAAM;AACjB,qBAAS,gCAAiB;gBAAC;AAChC,kBAAO,6BAAY,KAAK,SAAS,SAAS;;AAE5C,sBAAI,WAAW;UACb,SAAS,mCAAgB,MAAM;;AAEjC,cAAO,OAAM;iGAEK,kBAAkB,gBACF,AAAa,gDAAH,eAAP,oGACZ,MAAb,YAAY,EAAZ,cAAuB,mDACE,OAAnB,kBAAkB,EAAlB,eAAsB,6GACvB,SAAC,SAAS,WAAW,oBAAoB;;YAAxC;YAAS;YAAW;YAAoB;AAC1D,cAAO,8CACI,4CACC,SAAS,UACM,MAAhB,eAAe,EAAf,cAAmB,+FAErB,KAAK;qGAGF,YAAY,kBAER,QAAd,aAAa,EAAb,gBAAiB,4CAAyB,kBAAiB,IAAI;EAEvE;;;AA5CW;UACF;UACF;;UACE;UACF;;UACsB;UACnB;UACE;UACH;UACC;UACO;AAVN,4EAAM,uBAAN,kBACN,gBADM,YACZ,eADY,WACb,gBADa,YACZ,aADY,kDACN,mBADM,eACT,QADS,IAAI,iBAAJ,aACX;;EA2CA;;;;QAI4B;;QACrB;;QACG;QACF;;QACG;;QACgB;QACE;QACZ;qBAEP,kBAAkB,KAAI,YAAY;AACpC,eAAiC,cAA3B,YAAY,EAAZ,qBAAc,mBAAd,eACE,uBAAiB,eAAd;AAGjB,UAAO,AAAI,IAAD,SACR,wDACe,WAAW,sBACJ,kBAAkB,gBACxB,YAAY,gBACZ,YAAY,sBACN,kBAAkB,qBACnB,iBAAiB,YAC1B,aAAa;EAG7B;;;AA1BW;UACiB;;UACrB;;UACG;UACF;;UACG;;UACgB;UACE;UACZ;AARN,sGAAW,sBAAX,kBAAkB,gBAAlB,YAAY,gBAAZ,YAAY,sBAAZ,kBAAkB,qBAAlB,iBAAiB,gBAAjB,YAAY,iBAAZ,aAAa;;EA0BxB;;;AAGW;UACF;;UACa;UACT;UACH;UACY;UACN;UACA;UACA;UACP;UACA;UACC;UACA;UACA;UACA;UACA;UACA;UACD;UACF;;UACE;UACA;;UACI;UACJ;;UAEO;UAGG;UAGU;AA9BlB,0FAAK,gBAAL,YAAY,cAAZ,UAAU,WAAV,OAAO,kBAAP,cAAc,aAAd,SAAS,YAAT,QAAQ,YAAR,QAAQ,mBAAR,eAAe,oBAAf,gBAAgB,eAAhB,WAAW,cAAX,UAAU,cAAV,UAAU,WAAV,OAAO,UAAP,MAAM,UAAN,MAAM,mBAAN,eAAe,sBAAf,kBAAkB,eAAlB,WAAW,cAAX,UAAU,mBAAV,eAAe,UAAf,MAAM,WAAN,OAAO,aAAP,SAAS,gBAAT,YAAY;;EA8HvB;;;;QA7HS;;QACa;QACT;QACH;QACY;QACN;QACA;QACA;QACP;QACA;QACC;QACA;QACA;QACA;QACA;QACA;QACD;QACF;;QACE;QACA;;QACI;QACJ;;QAEO;QAGG;QAGU;AAEvB,qBAAa,QAAQ,YAAY,UAAU;AAC3C,sBAAc,SAAS,YAAY,WAAW;IAClD,AAAQ,OAAD,WAAP,UAAY;AAEZ,QAAI,MAAM;MACR,AAAQ,OAAD,OAAK,MAAM;;AAElB,UAAI,UAAU;QACZ,AAAQ,OAAD,OAAK,uCACQ,iDACqB,sDACjB,gFACb,+DACG,oCACiB,MAAZ,WAAW,EAAX,cAAe,AAAM,8FAET,2CACI,+DAEtB;;kBACT,QAAQ;YAAR,qBAAU;YACV;sCAEK,mBACM,OAAX,UAAU,EAAV,yCACO,sCAAiC,QAAhB,eAAe,EAAf,gBAAmB,AAAM;;;AAKzD,QAAI,OAAO;MACT,AAAQ,OAAD,OAAK,OAAO;;AAEnB,UAAI,WAAW;QACb,AAAQ,OAAD,OAAK,uCACU,iDACqB,+DACR,QAAZ,WAAW,EAAX,gBAAe,AAAM,oFAC/B,uEACwB,2DAE1B,mBACO,QAAZ,WAAW,EAAX,uCAEI,sCAAkC,QAAjB,gBAAgB,EAAhB,gBAAoB,AAAM,2JAEtC;;kBACT,SAAS;YAAT,qBAAW;;;;AAKd,0BAAkB,2CACI,QAAb,YAAY,EAAZ,gBAA2B,+DACV,QAAf,cAAc,EAAd,gBAA6B,gEAEZ,QAAhB,eAAe,EAAf,gBAAmB,AAAM,8FACnC,uEACwB,mCAAW,uBAAS,MAAM,aAClD,kBAAK,KAAK,cAAuB,4BAAe,UAAU,wEACxD,0CACgC,8CACZ,iCACjB,0BACA,QAAR,OAAO,EAAP,gBACI,kBAAK,UAAU,cACU,4BAAe,eAAe,wEAC3D,mGACA,uEAGS,+BACoB,oEAGf,OAAO,0MAMC;AAG5B,UAAO,0DACL,SAAS,WACH,gDACa,SAAS,SACb,eAAe,gEAExB,eAAe,uBACD,kBAAkB,gBACxB,YAAY;EAE9B;oHAKS;;;;QACA;QACC;QACH;;QACQ;QACP;QACC;QACD;QACD;;QACA;;QACA;;QACA;;QACU;QACL;QACA;AAEV,UAAiB,AACZ,wBAD6B,eAAd,kFAAgC,gBAAgB,WAC1D,8DACC;YAAC;AAAM,0BAAW;mDACb,UAAU,SAEX,gBAAqB,eAAlB,AAAI,2FACA,kBAAkB,gBAEF,AAC/B,gDADoD,eAAlB,AAAI,kHAGV,MAAhB,eAAe,EAAf,cAA0B,6CAChC,SAAS,SACb,KAAK,cACc,OAAf,cAAc,EAAd,2CACG,YAAY,iBACX,aAAa,qBACT,YAAY,YACrB,QAAQ,cACN,UAAU,6BAEO,QAAzB,wBAAwB,EAAxB,sEAEwB,QAAxB,uBAAuB,EAAvB;EAER;;;AA1CW;UACF;UACA;UACC;UACH;;UACQ;UACP;UACC;UACD;UACD;;UACA;;UACA;;UACA;;UACU;UACL;UACA;AAfD,2FAAW,oBAAX,eAAe,aAAf,SAAS,cAAT,UAAU,SAAV,KAAK,gBAAL,YAAY,gBAAZ,YAAY,kBAAZ,cAAc,sBAAd,kBACX,oBADW,gBACb,iBADa,aAAa,cAAb,UAAU,YAAV,QAAQ,4BAAR,wBACL,2BADK,uBACN;;EAyCL;oFA6BU;;;QACF;QACM;QACL;QACG;QACL;QACG;QACH;;QACG;QACE;QACL;;QACC;QACiC;IAGvC,AAAU,SAAD,WAAT,YAAoC,eAAb,iBAAL,IAAI;IACtB,YAAY,6DAAgB,SAAS;AACrC,kBAAI,iBAAiB,KAAI,AAAU,SAAD,IAAI;AACpC;;AAEF,UAAO,AAAW,oDAAJ,EAAE;UAAE,sBAAc,YAC1B,mDACiB,MAAP,MAAM,EAAN,iCACF,0DAAa,IAAI,oBACZ,SAAS,gBACN,YAAY,YAChB,uCACF,SAAS,aACJ,2BAEU,OAAX,UAAU,EAAV,eAAc,yFACH,QAAX,UAAU,EAAV,gBAAc,qFACb,QAAN,KAAK,EAAL,gBAAS,oGACE,gBAAgB,WACzB,OAAO,uBACa,QAAT,QAAQ,EAAR,gBAAY;EAG1C;;;AAvCY,uBACF;UACF;UACM;UACL;UACG;UACL;UACG;UACH;;UACG;UACE;UACL;;UACC;UACiC;AAb7B,oEAAI,WAAJ,MAAM,cAAN,UACX,SADW,KAAK,YAAL,QACb,MADa,EAAE,aAAF,SACZ,oBADY,gBACL,aADK,4BACd,qBADc,iBACJ,cADI,UACX,gBADW,YACT;;EAsCH;qGAEoC,MAAa;;;;AAC/C,QAAS,qBAAL,IAAI;AACN,YAAO,KAAI;UACN,KAAS,oBAAL,IAAI;YACb;YAGG,6CAFmC,MAAM,oDAAiC,MAAM;MAD5E;AAIP,YAAO,eAAM,IAAI;UACZ,KAAS,OAAL,IAAI;MACb;;MAGA;;EAGJ;;;AAhBe,oBAAqB;UAAa;AAAlC,2EAAI,EAAJ,MAAM;;EAgBrB;8FAmBS;;;;QACC;QACH;QACA;;QACgB;AAErB,kBAAI,iBAAiB,KAAI,AAAK,IAAD,IAAI;AAC/B;;AAGF,QAAI,UAAU;AACN,gBAAM,qBAAU,IAAI,mBAAmB,UAAU;MACvD,OAAW,cAAJ,GAAG;;AAGZ,UAAO,AAAW,oDAAJ,EAAE;UAAE,sBAAc,iBAC1B,IAAI,cACO;EAEnB;;;AApBY;UACH;UACC;UACH;UACA;;UACgB;AALX,yEAAI,cAAJ,kBAAE,qBAAF,iBACT,cADS,UAAU;;EAoBtB;gGAmBS;;;;QACC;QACH;QACA;;QACgB;AAErB,kBAAI,iBAAiB,KAAI,AAAK,IAAD,IAAI;AAC/B;;AAGF,QAAI,UAAU;AACN,gBAAM,qBAAU,IAAI,mBAAmB,UAAU;MACvD,OAAW,cAAJ,GAAG;;AAEZ,UAAO,AAAW,oDAAJ,EAAE;UAAE,sBAAc,0CAC1B,IAAI,cACO;EAEnB;;;AAnBY;UACH;UACC;UACH;UACA;;UACgB;AALX,0EAAI,cAAJ,kBAAE,qBAAF,iBACV,cADU,UAAU;;EAmBtB;uFAe0B;;;;QAAiB;AAGzC,UAAO,AAAW,oDAAJ,EAAE;UAAE,sBAAc,aAAS,SAAS;EACpD;;;AAJK;UAAqB;UAAiB;AAAtC,yEAAS,OAAT,EAAE;;EAIP;gGAoBiC,MAAqB;;;QAArB;QAAqB;QAAiB;AAGrE,UAAO,AAAW,oDAAJ,EAAE;UAAE,sBAAc,0BAAsB,IAAI,EAAE,SAAS;EACvE;;;AAJY,uBAAqB,MAAqB;UAArB;UAAqB;UAAiB;AAA3D,0EAAI,EAAJ,SAAS,OAAT,EAAE;;EAId;0GAqBS,MACQ;;;QADR;QACQ;QACV;QACG;QACa;AAErB,QAAI,UAAU;AACN,gBAAM,qBAAU,IAAI,mBAAmB,UAAU;MACvD,OAAW,cAAJ,GAAG;;AAGZ,UAAO,AAAW,oDAAJ,EAAE;UAAE,sBAAc,+BAC1B,IAAI,EACJ,SAAS,cACE;EAEnB;;;AAjBY,uBACH,MACQ;UADR;UACQ;UACV;UACG;UACa;AALX,+EAAI,EAAJ,SAAS,OAAT,EAAE,aAAF,kCAAU;;EAiBtB;0GAcS;;;;QACC;QACH;QACG;QACa;AAErB,QAAI,UAAU;AACN,gBAAM,qBAAU,IAAI,mBAAmB,UAAU;MACvD,OAAW,cAAJ,GAAG;;AAEZ,UAAO,AAAW,oDAAJ,EAAE;UAAE,sBAAc,oCAC1B,IAAI,cACO,oBACH,MAAM;EAEtB;;;AAhBY;UACH;UACC;UACH;UACG;UACa;AALX,+EAAI,cAAJ,kBAAE,UAAF,MAAM,cAAN,UAAU;;EAgBtB;mGAQgC;;;;QAAa;AAC3C,UAAO,AAAW,oDAAJ,EAAE;UAAE,sBAAc,gBAAY,KAAK;EACnD;;;AAFK;UAA2B;UAAa;AAAxC,2EAAK,OAAL,EAAE;;EAEP;sGAuBS;;;;QACS;QACR;QACH;QACgB;AAErB,QAAI,UAAU;AACN,gBAAM,qBAAU,YAAY,mBAAmB,UAAU;MAC/D,eAAmB,cAAJ,GAAG;;AAGpB,UAAO,AAAW,oDAAJ,EAAE;UAAE,sBAAc,+BAC1B,YAAY,GACF,MAAV,SAAS,EAAT,cAAa;UAAC;AAAM;6CACT;EAEnB;;;AAjBY;UACH;UACS;UACR;UACH;UACgB;AALX,qFAAY,cAAZ,SAAS,aAAT,kBAAE,cAAF,UAAU;;EAiBtB;;;AAII,UAAe,gBAAd,oEAA+B,eAAZ,kEAAkC,eAAjB;EAAmB;;;AAIxD,YAAgB,eAAd,qEAAgC,eAAZ,mEAAmC,eAAjB;EAAmB;;;;QAe1D;QACE;;QACA;;QACA;AAEL,kBAAI,aAAa,eAAI;YACnB;2BAAW,aAAS;YAAC;AACnB,cAAQ;;;AAGZ,kBAAI,MAAM;AACR,UAAsC,QAAlC,AAAW,oDAAJ,EAAE,gBAAE,sBAAc;gBAC3B,AAAW,oDAAJ,EAAE;QAAE,uBAAc,aAAO,MAAM;;;cAGxC,AAAW,oDAAJ,EAAE;MAAE,uBAAc,aAAO,MAAM;;EAE1C;;;AAlBK;UACA;UACE;;UACA;;UACA;AAJF,iFAAM,iBAAN,aACJ,UADI,MAAM,MAAN,EAAE;;EAkBP;uFAQe,OAAa;;;QAAb;AACb,QAAU,aAAN,KAAK;MACP;;AAEE;AACA,sBAAO,AAAW,oDAAJ,EAAE,gBAAE,qBAAc,aAAS,QAAC;;;AAAU,YAAQ,EAAH,MAAL,KAAK,4BAAM,KAAK;;AAExE,UAAO,KAAI;EACb;;;AARK,oBAAU,OAAa;UAAb;AAAV,qEAAK,EAAL,EAAE;;EAQP;;;AA2BY,uBACF;UACH;;UACO;UACL;UACD;UACD;UACG;UACA;UACE;UACL;;UACA;;UACK;UAC6B;AAb7B,qEAAI,WAAJ,MAAM,cAAN,UACZ,SADY,KAAK,cAAL,UACZ,MADY,EAAE,aAAF,SACb,aADa,4BAAO,oBAAP,gBACN,qBADM,iBACL,YADK,QACd,gBADc,YACV;;EAkCF;sFAlCU;;;QACH;;QACO;QACL;QACD;QACD;QACG;QACA;QACE;QACL;;QACA;;QACK;QAC6B;IAEvC,AAAU,SAAD,WAAT,YAA+C,eAAZ,cAAZ,iBAAL,IAAI;IACtB,YAAY,6DAAgB,SAAS;AACrC,kBAAI,iBAAiB,KAAI,AAAU,SAAD,IAAI;AACpC;;AAEF,UAAO,AAAW,oDAAJ,EAAE;UAAE,sBAAc,qCAAgB,kDACpC,MAAM,gBACA,YAAY,QACpB,0DAAa,IAAI,mBACd,OAAO,YACN,4CACG,kBACL,SAAS,eAEN,SAAS,oBACF,gBAAgB,eACX,MAAX,UAAU,EAAV,cAAc,wFACH,OAAX,UAAU,EAAV,eAAc,oFACb,QAAN,KAAK,EAAL,gBAAS,uGACa,QAAT,QAAQ,EAAR,gBAAY;EACtC;4FAiCU;;;QACQ;QACX;;QACC;QACD;QACG;QACA;QACE;QACL;;QACO;QACL;QACG;QAC6B;IAEvC,AAAU,SAAD,WAAT,YAA+C,eAAZ,cAAZ,iBAAL,IAAI;IACtB,YAAY,6DAAgB,SAAS;AACrC,UAAO,AAAW,oDAAJ,EAAE;UAAE,sBAAc,0BAC5B,kDACU,MAAM,eACS,MAAX,UAAU,EAAV,cAAc,iFACpB,0DAAa,IAAI,sBACd,OAAO,gBACF,YAAY,YAChB,uCACF,SAAS,aACJ,gCAEK,gBAAgB,aACvB,SAAS,eACG,OAAX,UAAU,EAAV,eAAc,oFACb,QAAN,KAAK,EAAL,gBAAS,uGACa,QAAT,QAAQ,EAAR,gBAAY,wFAExB,QAAV,SAAS,EAAT,gBAAa;UAAC;AAAU;;EAC9B;;;AAnCY,uBACF;UACQ;UACX;;UACC;UACD;UACG;UACA;UACE;UACL;;UACO;UACL;UACG;UAC6B;AAb7B,wEAAI,cAAJ,SAAS,UAAT,MAAM,cAAN,UAAU,MAAV,EAAE,aAAF,SAAS,aAAT,4BAAO,oBAAP,gBACT,cADS,UAAU,SAAV,KAAK,YAAL,QAAQ,gBAAR,YACb;;EAkCC;2GAO8B;;;;IAC5B,OAAO,AAAK,IAAD;AAIX,SAAK,AAAK,IAAD;MACP,OAAe,eAAL,IAAI;;AAEhB,kBAAW,kBAAS,IAAI,GAAb,qBAAgB;UAAhB,gBAA8B,IAAI;EAC/C;;;AATO;UAAuB;AAAvB,8EAAI;;EASX;;;QAIW;QACY;QACb;QACA;QACI;QACJ;QACM;AACd,QAAI,SAAS;MACX,AAAI,2BAAc,SAAS;;AAE7B,QAAI,iBAAiB;MACnB,AAAI,mBAAM,iBAAiB;;AAE7B,QAAI,iBAAiB;MACnB,AAAgB,0EAAoB,iBAAiB;;AAEvD,QAAI,kBAAkB;MACpB,AAAgB,2EAAqB,kBAAkB;;AAEzD,QAAI,iBAAiB;MACnB,AAAgB,0EAAoB,iBAAiB;;AAGvD,QAAI,yBAAyB;MAC3B,AAAgB,kFAA4B,yBAAyB;;EAEzE;;;AA3BK;UACM;UACY;UACb;UACA;UACI;UACJ;UACM;AAPX,sFACN,qBADM,iBACE,qBADF,iBACE,sBADF,kBACG,6BADH,yBACU,sBADV,kBACG,qBADH,iBACE;;EA0BP;qGAEyB;;;IACnB,gDAAJ,cAAa,CAAC;IACd;EACF;;;AAHK;UAAoB;AAApB,wEAAC;;EAGN;;;IAgBQ,AAAE,eAAR;EACF;;;AAFK;EAEL;;;AAEoB,UAAA,AAAgB;EAAQ;;;AAAvC;EAAuC;mGAEjB;;;IACzB,AAAgB,+DAAS,KAAK;EAChC;;;AAFK;UAAsB;AAAtB,2EAAK;;EAEV;2GAE+B;;;IAC7B,AAAgB,mEAAa,SAAS;EACxC;;;AAFK;UAA0B;AAA1B,mFAAS;;EAEd;yFAE4D;;;AAC1D,UAAO,AAAgB,8DAAO,MAAM;EACtC;;;AAF2B;UAAiC;AAAjC,uEAAM;;EAEjC;+FAE6C;;IAC3C,AAAK,oEACH,GAAG,EACH,cAAM,gDAC4C,+BAAZ,cAAJ,GAAG;AAGvC,UAAO,AAAI,8DAAC,GAAG;EACjB;;;AAR2B,mBAAkB,8DAAlB,GAAG;EAQ9B;yFAEsC;;AACV;AAC1B,QAAI,AAAE,CAAD;MACH,OAAO;;AAEP,qBAAK,AAAK,oEAAY,CAAC;QACrB,WAA+B,wBAAb,CAAC;;MAErB,OAAc,eAAP,AAAI,6DAAC,CAAC;;AAGf,QAAI,AAAK,AAAe,IAAhB,sCAA4B;MAClC;;AASF,UAAO,KAAI;EACb;;;AAtB0B,mBAAY,yDAAZ,CAAC;EAsB3B;;;AAGyB,UAAA,AAAQ;EAAI;;;AAGV,UAAA,AAAQ;EAAO;;;AAGd,UAAA,AAAQ;EAAQ;;;AAGhB,UAAA,AAAQ;EAAU;;;AAGpB,UAAA,AAAQ;EAAQ;;;AAGX,UAAA,AAAQ;EAAa;;;AAGpB,UAAA,AAAQ;EAAK;;;AAGd;EAAiB;;;AAGf;EAAkB;;;AAGtB,UAAA,AAAI;EAAc;;;;AAI/B;WACd,AAAI;2BAAA,OAAc,cAAd,sBAAuB,AAAQ,gCAAmB;UAAC;MACrD,UAAU,OAAO;;AAEnB,UAAO,QAAO;EAChB;;;AAIM,iBAAmB;AACvB,QAAI;MACF,SAAe,gBAAU,eAAP;;AAEpB,UAAO,OAAM;EACf;;;AAIE,QAAmB,AAAS;MAC1B;;AAEF,UAAsB;EACxB;;;AAGwC,UAAG;EAAM;;;AAErB,UAAG,AAAO;EAAM;;;AAGnB,UAAG,AAAO;EAAgB;;;AAElC,UAAG,AAAO,AAAa,6BAAE;EAAU;;;AAGhC,UAAA,AAAK;EAAK;;;AAGT,UAAA,AAAK;EAAM;;;AAIF,UAAG,AAAO,AAAQ;EAAG;;;AAIrB,UAAG,AAAO,AAAQ;EAAM;;;AAGxB,UAAG,AAAO;EAAe;;;AAG5B,UAAA,AAAM;EAAS;;;AAGT,UAAW,2BAAU,eAAP;EAAS;;;AAGjC,UAAC,AAAM,AAAW,sEAAc;EAAK;;;AAIxD,UAAI,AAAO,AAAmB,iCAAc;EAAK;;;AAG7B,UAAA,AAAM,AAAU;EAAK;;;AAGhB,UAAa,AAAS;EAAY;;;AAQ1B,UAAA,AAAgB;EAAG;;;AAEJ,UAAA,AAAgB;EAAI;;;AAE5B;EAAe;;;AAE7B,UAAA,AAAgB;EAAiB;;;AAChC,UAAA,AAAgB;EAAkB;;;AAE5B,UAAA,AAAgB;EAAiB;;;AAGpE,UAAO,AAAgB;EACzB;;;AAEoC,UAAA,AAAgB;EAAsB;;;AAGxE,UAAO,AAAgB;EACzB;;;AAGE,UAAO,AAAgB;EACzB;;;AAEuB,UAAA,AAAgB;EAAO;;;AAEP,UAAA,AAAgB;EAAU;2GAC7B;;;AAChC,UAAA,AAAgB,oEAAa,aAAa;;;;AAEJ,UAAA,AAAgB;EAAgB;uHACnC;;AACnC,UAAA,AAAgB,0EAAmB,aAAa;;;;AAE/B,UAAA,AAAgB;EAAQ;uGAC3B;;;AAAW,UAAA,AAAgB,kEAAW,MAAM;;;;IAG5D,wDAAkB;EACpB;;;AAFK;EAEL;qFAM4B;;;IAC1B,AAAU,iEAAU,QAAQ;EAC9B;;;AAFK;UAAuB;AAAvB,uEAAQ;;EAEb;;;IAGE,AAAW,AAAO;EACpB;;;AAFK;EAEL;;;AAIgC;EAAU;mFACrB;;;IACnB,AAAU,gEAAS,OAAO;EAC5B;;;AAFK;UAAgB;AAAhB,qEAAO;;EAEZ;;;AAII,UAAe,6BAAf;EAA4B;;;AADrB;EACqB;;;QASqB;;AACnD,QAAI,AAAuB;AACzB,YAAO,gCAAyB,mEAChB,YAAY;;AAG5B,YAA8B,gDAAvB;;EAEX;;;AARqB;UAAgC;;AAAhC,yGAAY;;EAQjC;;;AAIgC;EAAgB;;;QAG5B;QACO;QACI;QACrB;;QACqB;;AAG7B,QAAI,AAAe;AACjB,YAAO,wBAAiB,wDACP,aAAa,sBACR,kBAAkB,sBAClB,kBAAkB,qBACnB,iBAAiB,gCACN,4BAA4B;;AAG5D,YAAsB,oCAAf;;EAEX;;;AAnBY;UACQ;UACO;UACI;UACrB;;UACqB;;AALnB,kGAAa,sBAAb,kBACb,sBADa,kBACb,qBADa,iBACd,gCADc,4BACH;;EAkBT;;;;AAnDkB;mBAAa,4CAAuB;AAApC;;;;;;IAAuC;;AAyD1B,YAAmB,AAAI,+CAAT;IAAqB;;;MArErC,qDAA6B;YAAX;;;MAY7B,8CAAsB;;;;MAAtB,oDAA4B;;;;;;;;;;;;;;;;;;;;;;;;;MChvClC;;;;;;MACS;;;;;;MACJ;;;;;;MACN;;;;;;MACE;;;;;;MACC;;;;;;MACK;;;;;;MACP;;;;;;MACC;;;;;;MACF;;;;;;MACA;;;;;;MAEI;;;;;;MACA;;;;;;MAEJ;;;;;;MASG;;;;;;;AANqB;MAA2B;;AAG/B;MAAa;;;AAMlB;8BAA4B;MAAO;;QAMvC;QACd;MACR;;cAIS,AAAqB;QAC5B,6BACgB,mDAA4C,eAAT,AAAE,eAAX;QACtB,AAAE,eAAtB,uCAAiC;QACb,AAAE,eAAtB,8CAAwC;AACxC,cAA2B,gBAApB;MACT;gBAG8B,SAA2B,WACnC;;YADQ;YAA2B;YACnC;AACd,0BACsB,4BAAxB,sBAAO,wBAAP,gBAAiC,AAAY,gBAAT,OAAO;AAGxC,0BAAyB,+CACrB,OAAO,aACL,uBACJ,gCAEU,yCAAwB,AAAY,AAAW,0BAApB,OAAO,8BAC1C,oEAG+B,UADH,+BAAhB,iBACb,AAAW,UAAD,iCADmB,iBAE7B,AAAW,UAAD,wCAE6B,UAA7B,yBAAV,iBAAa,AAAW,UAAD,2BAAb,iBAAgC,AAAW,UAAD,6BACjD,0BACO,uCACM,qCACR;AAIlB,YAAI,oBAAe,cAAc,4BAAiB,eAAL,oBAAe,WAAW;AACvE,cAAO,YAAW;MACpB;;;UA/FO;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UACA;UACA;UACA;;UACA;;UACS;;UACC;UACV;;UACA;;MAiCc;;;;;;;;;;;;;;;;AAhChB,mEAAgB,QAAQ;MACP;IACtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA4FW;;;;;;MACwB;;;;;;MACxB;;;;;;MACE;;;;;;MACC;;;;;;MACK;;;;;;MACP;;;;;;MACD;;;;;;;AAGmC;MAA8B;;;UApBrE;UACA;UACA;UACA;UACA;UACA;UACA;;UACA;;UACA;;;;;;;;;;;AACF,0DAAW,GAAG;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAewB;AAC1C,YAAW,AAAY,AAAS,gBAAlB,0BAAoC,oCACvC,AAAY,AAAS,gBAAlB,0BAAoC;AAChD,gBAAO,AAAc,cAAD;;AAEpB;;MAEJ;;YAG0B;uBACjB,8BAAwB,OAAO;uBAC/B,0CAAmC,OAAO;AAC3C,yBAAwB,0BAAG,OAAO;AAClC,4BAAsC,gDAAG,OAAO;AAChD,yBAAa,qBAAe,aAAa;AAE/C,cAAO,iDAC6B,eAAX,AAAE,eAAd,AAAO,wCACT,SAAC,SAAS;gBAAT;AAGF,2CAAiB,AAAW,UAAD,+BAEJ,AAAE,eAAb,AAAE,eAAd,AAAO;AACb,kBAAO,sEAGE,UAAU,mCAEV,+BACE,iDACO,gDACN,cAAc,EAAE,AAAO,wCACpB,AAAO,AAAa,qCACrB,uDACmC,AAAE,eAAd,AAAO,qDACjB;AACT,oCAAgB,AAAE,eAAd,AAAO;wBACC,sCAAI,OAAO;;kDAGK,eAAT,AAAE,eAAd,AAAO,8CACC,AAAO,wCACb,AAAO,8BACX,AAAO,iCACA,AAAO,sCACT,AAAO,sFAErB,wCACe,uDAEK,AAAE,eAAd,AAAO,qDACA;oDAKmB,eAAT,AAAE,eAAd,AAAO,8CACC,AAAO,wCACb,AAAO,8BACX,AAAO,iCACA,AAAO,sCACT,AAAO;;MAO3C;;;;;IACF;;;;;;;;;;;;;;;;;;;;;;;;;;MAcc;;;;;;MACuB;;;;;;MACxB;;;;;;MACE;;;;;;MACC;;;;;;MACK;;;;;;MACP;;;;;;MACD;;;;;;;AAKP;MAAiC;;;UAtB9B;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UACA;;;;;;;;;;;AACF,6DAAW,GAAG;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAmBwB;AAC1C,YAAW,AAAY,AAAS,gBAAlB,0BAAoC,oCACvC,AAAY,AAAS,gBAAlB,0BAAoC;AAChD,gBAAO,AAAc,cAAD;;AAEpB;;MAEJ;;YAG0B;uBACjB,8BAAwB,OAAO;uBAC/B,0CAAmC,OAAO;AAC3C,yBAAwB,0BAAG,OAAO;AAClC,4BAAsC,gDAAG,OAAO;AAChD,yBAAa,qBAAe,aAAa;AAE/C,cAAO,iDAC6B,eAAX,AAAE,eAAd,AAAO,wCACT,SAAC,SAAS;gBAAT;AAGF,2CAAiB,AAAW,UAAD,+BAEJ,AAAE,eAAb,AAAE,eAAd,AAAO;AACb,kBAAO,sEAGE,UAAU,mCAEV,+BACE,iDACO,gDACN,cAAc,EAAE,AAAO,wCACpB,AAAO,AAAa,qCACrB,uDACmC,AAAE,eAAd,AAAO,qDACjB;AACT,oCAAgB,AAAE,eAAd,AAAO;wBACC,sCAAI,OAAO;;kDAGK,eAAT,AAAE,eAAd,AAAO,8CACC,AAAO,wCACb,AAAO,8BACX,AAAO,iCACA,AAAO,sCACT,AAAO,sFAErB,wCACe,uDAEK,AAAE,eAAd,AAAO,qDACA;oDAKmB,eAAT,AAAE,eAAd,AAAO,8CACC,AAAO,wCACb,AAAO,8BACX,AAAO,iCACA,AAAO,sCACT,AAAO;;MAO3C;;;;;IACF;;;;;;;;;;;;;;;;UASuD;AACnD,YAAO,wCACK,AAAY,WAAD,qBACX,AAAY,WAAD,gDAEV,2BACL,AAAY,WAAD,aACW,AAAM,aAA5B,AAAY,WAAD;IAErB;wBAGgC,MAAW;UAAX;UAAW;AACzC,YAAO,wBAAwB,aAAZ,AAAK,IAAD,WAA2B,aAAjB,AAAU,SAAD,wBAAU;IACtD;;iDAG+C;;AAC7C,YAAO,kBAAY,AAAY,WAAD;IAChC;;0DAzBgC,UAAe;QAAf;QAAe;;;AAA/C;;EAAkE;;;;;;;;;;;;;0ECtRvB;;;QAC9B;QAAU;;IACrB,AAAc,0CAAW,OAAO,QAAO,GAAG,SAAS,KAAK;EAC1D;;;AAHK;UAAsC;UAC9B;UAAU;;AADlB,iEAAO,QAAP,GAAG,SAAH,KAAK;;EAGV;4EASsD;;;QACrC;QAAU;;AADN;AAEjB,YAAA,AAAc,4CAAY,OAAO,QAAO,GAAG,aAAa,SAAS;IAAC;;;;AAF5D;UAA4C;UACrC;UAAU;;AADjB,kEAAO,QAAP,GAAG,aAAH,SAAS;;EAEmD;wEAmB5B;;;QACzB;QAAU;;AACvB,UAAA,AAAc,0CAAU,OAAO,QAAO,GAAG,aAAa,SAAS;EAAC;;;AAF/D;UAAqC;UACzB;UAAU;;AADtB,gEAAO,QAAP,GAAG,aAAH,SAAS;;EAEsD;;;QAKjD;AAAS,UAAA,AAAc,8CAAa,GAAG;EAAC;;;AAAzD;UAAiB;AAAjB,gEAAG;;EAAsD;kEAgBhD;;QACM;QACJ;;QACuB;AAChC,UAAA,AAAc,uCAAO,UAAU,QAAO,GAAG,aAAa,SAAS;EAAC;;;AAJlE,uBAAS;UACM;UACJ;;UACuB;AAHlC,gEAAU,QAAV,GAAG,aAAH,SAAS,WAAT,OAAO;;EAI2D;;;QAsBpC;QAAU;;AAApB;AAClB,YAAA,AAAc,gDAAe,GAAG,SAAS,KAAK;IAAC;;;;AADtC;UAAmB;UAAU;;AAA7B,kEAAG,SAAH,KAAK;;EACiC;;;QAMtB;;AAAP;AAClB,YAAA,AAAc,kDAAiB,KAAK;IAAC;;;;AAD5B;UAAgB;;AAAhB,sEAAK;;EACuB;;;QAEpB;;AAAmB,UAAA,AAAc,kDAAiB,KAAK;EAAC;;;AAAxE;UAAgB;;AAAhB,sEAAK;;EAAmE;;;QAErD;QAAa;QAAU;;AAC3C,UAAA,AAAc,gDAAe,GAAG,OAAO,GAAG,SAAS,KAAK;EAAC;;;AADxD;UAAmB;UAAa;UAAU;;AAA1C,kEAAG,OAAH,GAAG,SAAH,KAAK;;EACmD;;;QAI/B;AAC1B,UAAA,AAAc,sDAAqB,GAAG;EAAC;;;AADtC;UAAyB;AAAzB,wEAAG;;EACmC;;;QAKf;AAAS,UAAA,AAAc,oDAAmB,GAAG;EAAC;;;AAArE;UAAuB;AAAvB,sEAAG;;EAAkE;0EAKxD;;;QAAgB;AAC1B,eAAO,AAAc,wDAAwB,GAAG;AAChD,qBAA8B,OAAjB,AAAK,IAAD,cAAC;IACxB,kDAAe,GAAG,SAAS,SAAS;IACpC,yCAAI,KAAK,QAAO,GAAG,aAAa,SAAS;EAC3C;;;AALK,uBAAa;UAAgB;AAA7B,+DAAK,QAAL,GAAG;;EAKR;kFAS+C;;;;QAClC;QAAW;AAChB,eAAO,AAAc,wDAAwB,GAAG;AAChD,qBAA8B,OAAjB,AAAK,IAAD,cAAC;IACxB,kDAAe,GAAG,SAAS,SAAS;IACpC,6CAAQ,OAAO,QAAO,GAAG,UAAe,QAAN,KAAK,EAAL,gBAAS,SAAS;EACtD;;;AANK;UAA0C;UAClC;UAAW;AADnB,qEAAO,QAAP,GAAG,SAAH,KAAK;;EAMV;;;;;;eC7IE;eAAmB,cAAX;QAAD;MACT;;YAKqC;QACnC,6CAAW,QAAQ;MACrB;;YAIiD;AAC/C,YAAI,AAAS,oDAAS;AACtB,sBAAI,AAAW,2DAAY;UACJ,AAAE,eAAvB,AAAU,oDAAS,eAAR,oDAAgB,YAAY;;UAEvC,AAAU,oDAAC,4CAAoB,yBAAC,YAAY;;MAEhD;;QAGE,AAAW;QACX,AAAgB;MAClB;iCAEiD;;;eAC/C;eAAgB;QAAU,4BAAX,kBAAe;QAEL,AAAE,eAA3B,AAAe,yDAAC,0DAAe,AAAE,CAAD,kCAAC;MACnC;;YAEqC;AACnC,YAAI,AAAI,gCAAmC;UAClB,AAAE,eAAV,sDAA+B;gBAAC;YAC7C,2DAAyB,QAAQ;;;MAGvC;oCAEyC;;;AACjC,2BAAuB;eAE7B,AAAU,oDAAC,QAAQ;QAAT,sBAAY,eAAqB,UAAb,YAAY;AAG1C,sBAAI,AAAgB,gEAAY,QAAQ;AACtC,mBAAW,UAAoC,gBAAzB,AAAe,yDAAC,QAAQ;YAGrC,WAAP,OAAO;;UAEgB,AAAE,eAA3B,AAAe,yDAAC,QAAQ;UACxB,AAAgB,2DAAO,QAAQ;;AAGjC,iBAAW,UAAW,aAAY;UAChC,AAAc,+DAAiB,OAAO;;QAKxC,AAAa,YAAD;MACd;sCAM2C;;;AACnC,2BAAuB;eAE7B,AAAU,oDAAC,SAAS;QAAV,sBAAa,eAAqB,UAAb,YAAY;AAG3C,sBAAI,AAAgB,gEAAY,SAAS;AACvC,mBAAW,UAAqC,gBAA1B,AAAe,yDAAC,SAAS;YAGtC,WAAP,OAAO;;UAEiB,AAAE,eAA5B,AAAe,yDAAC,SAAS;UACzB,AAAgB,2DAAO,SAAS;;AAGlC,iBAAW,UAAW,aAAY;AAC1B,sBAAQ,AAAc,0DAAY,OAAO;AAC/C,wBAAI,KAAK;oBACP,AAAU,oDAAC,SAAS;YAAV,uBAAa,eAAO,OAAO;;;QAIzC,AAAa,YAAD;MACd;;;;IACF;;;;;;;;;;;;;MAvGyC,4CAAU;YAAG;;MAMR,iDAAe;YAAG;;MAMhD,0CAAQ;;;;;;;;;;;;ICdV;;;;;;IACA;;;;;;IAED;;;;;;IACA;;;;;;IACC;;;;;;;AAHS,cAAY,eAAX;IAAY;;;QAKlB;QACA;QACA;;QACA;;QACA;;;;;;;EACd;;;;;;;;;;;;;;;;;;;;;;;;AAIuB;4BAAa,wCAAgB;IAAG;;AAM1C;IAAS;;UAWK;UACnB;UACH;;MAGL,gBACE,cAAM,AAAE,EAAA,mCACH,GAAG,SACD,KAAK;IAGhB;;UAMkC;UACxB;UACH;;AAHc;AAKnB,cAAO,mBAAa,AAAO,OAAA,UAAS,GAAG,aAAa,SAAS;MAC/D;;WAaI;;UACM;UACH;;UACmC;MAExC,2CAEU,GAAG,aACE,SAAS,YACH,OAAR,OAAO,EAAP,eAAY,cAAM,UAAU;AACzC,YAAO,oBAAa,GAAG;IACzB;eAyB6B;;;UACnB;UACF;UACD;;MAEL,2CAEQ,GAAG,aACE,SAAS,WACX,OAAO,UACH,OAAN,KAAK,EAAL,eAAS,AAAI,AAAgB,gCAAmB;IAE3D;;UAmB6B;UACnB;UACH;;MAEL,4CAEQ,GAAG,WACA,OAAO,aACL,SAAS;IAExB;;UAIQ;UACE;UACH;;UAC+B;;UAC/B;;AAEC,gBAAM,gCAAW,IAAI;AAE3B,oBAAI,AAAO,8CAAY,GAAG;AAClB,kBAAM,AAAM,uCAAC,GAAG;AACtB,YAAI,GAAG,sBAAY,AAAI,GAAD;UACpB,AAAM,uCAAC,GAAG,EAAI,mDACZ,WAAW,EACX,OAAO,EACP,SAAS,SAET,KAAK,EACL,IAAI,eACY,4CAAJ,GAAG;;;QAInB,AAAM,uCAAC,GAAG,EAAI,mDACZ,WAAW,EACX,OAAO,EACP,SAAS,SAET,KAAK,EACL,IAAI;;IAGV;;UAWiC;AACzB,gBAAM,gCAAW,IAAI;AACrB,mBAAoB,AAAE,eAAb,AAAM,uCAAC,GAAG;AACtB;AACH,qBAAK,MAAM;QACT,IAAI,gCAAyB,IAAI;AACjC,YAA4B,eAAb,AAAE,eAAb,AAAM,uCAAC,GAAG;UACD,AAAE,eAAb,AAAM,uCAAC,GAAG;AACV,cAAI,AAAI,gCAAmC;YACrB,gEAA8B,gCAAW,IAAI;;;;AAIvE,YAAO,EAAC;IACV;;;UAEyC;AACjC,kBAAQ,8BAAuB,GAAG;AAExC,YAAO,yDACQ,KAAK,EAAL,sBAAO,uCACP,KAAK,EAAL,uBAAO,kCACN,2BAAqB,GAAG,4BACV,mBAAd,KAAK,EAAL,wBAAO,gBAAP,oDACN,KAAK,EAAL,wBAAO;IAEnB;;;UAEoD;UAAa;AACzD,oBAAa,OAAJ,GAAG,EAAH,eAAO,gCAAW,GAAG;AAEpC,qBAAK,AAAO,8CAAY,MAAM;gBAC5B;eAA+C,yBAA3B,MAAM;;QAAnB;AACP;;AAEA,cAAO,AAAM,wCAAC,MAAM;;IAExB;;;UAE6B;UAAa;AAClC,oBAAa,OAAJ,GAAG,EAAH,eAAO,gCAAW,GAAG;AACpC,oBAAI,AAAO,8CAAY,MAAM;AACrB,kBAAM,AAAM,uCAAC,MAAM;AACzB,YAAI,GAAG;UACL,AAAI,GAAD;;;IAGT;;;UAG+B;AACvB,gBAAM,gCAAW,GAAG;AACpB,cAAiC,KAAlB,AAAE,eAAb,AAAM,uCAAC,GAAG;AACpB,UAAM,8BAAF,CAAC;QACH,AAAS,CAAR;AACD,YAAI,AAAI,GAAD;iBACL;iBAA4C;UAArC;;kBAEP;kBAA4D,yEAA1B,GAAG;UAA9B;;AAET,aAA6B,eAAb,AAAE,eAAb,AAAM,uCAAC,GAAG;UACO,sDAAoB,CAAC;;;AAG7C,YAAO,EAAC;IACV;;UAE0C;UAAc;AAChD,gBAAM,gCAAW,GAAG;AAE1B,oBAAI,AAAO,8CAAY,GAAG;AACxB,cAAoC,MAAlB,AAAE,eAAb,AAAM,uCAAC,GAAG;;AAEjB,cAAO,AAAc,uCAAI,AAAG,GAAA,UAAS,GAAG;;IAE5C;;;UAOmB;AACX,gBAAM,gCAAW,GAAG;AAC1B,oBAAI,2BAAqB,GAAG;AACpB,kBAAM,AAAM,uCAAC,GAAG;AACtB,YAAI,AAAI,GAAD;AACL,cAAI,AAAI,GAAD;YACL,WAAoC;;YAEpC,WAAoD,sEAAvB,GAAG;;;AAY9B,gBAAI,kCAA2B,GAAG;AACxC,eAAO,CAAC;cAAD,gBAAyB,KAApB,AAAI,GAAD;;QAGf,WAAmF;;IAEvF;cAIoB,MAAc;UAAd;AAClB,YAAO,AAAK,KAAD,WAAgB,cAAL,IAAI,IAA8B,aAAX,cAAL,IAAI,kBAAc,IAAI;IAChE;;UAUsB;;UAA0B;;AAG9C,oBAAI,kBAAkB,GAAsB;MAC5C,AAAO;AAEP;IACF;;;UAkBwB;UAAa;UAAU;;AACvC,oBAAa,OAAJ,GAAG,EAAH,eAAO,gCAAW,GAAG;AAEpC,qBAAK,AAAO,8CAAY,MAAM;gBAC5B;eAA6C,yBAAzB,MAAM;;QAAnB;AACP;;AAGI,gBAAM,AAAM,uCAAC,MAAM;AAEzB,UAAI,AAAI,GAAD,UAAU;AAEa;AAC9B,oBAAI,AAAI,GAAD;QACL,WAAyB,SAAf,AAAI,GAAD,aAAC,iBAAc,GAAG;;QAE/B,UAAU,GAAG;;AAGf,oBAAI,AAAQ,OAAD,0BAAe,KAAK;iBAC7B;gBAE2F,gBAAtF,MAAM;;QAFJ;AAKP;;AAEI,cAAI,AAAQ,OAAD;AAEjB,UAAM,8BAAF,CAAC,gBAAyB,KAAK;AACjC;;AAGF,UAAM,8BAAF,CAAC;QACH,AAAU,CAAT;iBACD;iBAAqC,gBAA1B,MAAM;QAAV;;AAGT,oBAAI,AAAQ,OAAD;QACT,AAAQ,OAAD;QACP,AAAQ,OAAD;AACP;;AAEA,YAAI,AAAI,GAAD;UACL,AAAI,GAAD;mBACH;mBAAuC,gBAA5B,MAAM;UAAV;AACP;;UAEA,AAAO,yCAAO,MAAM;AACpB,wBAAI,AAAO,8CAAY,MAAM;qBAC3B;qBAAyC,sCAAR,MAAM;;YAAhC;;qBAEP;qBAAuC,gBAA5B,MAAM;YAAV;;AAET;;;IAGN;;UAMqB;;AACb,iBAAO,AAAO,AAAK;AACzB,eAAW,MAAO,KAAI;QACpB,gCAAY,GAAG,SAAS,KAAK;;IAEjC;;UAEqB;;MACnB,AAAO,0CAAQ,SAAC,KAAK;;YAAL;YAAK;AACnB,sBAAI,AAAM,KAAD,0BAAe,KAAK;iBAC3B;iBAAuD,yBAAnC,GAAG;UAAhB;;UAEP,AAAM,KAAD;UACL,AAAM,KAAD;kBACL;kBAAuC,yBAAnB,GAAG;UAAhB;;;IAGb;;;UAGU;UACA;UACH;;AAEC,oBAAa,OAAJ,GAAG,EAAH,eAAO,gCAAW,GAAG;AAE9B,oBAAU,8BAAuB,GAAG,OAAO,MAAM;AACvD,UAAI,AAAQ,OAAD,UAAU;AAErB,oBAAI,AAAQ,OAAD,0BAAe,KAAK;gBAC7B;eACiF,yBAAjE,MAAM;;QADf;AAIP;;AAGI,cAAI,AAAQ,OAAD;AAEjB,UAAM,8BAAF,CAAC,gBAAyB,KAAK;AACjC;;AAGF,UAAM,8BAAF,CAAC;QACH,AAAU,CAAT;iBACD;gBAAqC,gBAA1B,MAAM;QAAV;;MAGT,AAAQ,OAAD;MACP,AAAQ,OAAD;eACP;eAA2C,yBAAvB,MAAM;MAAnB;IACT;;UAI8B;AAAS,YAAA,AAAO,+CAAY,gCAAW,GAAG;IAAE;;UAK9C;AACpB,mBAAS,gCAAW,GAAG;AAEvB,oBAAU,8BAAuB,GAAG,OAAO,MAAM;AACvD,UAAI,AAAQ,OAAD;AACT;;AAGF,qBAAK,AAAQ,OAAD;AACV;;AAEF;IACF;;;;EAzcqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAED,qCAAY;;;;MAMkB,+BAAM;YAAG;;;;;;;;;;;;;;MAqdxD;;;;;;MAIwB;;;;;;MAQC;;;;;;;;AAiB1B,YAAI,AAAI;iBACN;iBAAwC;UAAjC;;kBAEP;kBAAwD,0FAAL;UAA5C;;MAEX;;AAIE,YAAe,eAAX;AACF,cAAI,AAAW;YACb;YACA,kBAAwB;;AAE1B,gBAAiB,gBAAV;;AAEP,gBAAkB;;MAEtB;;4CA5BO,aACA,aACA,WACA,QACA,OACA;UAJA;UACA;UACA;UACA;UAEA;MAzBJ;MAQE;MAEA;MAIA;;;;;;;;;IAYH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECtgBJ;;;;;;;;MAmB+B;;;;;;;YAc0B;YAC1C;YAAU;;AACrB,cAAO,kDACH,cAAM,AAAc,sCAAO,AAAO,OAAA,UAAS,GAAG,aAAa,SAAS;MAC1E;;QASS;MACT;;;UALqB;;;IAAQ;;;;;;;;;;;;;;;;;;;QChDP;;QAA0B;;IAC9C,AAAc,kEAAkC,kBAAkB;IAC9D,iDAAJ;IACI,uDAAJ;IACI,yDAAJ;EACF;;;AANK;UACiB;;UAA0B;;AAD3C,8EACF,sBADE,kBACI;;EAKT","file":"../../../../../../../../../packages/get/get_navigation/src/root/get_material_app.dart.lib.js"}');
  // Exports:
  return {
    get_navigation__src__root__get_material_app: get_material_app,
    get_navigation__src__root__get_cupertino_app: get_cupertino_app,
    get_navigation__src__nav2__router_outlet: router_outlet,
    get_navigation__src__nav2__get_router_delegate: get_router_delegate,
    get_navigation__src__nav2__get_nav_config: get_nav_config,
    get_navigation__src__nav2__get_information_parser: get_information_parser,
    get_navigation__src__routes__route_middleware: route_middleware,
    get_navigation__src__routes__get_transition_mixin: get_transition_mixin,
    get_navigation__src__routes__default_route: default_route,
    get_navigation__src__snackbar__snack: snack,
    get_navigation__src__snackbar__snack_route: snack_route,
    get_navigation__src__routes__observers__route_observer: route_observer,
    get_state_manager__src__simple__simple_builder: simple_builder,
    get_state_manager__src__simple__mixin_state: mixin_state,
    get_state_manager__src__simple__get_state: get_state,
    get_state_manager__src__simple__get_view: get_view,
    get_state_manager__src__simple__get_responsive: get_responsive,
    get_state_manager__src__simple__get_controllers: get_controllers,
    get_state_manager__src__rx_flutter__rx_ticket_provider_mixin: rx_ticket_provider_mixin,
    instance_manager: instance_manager,
    get_state_manager__src__rx_flutter__rx_notifier: rx_notifier,
    get_state_manager__src__rx_flutter__rx_getx_widget: rx_getx_widget,
    get_state_manager__get_state_manager: get_state_manager,
    get_navigation__src__root__root_controller: root_controller,
    get_navigation__src__routes__get_route: get_route,
    get_navigation__src__root__parse_route: parse_route,
    get_navigation__src__dialog__dialog_route: dialog_route,
    get_navigation__src__extension_navigation: extension_navigation,
    get_navigation__src__bottomsheet__bottomsheet: bottomsheet$,
    get_navigation__get_navigation: get_navigation,
    route_manager: route_manager,
    get_instance__src__extension_instance: extension_instance,
    get_navigation__src__router_report: router_report,
    get_instance__src__get_instance: get_instance,
    get_instance__src__bindings_interface: bindings_interface,
    get_instance__get_instance: get_instance$,
    get_common__get_reset: get_reset,
    get: get
  };
}));

//# sourceMappingURL=get_material_app.dart.lib.js.map
