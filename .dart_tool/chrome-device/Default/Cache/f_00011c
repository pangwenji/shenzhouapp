define(['dart_sdk', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/rendering/sliver.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/rendering/proxy_box.dart'], (function load__packages__flutter__src__rendering__proxy_sliver_dart(dart_sdk, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__rendering__sliver$46dart, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__rendering__proxy_box$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const object = packages__flutter__src__rendering__layer$46dart.src__rendering__object;
  const layer = packages__flutter__src__rendering__layer$46dart.src__rendering__layer;
  const sliver = packages__flutter__src__rendering__sliver$46dart.src__rendering__sliver;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  var proxy_sliver = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(false);
  var T = {
    OpacityLayerN: () => (T.OpacityLayerN = dart.constFn(dart.nullable(layer.OpacityLayer)))(),
    DiagnosticsPropertyOfbool: () => (T.DiagnosticsPropertyOfbool = dart.constFn(diagnostics.DiagnosticsProperty$(core.bool)))(),
    JSArrayOfDiagnosticsNode: () => (T.JSArrayOfDiagnosticsNode = dart.constFn(_interceptors.JSArray$(diagnostics.DiagnosticsNode)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = [
    "file:///D:/flutter/packages/flutter/lib/src/rendering/proxy_sliver.dart",
    "package:flutter/src/rendering/proxy_sliver.dart"
  ];
  const RenderSliver_RenderObjectWithChildMixin$36 = class RenderSliver_RenderObjectWithChildMixin extends sliver.RenderSliver {};
  (RenderSliver_RenderObjectWithChildMixin$36.new = function() {
    object.RenderObjectWithChildMixin$(sliver.RenderSliver)[dart.mixinNew].call(this);
    RenderSliver_RenderObjectWithChildMixin$36.__proto__.new.call(this);
  }).prototype = RenderSliver_RenderObjectWithChildMixin$36.prototype;
  dart.applyMixin(RenderSliver_RenderObjectWithChildMixin$36, object.RenderObjectWithChildMixin$(sliver.RenderSliver));
  proxy_sliver.RenderProxySliver = class RenderProxySliver extends RenderSliver_RenderObjectWithChildMixin$36 {
    setupParentData(child) {
      object.RenderObject.as(child);
      if (child == null) dart.nullFailed(I[0], 44, 37, "child");
      if (!sliver.SliverPhysicalParentData.is(child.parentData)) child.parentData = new sliver.SliverPhysicalParentData.new();
    }
    performLayout() {
      if (!(this.child != null)) dart.assertFailed(null, I[0], 51, 12, "child != null");
      dart.nullCheck(this.child).layout(this.constraints, {parentUsesSize: true});
      this.geometry = dart.nullCheck(this.child).geometry;
    }
    paint(context, offset) {
      if (context == null) dart.nullFailed(I[0], 57, 30, "context");
      if (offset == null) dart.nullFailed(I[0], 57, 46, "offset");
      if (this.child != null) context.paintChild(dart.nullCheck(this.child), offset);
    }
    hitTestChildren(result, opts) {
      if (result == null) dart.nullFailed(I[0], 63, 44, "result");
      let mainAxisPosition = opts && 'mainAxisPosition' in opts ? opts.mainAxisPosition : null;
      if (mainAxisPosition == null) dart.nullFailed(I[0], 63, 69, "mainAxisPosition");
      let crossAxisPosition = opts && 'crossAxisPosition' in opts ? opts.crossAxisPosition : null;
      if (crossAxisPosition == null) dart.nullFailed(I[0], 63, 103, "crossAxisPosition");
      return this.child != null && dart.notNull(dart.nullCheck(dart.nullCheck(this.child).geometry).hitTestExtent) > 0 && dart.test(dart.nullCheck(this.child).hitTest(result, {mainAxisPosition: mainAxisPosition, crossAxisPosition: crossAxisPosition}));
    }
    childMainAxisPosition(child) {
      sliver.RenderSliver.as(child);
      if (child == null) dart.nullFailed(I[0], 74, 45, "child");
      if (!(child != null)) dart.assertFailed(null, I[0], 75, 12, "child != null");
      if (!dart.equals(child, this.child)) dart.assertFailed(null, I[0], 76, 12, "child == this.child");
      return 0.0;
    }
    applyPaintTransform(child, transform) {
      object.RenderObject.as(child);
      if (child == null) dart.nullFailed(I[0], 81, 41, "child");
      if (transform == null) dart.nullFailed(I[0], 81, 56, "transform");
      if (!(child != null)) dart.assertFailed(null, I[0], 82, 12, "child != null");
      let childParentData = sliver.SliverPhysicalParentData.as(dart.nullCheck(child.parentData));
      childParentData.applyPaintTransform(transform);
    }
  };
  (proxy_sliver.RenderProxySliver.new = function(child = null) {
    proxy_sliver.RenderProxySliver.__proto__.new.call(this);
    this.child = child;
  }).prototype = proxy_sliver.RenderProxySliver.prototype;
  dart.addTypeTests(proxy_sliver.RenderProxySliver);
  dart.addTypeCaches(proxy_sliver.RenderProxySliver);
  dart.setMethodSignature(proxy_sliver.RenderProxySliver, () => ({
    __proto__: dart.getMethods(proxy_sliver.RenderProxySliver.__proto__),
    performLayout: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(proxy_sliver.RenderProxySliver, I[1]);
  var _opacity = dart.privateName(proxy_sliver, "_opacity");
  var _alwaysIncludeSemantics = dart.privateName(proxy_sliver, "_alwaysIncludeSemantics");
  var _alpha = dart.privateName(proxy_sliver, "_alpha");
  proxy_sliver.RenderSliverOpacity = class RenderSliverOpacity extends proxy_sliver.RenderProxySliver {
    get alwaysNeedsCompositing() {
      return this.child != null && this[_alpha] !== 0 && this[_alpha] !== 255;
    }
    get opacity() {
      return this[_opacity];
    }
    set opacity(value) {
      if (value == null) dart.nullFailed(I[0], 131, 22, "value");
      if (!(value != null)) dart.assertFailed(null, I[0], 132, 12, "value != null");
      if (!(dart.notNull(value) >= 0.0 && dart.notNull(value) <= 1.0)) dart.assertFailed(null, I[0], 133, 12, "value >= 0.0 && value <= 1.0");
      if (this[_opacity] == value) return;
      let didNeedCompositing = this.alwaysNeedsCompositing;
      let wasVisible = this[_alpha] !== 0;
      this[_opacity] = value;
      this[_alpha] = ui.Color.getAlphaFromOpacity(this[_opacity]);
      if (didNeedCompositing != this.alwaysNeedsCompositing) this.markNeedsCompositingBitsUpdate();
      this.markNeedsPaint();
      if (wasVisible !== (this[_alpha] !== 0) && !dart.test(this.alwaysIncludeSemantics)) this.markNeedsSemanticsUpdate();
    }
    get alwaysIncludeSemantics() {
      return this[_alwaysIncludeSemantics];
    }
    set alwaysIncludeSemantics(value) {
      if (value == null) dart.nullFailed(I[0], 154, 35, "value");
      if (value == this[_alwaysIncludeSemantics]) return;
      this[_alwaysIncludeSemantics] = value;
      this.markNeedsSemanticsUpdate();
    }
    paint(context, offset) {
      if (context == null) dart.nullFailed(I[0], 162, 30, "context");
      if (offset == null) dart.nullFailed(I[0], 162, 46, "offset");
      if (this.child != null && dart.test(dart.nullCheck(dart.nullCheck(this.child).geometry).visible)) {
        if (this[_alpha] === 0) {
          this.layer = null;
          return;
        }
        if (this[_alpha] === 255) {
          this.layer = null;
          context.paintChild(dart.nullCheck(this.child), offset);
          return;
        }
        if (!dart.test(this.needsCompositing)) dart.assertFailed(null, I[0], 175, 14, "needsCompositing");
        this.layer = context.pushOpacity(offset, this[_alpha], dart.bind(this, 'paint', super.paint), {oldLayer: T.OpacityLayerN().as(this.layer)});
      }
    }
    visitChildrenForSemantics(visitor) {
      if (visitor == null) dart.nullFailed(I[0], 186, 54, "visitor");
      if (this.child != null && (this[_alpha] !== 0 || dart.test(this.alwaysIncludeSemantics))) visitor(dart.nullCheck(this.child));
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[0], 192, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics.DoubleProperty.new("opacity", this.opacity));
      properties.add(new diagnostics.FlagProperty.new("alwaysIncludeSemantics", {value: this.alwaysIncludeSemantics, ifTrue: "alwaysIncludeSemantics"}));
    }
  };
  (proxy_sliver.RenderSliverOpacity.new = function(opts) {
    let opacity = opts && 'opacity' in opts ? opts.opacity : 1;
    if (opacity == null) dart.nullFailed(I[0], 103, 12, "opacity");
    let alwaysIncludeSemantics = opts && 'alwaysIncludeSemantics' in opts ? opts.alwaysIncludeSemantics : false;
    if (alwaysIncludeSemantics == null) dart.nullFailed(I[0], 104, 10, "alwaysIncludeSemantics");
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    if (!(opacity != null && dart.notNull(opacity) >= 0.0 && dart.notNull(opacity) <= 1.0)) dart.assertFailed(null, I[0], 106, 15, "opacity != null && opacity >= 0.0 && opacity <= 1.0");
    if (!(alwaysIncludeSemantics != null)) dart.assertFailed(null, I[0], 107, 15, "alwaysIncludeSemantics != null");
    this[_opacity] = opacity;
    this[_alwaysIncludeSemantics] = alwaysIncludeSemantics;
    this[_alpha] = ui.Color.getAlphaFromOpacity(opacity);
    proxy_sliver.RenderSliverOpacity.__proto__.new.call(this);
    this.child = sliver;
  }).prototype = proxy_sliver.RenderSliverOpacity.prototype;
  dart.addTypeTests(proxy_sliver.RenderSliverOpacity);
  dart.addTypeCaches(proxy_sliver.RenderSliverOpacity);
  dart.setGetterSignature(proxy_sliver.RenderSliverOpacity, () => ({
    __proto__: dart.getGetters(proxy_sliver.RenderSliverOpacity.__proto__),
    opacity: core.double,
    alwaysIncludeSemantics: core.bool
  }));
  dart.setSetterSignature(proxy_sliver.RenderSliverOpacity, () => ({
    __proto__: dart.getSetters(proxy_sliver.RenderSliverOpacity.__proto__),
    opacity: core.double,
    alwaysIncludeSemantics: core.bool
  }));
  dart.setLibraryUri(proxy_sliver.RenderSliverOpacity, I[1]);
  dart.setFieldSignature(proxy_sliver.RenderSliverOpacity, () => ({
    __proto__: dart.getFields(proxy_sliver.RenderSliverOpacity.__proto__),
    [_alpha]: dart.fieldType(core.int),
    [_opacity]: dart.fieldType(core.double),
    [_alwaysIncludeSemantics]: dart.fieldType(core.bool)
  }));
  var _ignoring = dart.privateName(proxy_sliver, "_ignoring");
  var _ignoringSemantics = dart.privateName(proxy_sliver, "_ignoringSemantics");
  var _effectiveIgnoringSemantics = dart.privateName(proxy_sliver, "_effectiveIgnoringSemantics");
  proxy_sliver.RenderSliverIgnorePointer = class RenderSliverIgnorePointer extends proxy_sliver.RenderProxySliver {
    get ignoring() {
      return this[_ignoring];
    }
    set ignoring(value) {
      if (value == null) dart.nullFailed(I[0], 230, 21, "value");
      if (!(value != null)) dart.assertFailed(null, I[0], 231, 12, "value != null");
      if (value == this[_ignoring]) return;
      this[_ignoring] = value;
      if (this[_ignoringSemantics] == null || !dart.nullCheck(this[_ignoringSemantics])) this.markNeedsSemanticsUpdate();
    }
    get ignoringSemantics() {
      return this[_ignoringSemantics];
    }
    set ignoringSemantics(value) {
      if (value == this[_ignoringSemantics]) return;
      let oldEffectiveValue = this[_effectiveIgnoringSemantics];
      this[_ignoringSemantics] = value;
      if (oldEffectiveValue != this[_effectiveIgnoringSemantics]) this.markNeedsSemanticsUpdate();
    }
    get [_effectiveIgnoringSemantics]() {
      let t0;
      t0 = this.ignoringSemantics;
      return t0 == null ? this.ignoring : t0;
    }
    hitTest(result, opts) {
      if (result == null) dart.nullFailed(I[0], 259, 36, "result");
      let mainAxisPosition = opts && 'mainAxisPosition' in opts ? opts.mainAxisPosition : null;
      if (mainAxisPosition == null) dart.nullFailed(I[0], 259, 61, "mainAxisPosition");
      let crossAxisPosition = opts && 'crossAxisPosition' in opts ? opts.crossAxisPosition : null;
      if (crossAxisPosition == null) dart.nullFailed(I[0], 259, 95, "crossAxisPosition");
      return !dart.test(this.ignoring) && dart.test(super.hitTest(result, {mainAxisPosition: mainAxisPosition, crossAxisPosition: crossAxisPosition}));
    }
    visitChildrenForSemantics(visitor) {
      if (visitor == null) dart.nullFailed(I[0], 269, 54, "visitor");
      if (this.child != null && !dart.test(this[_effectiveIgnoringSemantics])) visitor(dart.nullCheck(this.child));
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[0], 275, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T.DiagnosticsPropertyOfbool()).new("ignoring", this.ignoring));
      properties.add(new (T.DiagnosticsPropertyOfbool()).new("ignoringSemantics", this[_effectiveIgnoringSemantics], {description: this.ignoringSemantics == null ? "implicitly " + dart.str(this[_effectiveIgnoringSemantics]) : null}));
    }
  };
  (proxy_sliver.RenderSliverIgnorePointer.new = function(opts) {
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    let ignoring = opts && 'ignoring' in opts ? opts.ignoring : true;
    if (ignoring == null) dart.nullFailed(I[0], 216, 10, "ignoring");
    let ignoringSemantics = opts && 'ignoringSemantics' in opts ? opts.ignoringSemantics : null;
    if (!(ignoring != null)) dart.assertFailed(null, I[0], 218, 15, "ignoring != null");
    this[_ignoring] = ignoring;
    this[_ignoringSemantics] = ignoringSemantics;
    proxy_sliver.RenderSliverIgnorePointer.__proto__.new.call(this);
    this.child = sliver;
  }).prototype = proxy_sliver.RenderSliverIgnorePointer.prototype;
  dart.addTypeTests(proxy_sliver.RenderSliverIgnorePointer);
  dart.addTypeCaches(proxy_sliver.RenderSliverIgnorePointer);
  dart.setGetterSignature(proxy_sliver.RenderSliverIgnorePointer, () => ({
    __proto__: dart.getGetters(proxy_sliver.RenderSliverIgnorePointer.__proto__),
    ignoring: core.bool,
    ignoringSemantics: dart.nullable(core.bool),
    [_effectiveIgnoringSemantics]: core.bool
  }));
  dart.setSetterSignature(proxy_sliver.RenderSliverIgnorePointer, () => ({
    __proto__: dart.getSetters(proxy_sliver.RenderSliverIgnorePointer.__proto__),
    ignoring: core.bool,
    ignoringSemantics: dart.nullable(core.bool)
  }));
  dart.setLibraryUri(proxy_sliver.RenderSliverIgnorePointer, I[1]);
  dart.setFieldSignature(proxy_sliver.RenderSliverIgnorePointer, () => ({
    __proto__: dart.getFields(proxy_sliver.RenderSliverIgnorePointer.__proto__),
    [_ignoring]: dart.fieldType(core.bool),
    [_ignoringSemantics]: dart.fieldType(dart.nullable(core.bool))
  }));
  var _offstage = dart.privateName(proxy_sliver, "_offstage");
  proxy_sliver.RenderSliverOffstage = class RenderSliverOffstage extends proxy_sliver.RenderProxySliver {
    get offstage() {
      return this[_offstage];
    }
    set offstage(value) {
      if (value == null) dart.nullFailed(I[0], 305, 21, "value");
      if (!(value != null)) dart.assertFailed(null, I[0], 306, 12, "value != null");
      if (value == this[_offstage]) return;
      this[_offstage] = value;
      this.markNeedsLayoutForSizedByParentChange();
    }
    performLayout() {
      if (!(this.child != null)) dart.assertFailed(null, I[0], 315, 12, "child != null");
      dart.nullCheck(this.child).layout(this.constraints, {parentUsesSize: true});
      if (!dart.test(this.offstage))
        this.geometry = dart.nullCheck(this.child).geometry;
      else
        this.geometry = sliver.SliverGeometry.zero;
    }
    hitTest(result, opts) {
      if (result == null) dart.nullFailed(I[0], 324, 36, "result");
      let mainAxisPosition = opts && 'mainAxisPosition' in opts ? opts.mainAxisPosition : null;
      if (mainAxisPosition == null) dart.nullFailed(I[0], 324, 61, "mainAxisPosition");
      let crossAxisPosition = opts && 'crossAxisPosition' in opts ? opts.crossAxisPosition : null;
      if (crossAxisPosition == null) dart.nullFailed(I[0], 324, 95, "crossAxisPosition");
      return !dart.test(this.offstage) && dart.test(super.hitTest(result, {mainAxisPosition: mainAxisPosition, crossAxisPosition: crossAxisPosition}));
    }
    hitTestChildren(result, opts) {
      if (result == null) dart.nullFailed(I[0], 333, 44, "result");
      let mainAxisPosition = opts && 'mainAxisPosition' in opts ? opts.mainAxisPosition : null;
      if (mainAxisPosition == null) dart.nullFailed(I[0], 333, 69, "mainAxisPosition");
      let crossAxisPosition = opts && 'crossAxisPosition' in opts ? opts.crossAxisPosition : null;
      if (crossAxisPosition == null) dart.nullFailed(I[0], 333, 103, "crossAxisPosition");
      return !dart.test(this.offstage) && this.child != null && dart.notNull(dart.nullCheck(dart.nullCheck(this.child).geometry).hitTestExtent) > 0 && dart.test(dart.nullCheck(this.child).hitTest(result, {mainAxisPosition: mainAxisPosition, crossAxisPosition: crossAxisPosition}));
    }
    paint(context, offset) {
      if (context == null) dart.nullFailed(I[0], 345, 30, "context");
      if (offset == null) dart.nullFailed(I[0], 345, 46, "offset");
      if (dart.test(this.offstage)) return;
      context.paintChild(dart.nullCheck(this.child), offset);
    }
    visitChildrenForSemantics(visitor) {
      if (visitor == null) dart.nullFailed(I[0], 352, 54, "visitor");
      if (dart.test(this.offstage)) return;
      super.visitChildrenForSemantics(visitor);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[0], 359, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T.DiagnosticsPropertyOfbool()).new("offstage", this.offstage));
    }
    debugDescribeChildren() {
      if (this.child == null) return T.JSArrayOfDiagnosticsNode().of([]);
      return T.JSArrayOfDiagnosticsNode().of([dart.nullCheck(this.child).toDiagnosticsNode({name: "child", style: dart.test(this.offstage) ? diagnostics.DiagnosticsTreeStyle.offstage : diagnostics.DiagnosticsTreeStyle.sparse})]);
    }
  };
  (proxy_sliver.RenderSliverOffstage.new = function(opts) {
    let offstage = opts && 'offstage' in opts ? opts.offstage : true;
    if (offstage == null) dart.nullFailed(I[0], 288, 10, "offstage");
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    if (!(offstage != null)) dart.assertFailed(null, I[0], 290, 15, "offstage != null");
    this[_offstage] = offstage;
    proxy_sliver.RenderSliverOffstage.__proto__.new.call(this);
    this.child = sliver;
  }).prototype = proxy_sliver.RenderSliverOffstage.prototype;
  dart.addTypeTests(proxy_sliver.RenderSliverOffstage);
  dart.addTypeCaches(proxy_sliver.RenderSliverOffstage);
  dart.setGetterSignature(proxy_sliver.RenderSliverOffstage, () => ({
    __proto__: dart.getGetters(proxy_sliver.RenderSliverOffstage.__proto__),
    offstage: core.bool
  }));
  dart.setSetterSignature(proxy_sliver.RenderSliverOffstage, () => ({
    __proto__: dart.getSetters(proxy_sliver.RenderSliverOffstage.__proto__),
    offstage: core.bool
  }));
  dart.setLibraryUri(proxy_sliver.RenderSliverOffstage, I[1]);
  dart.setFieldSignature(proxy_sliver.RenderSliverOffstage, () => ({
    __proto__: dart.getFields(proxy_sliver.RenderSliverOffstage.__proto__),
    [_offstage]: dart.fieldType(core.bool)
  }));
  const RenderProxySliver_RenderAnimatedOpacityMixin$36 = class RenderProxySliver_RenderAnimatedOpacityMixin extends proxy_sliver.RenderProxySliver {};
  (RenderProxySliver_RenderAnimatedOpacityMixin$36.new = function(child) {
    proxy_box.RenderAnimatedOpacityMixin$(sliver.RenderSliver)[dart.mixinNew].call(this);
    RenderProxySliver_RenderAnimatedOpacityMixin$36.__proto__.new.call(this, child);
  }).prototype = RenderProxySliver_RenderAnimatedOpacityMixin$36.prototype;
  dart.applyMixin(RenderProxySliver_RenderAnimatedOpacityMixin$36, proxy_box.RenderAnimatedOpacityMixin$(sliver.RenderSliver));
  proxy_sliver.RenderSliverAnimatedOpacity = class RenderSliverAnimatedOpacity extends RenderProxySliver_RenderAnimatedOpacityMixin$36 {};
  (proxy_sliver.RenderSliverAnimatedOpacity.new = function(opts) {
    let opacity = opts && 'opacity' in opts ? opts.opacity : null;
    if (opacity == null) dart.nullFailed(I[0], 386, 32, "opacity");
    let alwaysIncludeSemantics = opts && 'alwaysIncludeSemantics' in opts ? opts.alwaysIncludeSemantics : false;
    if (alwaysIncludeSemantics == null) dart.nullFailed(I[0], 387, 10, "alwaysIncludeSemantics");
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    if (!(opacity != null)) dart.assertFailed(null, I[0], 389, 15, "opacity != null");
    if (!(alwaysIncludeSemantics != null)) dart.assertFailed(null, I[0], 390, 15, "alwaysIncludeSemantics != null");
    proxy_sliver.RenderSliverAnimatedOpacity.__proto__.new.call(this);
    this.opacity = opacity;
    this.alwaysIncludeSemantics = alwaysIncludeSemantics;
    this.child = sliver;
  }).prototype = proxy_sliver.RenderSliverAnimatedOpacity.prototype;
  dart.addTypeTests(proxy_sliver.RenderSliverAnimatedOpacity);
  dart.addTypeCaches(proxy_sliver.RenderSliverAnimatedOpacity);
  dart.setLibraryUri(proxy_sliver.RenderSliverAnimatedOpacity, I[1]);
  dart.trackLibraries("packages/flutter/src/rendering/proxy_sliver.dart", {
    "package:flutter/src/rendering/proxy_sliver.dart": proxy_sliver
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["proxy_sliver.dart"],"names":[],"mappings":"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","file":"../../../../../../packages/flutter/src/rendering/proxy_sliver.dart.lib.js"}');
  // Exports:
  return {
    src__rendering__proxy_sliver: proxy_sliver
  };
}));

//# sourceMappingURL=proxy_sliver.dart.lib.js.map
