define(['dart_sdk'], (function load__packages__collection__src__comparators_dart(dart_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  var comparators = Object.create(dart.library);
  var $codeUnitAt = dartx.codeUnitAt;
  var $rightShift = dartx['>>'];
  var $sign = dartx.sign;
  dart._checkModuleNullSafetyMode(false);
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = ["file:///D:/flutter/.pub-cache/hosted/pub.flutter-io.cn/collection-1.15.0/lib/src/comparators.dart"];
  comparators.equalsIgnoreAsciiCase = function equalsIgnoreAsciiCase(a, b) {
    if (a == null) dart.nullFailed(I[0], 27, 35, "a");
    if (b == null) dart.nullFailed(I[0], 27, 45, "b");
    if (a.length !== b.length) return false;
    for (let i = 0; i < a.length; i = i + 1) {
      let aChar = a[$codeUnitAt](i);
      let bChar = b[$codeUnitAt](i);
      if (aChar === bChar) continue;
      if ((aChar ^ bChar) >>> 0 !== 32) return false;
      let aCharLowerCase = (aChar | 32) >>> 0;
      if (97 <= aCharLowerCase && aCharLowerCase <= 122) {
        continue;
      }
      return false;
    }
    return true;
  };
  comparators.hashIgnoreAsciiCase = function hashIgnoreAsciiCase(string) {
    if (string == null) dart.nullFailed(I[0], 50, 32, "string");
    let hash = 0;
    for (let i = 0; i < string.length; i = i + 1) {
      let char = string[$codeUnitAt](i);
      if (97 <= char && char <= 122) char = char - 32;
      hash = 536870911 & hash + char;
      hash = 536870911 & hash + ((524287 & hash) << 10);
      hash = hash[$rightShift](6);
    }
    hash = 536870911 & hash + ((67108863 & hash) << 3);
    hash = hash[$rightShift](11);
    return 536870911 & hash + ((16383 & hash) << 15);
  };
  comparators.compareAsciiUpperCase = function compareAsciiUpperCase(a, b) {
    if (a == null) dart.nullFailed(I[0], 85, 34, "a");
    if (b == null) dart.nullFailed(I[0], 85, 44, "b");
    let defaultResult = 0;
    for (let i = 0; i < a.length; i = i + 1) {
      if (i >= b.length) return 1;
      let aChar = a[$codeUnitAt](i);
      let bChar = b[$codeUnitAt](i);
      if (aChar === bChar) continue;
      let aUpperCase = aChar;
      let bUpperCase = bChar;
      if (97 <= aChar && aChar <= 122) {
        aUpperCase = aUpperCase - 32;
      }
      if (97 <= bChar && bChar <= 122) {
        bUpperCase = bUpperCase - 32;
      }
      if (aUpperCase !== bUpperCase) return (aUpperCase - bUpperCase)[$sign];
      if (defaultResult === 0) defaultResult = aChar - bChar;
    }
    if (b.length > a.length) return -1;
    return defaultResult[$sign];
  };
  comparators.compareAsciiLowerCase = function compareAsciiLowerCase(a, b) {
    if (a == null) dart.nullFailed(I[0], 122, 34, "a");
    if (b == null) dart.nullFailed(I[0], 122, 44, "b");
    let defaultResult = 0;
    for (let i = 0; i < a.length; i = i + 1) {
      if (i >= b.length) return 1;
      let aChar = a[$codeUnitAt](i);
      let bChar = b[$codeUnitAt](i);
      if (aChar === bChar) continue;
      let aLowerCase = aChar;
      let bLowerCase = bChar;
      if (65 <= bChar && bChar <= 90) {
        bLowerCase = bLowerCase + 32;
      }
      if (65 <= aChar && aChar <= 90) {
        aLowerCase = aLowerCase + 32;
      }
      if (aLowerCase !== bLowerCase) return (aLowerCase - bLowerCase)[$sign];
      if (defaultResult === 0) defaultResult = aChar - bChar;
    }
    if (b.length > a.length) return -1;
    return defaultResult[$sign];
  };
  comparators.compareNatural = function compareNatural(a, b) {
    if (a == null) dart.nullFailed(I[0], 161, 27, "a");
    if (b == null) dart.nullFailed(I[0], 161, 37, "b");
    for (let i = 0; i < a.length; i = i + 1) {
      if (i >= b.length) return 1;
      let aChar = a[$codeUnitAt](i);
      let bChar = b[$codeUnitAt](i);
      if (aChar !== bChar) {
        return comparators._compareNaturally(a, b, i, aChar, bChar);
      }
    }
    if (b.length > a.length) return -1;
    return 0;
  };
  comparators.compareAsciiLowerCaseNatural = function compareAsciiLowerCaseNatural(a, b) {
    if (a == null) dart.nullFailed(I[0], 187, 41, "a");
    if (b == null) dart.nullFailed(I[0], 187, 51, "b");
    let defaultResult = 0;
    for (let i = 0; i < a.length; i = i + 1) {
      if (i >= b.length) return 1;
      let aChar = a[$codeUnitAt](i);
      let bChar = b[$codeUnitAt](i);
      if (aChar === bChar) continue;
      let aLowerCase = aChar;
      let bLowerCase = bChar;
      if (65 <= aChar && aChar <= 90) {
        aLowerCase = aLowerCase + 32;
      }
      if (65 <= bChar && bChar <= 90) {
        bLowerCase = bLowerCase + 32;
      }
      if (aLowerCase !== bLowerCase) {
        return comparators._compareNaturally(a, b, i, aLowerCase, bLowerCase);
      }
      if (defaultResult === 0) defaultResult = aChar - bChar;
    }
    if (b.length > a.length) return -1;
    return defaultResult[$sign];
  };
  comparators.compareAsciiUpperCaseNatural = function compareAsciiUpperCaseNatural(a, b) {
    if (a == null) dart.nullFailed(I[0], 224, 41, "a");
    if (b == null) dart.nullFailed(I[0], 224, 51, "b");
    let defaultResult = 0;
    for (let i = 0; i < a.length; i = i + 1) {
      if (i >= b.length) return 1;
      let aChar = a[$codeUnitAt](i);
      let bChar = b[$codeUnitAt](i);
      if (aChar === bChar) continue;
      let aUpperCase = aChar;
      let bUpperCase = bChar;
      if (97 <= aChar && aChar <= 122) {
        aUpperCase = aUpperCase - 32;
      }
      if (97 <= bChar && bChar <= 122) {
        bUpperCase = bUpperCase - 32;
      }
      if (aUpperCase !== bUpperCase) {
        return comparators._compareNaturally(a, b, i, aUpperCase, bUpperCase);
      }
      if (defaultResult === 0) defaultResult = aChar - bChar;
    }
    if (b.length > a.length) return -1;
    return defaultResult[$sign];
  };
  comparators._compareNaturally = function _compareNaturally(a, b, index, aChar, bChar) {
    if (a == null) dart.nullFailed(I[0], 258, 30, "a");
    if (b == null) dart.nullFailed(I[0], 258, 40, "b");
    if (index == null) dart.nullFailed(I[0], 258, 47, "index");
    if (aChar == null) dart.nullFailed(I[0], 258, 58, "aChar");
    if (bChar == null) dart.nullFailed(I[0], 258, 69, "bChar");
    if (!(aChar != bChar)) dart.assertFailed(null, I[0], 259, 10, "aChar != bChar");
    let aIsDigit = comparators._isDigit(aChar);
    let bIsDigit = comparators._isDigit(bChar);
    if (dart.test(aIsDigit)) {
      if (dart.test(bIsDigit)) {
        return comparators._compareNumerically(a, b, aChar, bChar, index);
      } else if (dart.notNull(index) > 0 && dart.test(comparators._isDigit(a[$codeUnitAt](dart.notNull(index) - 1)))) {
        return 1;
      }
    } else if (dart.test(bIsDigit) && dart.notNull(index) > 0 && dart.test(comparators._isDigit(b[$codeUnitAt](dart.notNull(index) - 1)))) {
      return -1;
    }
    return (dart.notNull(aChar) - dart.notNull(bChar))[$sign];
  };
  comparators._compareNumerically = function _compareNumerically(a, b, aChar, bChar, index) {
    if (a == null) dart.nullFailed(I[0], 283, 32, "a");
    if (b == null) dart.nullFailed(I[0], 283, 42, "b");
    if (aChar == null) dart.nullFailed(I[0], 283, 49, "aChar");
    if (bChar == null) dart.nullFailed(I[0], 283, 60, "bChar");
    if (index == null) dart.nullFailed(I[0], 283, 71, "index");
    if (dart.test(comparators._isNonZeroNumberSuffix(a, index))) {
      let result = comparators._compareDigitCount(a, b, index, index);
      if (result !== 0) return result;
      return (dart.notNull(aChar) - dart.notNull(bChar))[$sign];
    }
    let aIndex = index;
    let bIndex = index;
    if (aChar === 48) {
      do {
        aIndex = dart.notNull(aIndex) + 1;
        if (aIndex === a.length) return -1;
        aChar = a[$codeUnitAt](aIndex);
      } while (aChar === 48);
      if (!dart.test(comparators._isDigit(aChar))) return -1;
    } else if (bChar === 48) {
      do {
        bIndex = dart.notNull(bIndex) + 1;
        if (bIndex === b.length) return 1;
        bChar = b[$codeUnitAt](bIndex);
      } while (bChar === 48);
      if (!dart.test(comparators._isDigit(bChar))) return 1;
    }
    if (aChar != bChar) {
      let result = comparators._compareDigitCount(a, b, aIndex, bIndex);
      if (result !== 0) return result;
      return (dart.notNull(aChar) - dart.notNull(bChar))[$sign];
    }
    while (true) {
      let aIsDigit = false;
      let bIsDigit = false;
      aChar = 0;
      bChar = 0;
      if ((aIndex = dart.notNull(aIndex) + 1) < a.length) {
        aChar = a[$codeUnitAt](aIndex);
        aIsDigit = comparators._isDigit(aChar);
      }
      if ((bIndex = dart.notNull(bIndex) + 1) < b.length) {
        bChar = b[$codeUnitAt](bIndex);
        bIsDigit = comparators._isDigit(bChar);
      }
      if (dart.test(aIsDigit)) {
        if (dart.test(bIsDigit)) {
          if (aChar == bChar) continue;
          break;
        }
        return 1;
      } else if (dart.test(bIsDigit)) {
        return -1;
      } else {
        return (dart.notNull(aIndex) - dart.notNull(bIndex))[$sign];
      }
    }
    let result = comparators._compareDigitCount(a, b, aIndex, bIndex);
    if (result !== 0) return result;
    return (dart.notNull(aChar) - dart.notNull(bChar))[$sign];
  };
  comparators._compareDigitCount = function _compareDigitCount(a, b, i, j) {
    if (a == null) dart.nullFailed(I[0], 360, 31, "a");
    if (b == null) dart.nullFailed(I[0], 360, 41, "b");
    if (i == null) dart.nullFailed(I[0], 360, 48, "i");
    if (j == null) dart.nullFailed(I[0], 360, 55, "j");
    while ((i = dart.notNull(i) + 1) < a.length) {
      let aIsDigit = comparators._isDigit(a[$codeUnitAt](i));
      if ((j = dart.notNull(j) + 1) === b.length) return dart.test(aIsDigit) ? 1 : 0;
      let bIsDigit = comparators._isDigit(b[$codeUnitAt](j));
      if (dart.test(aIsDigit)) {
        if (dart.test(bIsDigit)) continue;
        return 1;
      } else if (dart.test(bIsDigit)) {
        return -1;
      } else {
        return 0;
      }
    }
    if ((j = dart.notNull(j) + 1) < b.length && dart.test(comparators._isDigit(b[$codeUnitAt](j)))) {
      return -1;
    }
    return 0;
  };
  comparators._isDigit = function _isDigit(charCode) {
    if (charCode == null) dart.nullFailed(I[0], 380, 19, "charCode");
    return (dart.notNull(charCode) ^ 48) >>> 0 <= 9;
  };
  comparators._isNonZeroNumberSuffix = function _isNonZeroNumberSuffix(string, index) {
    if (string == null) dart.nullFailed(I[0], 387, 36, "string");
    if (index == null) dart.nullFailed(I[0], 387, 48, "index");
    while ((index = dart.notNull(index) - 1) >= 0) {
      let char = string[$codeUnitAt](index);
      if (char !== 48) return comparators._isDigit(char);
    }
    return false;
  };
  dart.defineLazy(comparators, {
    /*comparators._zero*/get _zero() {
      return 48;
    },
    /*comparators._upperCaseA*/get _upperCaseA() {
      return 65;
    },
    /*comparators._upperCaseZ*/get _upperCaseZ() {
      return 90;
    },
    /*comparators._lowerCaseA*/get _lowerCaseA() {
      return 97;
    },
    /*comparators._lowerCaseZ*/get _lowerCaseZ() {
      return 122;
    },
    /*comparators._asciiCaseBit*/get _asciiCaseBit() {
      return 32;
    }
  }, false);
  dart.trackLibraries("packages/collection/src/comparators.dart", {
    "package:collection/src/comparators.dart": comparators
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["comparators.dart"],"names":[],"mappings":"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","file":"../../../../../../../packages/collection/src/comparators.dart.lib.js"}');
  // Exports:
  return {
    src__comparators: comparators
  };
}));

//# sourceMappingURL=comparators.dart.lib.js.map
